/*  Let's Dance!  A silly little demo synchronizing sound with ASCII character art.  Ken Shmidheiser 20210309*/output file "Let's Dance!"include resources "music.mp3"_window = 1begin enum output 1_txtField_startBtnend enumbegin globalsBoolean   gStoppedTimerRef  gAppTimerend globalslocal fn LoadDancerArray as CFMutableArrayRefCFStringRef       sCFArrayRef        arrCFMutableArrayRef mutArrs = @"o\n.|.\n/\\,O\n\\|.\n>\\,o\n\\|/\n/<,O\n//\n>\\,o\nX\n/<,<o\n\\\n>\\,<O>\n|\n/<,o>\n<|\n>\\\no\n.|.\n>>,o\n<|>\n/<,O\n.|.\n/\\,o\n\\|.\n>\\,O\n\\|/\n/<,o\n//\n>\\,O\nX\n/<,<o\n\\\n>\\,<O>\n|\n/<,o>\n<|\n>\\\nO\n.|.\n>>,o\n<|>\n/<,o\n.|.\n/\\,o\n\\|.\n>\\,o\n\\|/\n/<,o\n//\n>\\,o\nX\n/<,<o\n\\\n>\\,<o>\n|\n/<,o>\n<|\n>\\\nO\n.|.\n>>,o\n<|>\n/<,O\n<\\>\n>\\,o\n<)>\n>>,O\n|\nL"arr = fn StringComponentsSeparatedByString( s, @"," )mutArr = fn MutableArrayWithCapacity( 0 )MutableArrayAddObjectsFromArray( mutArr, @[@"", @"",] )MutableArrayAddObjectsFromArray( mutArr, arr )MutableArrayAddObjectsFromArray( mutArr, arr )MutableArrayAddObjectsFromArray( mutArr, arr )MutableArrayAddObjectsFromArray( mutArr, arr )MutableArrayAddObjectsFromArray( mutArr, @[@"", @"", @"\nüëè"] )end fn = mutArrlocal fn LoadMusic as SoundRefCFURLRef  urlSoundRef  musicurl   = fn BundleURLForResource( fn BundleMain, @"music", @"mp3", NULL )music = fn SoundWithContentsOfURL( url, YES )end fn = musicvoid local fn BuildWindowCGRect rr = fn CGRectMake( 0, 0, 400, 600 )window _window, @"Let's Dance!", r, NSWindowStyleMaskTitled + NSWindowStyleMaskClosableWindowSetBackgroundColor( _window, fn ColorWithRGB( 0.090, 0.090, 0.089, 1.0 ) )r = fn CGRectMake( 20, 54, 360, 525 )textfield _txtField, YES, @"üíÉ", rTextFieldSetBezeled(              _txtField, YES                               )TextFieldSetBezelStyle(           _txtField, NSTextFieldSquareBezel            )TextFieldSetEditable(             _txtField, NO                                )TextFieldSetSelectable(           _txtField, NO                                )TextFieldSetMaximumNumberOfLines( _txtField, 3                                 )TextFieldSetTextColor(            _txtField, fn ColorRed                       )TextFieldSetBackgroundColor(      _txtField, fn ColorBlack                     )ControlSetFontWithName(           _txtField, @"Courier", 340.0                 )ControlSetAlignment(              _txtField, NSTextAlignmentCenter             )ViewPropertySet(                  _txtField, @"music", fn LoadMusic            )ViewPropertySet(                  _txtField, @"array", fn LoadDancerArray      )ViewPropertySetLong(              _txtField, @"index", 0 )r = fn CGRectMake( 20, 15, 360, 24 )button _startBtn,,, @"Let's Dance!", r//,,NSBezelStyleTexturedSquare//ButtonSetBezelColor( _startBtn, fn ColorGray )end fnvoid local fn SetTextCFStringRef tempStrCFArrayRef  mutArrNSInteger   ii = fn ViewPropertyLong( _txtField, @"index" )mutArr = (CFArrayRef)fn ViewProperty( _txtField, @"array" )tempStr = fn ArrayObjectAtIndex( mutArr, i )ControlSetStringValue( _txtField, tempStr )i++ViewPropertySetLong( _txtField, @"index", i )end fnvoid local fn StartTimerTimerRef newTimerif( gStopped == YES )newTimer = fn TimerScheduledWithInterval( 0.235, @fn SetText, NULL, YES )gAppTimer = newTimerTimerFire( gAppTimer )gStopped = NOelseTimerInvalidate( gAppTimer )newTimer = fn TimerScheduledWithInterval( 0.235, @fn SetText, NULL, YES )gAppTimer = newTimergStopped = NOend ifend fnvoid local fn PrepareToPlaySoundRef musicViewPropertySetLong( _txtField, @"index", 0 )music = fn ViewProperty( _txtField, @"music" )if fn SoundIsPlaying( music ) then fn SoundStop( music )ControlSetFontWithName( _txtField, @"Courier", 138.0 )ControlSetStringValue( _txtField, @"" )SoundSetCurrentTime( music, 0 )SoundSetVolume( music, 0.5 )fn SoundPlay( music )fn StartTimerend fnvoid local fn DoDialog( ev as long, tag as long, wnd as long )select (ev)case _btnClickselect (tag)case _startBtn : fn PrepareToPlayend selectcase _soundDidFinishPlaying : ControlSetFontWithName( _txtField, @"Courier", 340.0 ) : ControlSetStringValue( _txtField, @"üíÉ" )case _windowWillClose : endend selectend fnon dialog fn DoDialogfn BuildWindowHandleEvents