/*  Background Drawing 1  Bernie Wylde 20180712*/_window = 1begin enum 1_drawView_drawBtnend enumbegin globalsCFMutableArrayRef gPathslong gCountend globalsvoid local fn DrawInViewlong   indexwindow output _windowif ( gPaths )for index = 0 to gCountBezierPathStroke( fn ArrayObjectAtIndex( gPaths, index ) )nextend ifend fnvoid local fn Finishedfn SoundPlay( fn SoundNamed(@"Frog") )button _drawBtn, YES,,,,,, _windowend fnvoid local fn TriggerRedrawif ( fn WindowExists(_window) )window output _windowViewSetNeedsDisplay( _drawView )end ifend fnvoid local fn BackgroundFunction( array as CFMutableArrayRef )long   count = fn ArrayCount( gPaths ), indexfor index = 0 to count - 1delay 700gCount = indexObjectCallFunctionOnMainThread( @fn TriggerRedraw, NULL, YES )nextObjectCallFunctionOnMainThread( @fn Finished, NULL, YES )end fnvoid local fn StartDrawingbutton _drawBtn, NOgCount = 0ObjectCallFunctionInBackground( @fn BackgroundFunction, gPaths )end fnlocal fn LinePath( pt1 as CGPoint, pt2 as CGPoint, roundLineCap as Boolean ) as BezierPathRefBezierPathRef path = fn BezierPathInitBezierPathMoveToPoint( path, pt1 )BezierPathLineToPoint( path, pt2 )BezierPathSetLineWidth( path, 3.0 )if ( roundLineCap ) then BezierPathSetLineCapStyle( path, NSLineCapStyleRound )end fn = pathvoid local fn BuildPathsArraygPaths = fn CFArrayCreateMutable( _kCFAllocatorDefault, 0, @kCFTypeArrayCallBacks )MutableArrayAddObject( gPaths, fn LinePath( CGPointZero, CGPointZero, NO ) )MutableArrayAddObject( gPaths, fn LinePath( fn CGPointMake(1.5,1.5), fn CGPointMake(498.5,1.5), YES ) )MutableArrayAddObject( gPaths, fn LinePath( fn CGPointMake(125,1.5), fn CGPointMake(125,500), NO ) )MutableArrayAddObject( gPaths, fn LinePath( fn CGPointMake(125,498.5), fn CGPointMake(376.5,498.5), NO ) )MutableArrayAddObject( gPaths, fn LinePath( fn CGPointMake(125,400), fn CGPointMake(225,498.5), NO ) )MutableArrayAddObject( gPaths, fn LinePath( fn CGPointMake(375,498.5), fn CGPointMake(375,400), NO ) )BezierPathRef path = fn BezierPathWithOvalInRect( fn CGRectMake(335,320,80,80) )BezierPathSetLineWidth( path, 3.0 )MutableArrayAddObject( gPaths, path )MutableArrayAddObject( gPaths, fn LinePath( fn CGPointMake(375,320), fn CGPointMake(375,170), YES ) )MutableArrayAddObject( gPaths, fn LinePath( fn CGPointMake(375,170), fn CGPointMake(300,95), YES ) )MutableArrayAddObject( gPaths, fn LinePath( fn CGPointMake(375,170), fn CGPointMake(450,95), YES ) )MutableArrayAddObject( gPaths, fn LinePath( fn CGPointMake(375,245), fn CGPointMake(300,320), YES ) )MutableArrayAddObject( gPaths, fn LinePath( fn CGPointMake(375,245), fn CGPointMake(450,320), YES ) )end fnvoid local fn BuildWindowswindow _window, @"Background Drawing", (0,0,540,581), NSWindowStyleMaskTitledview subclass _drawView, (20,61,500,500)button _drawBtn,,, @"Draw", (230,13,81,32)end fnvoid local fn DoDialog( ev as long, tag as long, wnd as long )select ( ev )case _btnClickselect ( tag )case _drawBtn : fn StartDrawingend selectcase _viewDrawRectselect ( tag )case _drawView : fn DrawInViewend selectend selectend fnfn BuildPathsArrayfn BuildWindowson dialog fn DoDialogHandleEvents