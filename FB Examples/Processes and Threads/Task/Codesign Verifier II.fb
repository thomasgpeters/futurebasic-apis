/* Codesign Verifier II Utility to verify if a Mac application is codesigned and, if so, returns information about the codesigning. Ken Shmidheiser Nov. 10, 2018  Updated to use codesign verification commands. Security.framework no longer needed.*/output "Codesign Verifier II"_window = 1begin enum output 1_scrollView_textView_imageView_openBtnend enum_openPanel = 1void local fn BuildWindowNSInteger  wndStyleMaskwndStyleMask  = NSWindowStyleMaskTitledwndStyleMask += NSWindowStyleMaskClosablewndStyleMask += NSWindowStyleMaskMiniaturizablewndStyleMask += NSWindowStyleMaskResizableCGRect r = ( 0, 0, 600, 350 )window _window, @"Codesign Verifier II", r, wndStyleMaskWindowSetContentMinSize( _window, fn CGSizeMake(313,171) )r = fn CGRectMake( 118, 61, 462, 269 )scrollview _scrollView, r, NSLineBorderViewSetAutoresizingMask( _scrollView, NSViewWidthSizable + NSViewHeightSizable )textview _textView,, _scrollViewTextViewSetTextContainerInset( _textView, fn CGSizeMake( 8, 8 ) )r = fn CGRectMake( 17, 240, 90, 90 )imageview _imageView, YES, , r, NSImageScaleProportionallyUpOrDown, NSImageAlignCenter, NSImageFrameGrooveViewSetAutoresizingMask( _imageView, NSViewMaxXMargin + NSViewMinYMargin )r = fn CGRectMake( 401, 13, 185, 32 )button _openBtn, YES, , @"Choose an application...", rViewSetAutoresizingMask( _openBtn, NSViewMinXMargin + NSViewMaxYMargin )end fnvoid local fn DoDialog( ev as long, tag as long, wnd as long, obj as CFTypeRef )CFStringRef    appPathImageRef       appIconCFArrayRef     codesignArgsTaskRef        taskPipeRef        pFileHandleRef  fhCFDataRef      dataReadCFStringRef    resultStrselect ( ev )case _btnClickselect ( tag )case _openBtnopenpanel _openPanel, @"Choose an application...",,,,YESOpenPanelSetAllowedFileTypes( _openPanel, @[@"app"] )end selectcase _openPanelDidEndif ( tag == NSModalResponseOK )appPath = fn URLPath( (CFURLRef)obj )WindowSetTitle( _window, appPath )appIcon = fn WorkspaceIconForFileAtURL( (CFURLRef)obj )ImageViewSetImage( _imageView, appIcon )task = fn TaskInitTaskSetExecutableURL( task, fn URLFileURLWithPath( @"/usr/bin/codesign" ) )codesignArgs = @[@"-dv", @"--verbose=4", appPath]TaskSetArguments( task, codesignArgs )p = fn PipeInitTaskSetStandardError( task, p )fh = fn PipeFileHandleForReading( p )fn TaskLaunch( task, NULL )TaskWaitUntilExit( task )dataRead = fn FileHandleReadDataToEndOfFile( fh, NULL )resultStr = fn StringWithData( dataRead, NSUTF8StringEncoding )TextSetString( _textView, resultStr )else// User cancelledend ifcase _windowWillClose : endend selectend fnon dialog fn DoDialogfn BuildWindowHandleEvents