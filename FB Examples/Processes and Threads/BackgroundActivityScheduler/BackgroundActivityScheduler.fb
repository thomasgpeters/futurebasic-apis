/*  BackgroundActivityScheduler  A task scheduler suitable for low priority operations that can run in the background*/include "NSLog.incl"void local fn MyMainThreadFunctionNSLog(@"Fired: %@",date(@"HH:mm:ss") )end fnlocal fn MyActivityHandler( ref as BackgroundActivitySchedulerRef, userData as ptr )NSBackgroundActivityResult   resultif ( fn BackgroundActivitySchedulerShouldDefer(ref) )result = NSBackgroundActivityResultDeferredelseObjectCallFunctionOnMainThread( @fn MyMainThreadFunction, NULL, NO )result = NSBackgroundActivityResultFinishedend if//BackgroundActivitySchedulerInvalidate(ref)// stop activityend fn = resultvoid local fn RunActivityBackgroundActivitySchedulerRef ref = fn BackgroundActivitySchedulerWithIdentifier(@"com.futurebasic.schedulerdemo")BackgroundActivitySchedulerSetRepeats( ref, YES )BackgroundActivitySchedulerSetInterval( ref, 2 )BackgroundActivitySchedulerSetTolerance( ref, 1 )NSLog(@"Background activity scheduled...")BackgroundActivitySchedulerSchedule( ref, @fn MyActivityHandler, NULL )end fnvoid local fn Buildwindowwindow 1, @"BackgroundActivityScheduler", (0,0,480,360)button 1,,, @"Start"end fnvoid Local fn DoDialog( ev as long, tag as long )select ( ev )case _btnClick : fn RunActivityend selectend fnfn BuildWindowon dialog fn DoDialogHandleEvents