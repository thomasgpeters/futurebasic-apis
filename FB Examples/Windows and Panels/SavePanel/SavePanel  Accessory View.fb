/*  SavePanel Accessory View*/include "NSLog.incl"// window_window = 1_saveBtn = 1// save panel_savePanel = 1void local fn MyAccessoryBtnClick( tag as long, wnd as long, pop as ptr )CFStringRef   typeselect ( fn PopUpButtonIndexOfSelectedItem(pop) )case 0 : type = @"com.microsoft.bmp"case 1 : type = @"com.compuserve.gif"case 2 : type = @"public.jpeg"case 3 : type = @"public.png"case elsetype = @"public.tiff"end selectsavepanel _savePanel,, typeend fnlocal fn BuildAccessoryView as ViewRef// build off-screen view and popupViewRef aView = fn ViewInit( 0, fn CGRectMake(0,0,134,41) )PopUpButtonRef pop = fn PopUpButtonInit( 3, fn CGRectMake(8,7,119,26) )PopUpButtonAddItemsWithTitles( pop, @[@"BMP",@"GIF",@"JPEG",@"PNG",@"TIFF"] )ControlSetActionCallback( pop, @fn MyAccessoryBtnClick, pop )ViewAddSubview( aView, pop )end fn = aViewvoid local fn ShowSavePanel// optionsSavePanelSetExtensionHidden( _savePanel, NO )// set accessory viewSavePanelSetAccessoryView( _savePanel, fn BuildAccessoryView )// run the panelsavepanel _savePanel, @"Save a file", @"com.microsoft.bmp",,,, YESend fnvoid local fn DoDialog( ev as long, tag as long, wnd as long, obj as CFTypeRef )select ( ev )case _btnClickselect ( tag )case _saveBtn : fn ShowSavePanelend selectcase _savePanelDidEndif ( obj )NSLog(@"%@",obj)// do something with url - such as write the file using the urlelseNSLog(@"User cancelled")end ifend selectend fnwindow 1, @"SavePanel w accessory view", (0,0,550,400)button 1,,, @"Saveâ€¦"on dialog fn DoDialogHandleEvents