/*  try demo 2*/include "NSLog.incl"void local fn MyFunction3CFStringRef objNSLog(@"\nMyFunction3")CFArrayRef array = @[@"Alpha",@"Bravo",@"Charlie",@"Echo"]obj = fn ArrayObjectAtIndex( array, 4 )// if exception, go to catch block that's in the same function as try block --->NSLog(@"%@",obj)end fnvoid local fn MyFunction2NSLog(@"\nMyFunction2")fn MyFunction3end fnvoid local fn MyFunction1NSLog(@"\nMyFunction1")fn MyFunction2end fnvoid local fn TestExceptionRef etryNSLog(@"-try-")fn MyFunction1end trycatch ( e )NSLog(@"\n-catch-\n%@: %@",fn ExceptionName(e),fn ExceptionReason(e))end catchfinally// code inside the finally block is always executed whether an exception is thrown or notNSLog(@"\n-finally-\ncleanup")// ... cleanupend finallyend fnfn TestHandleEvents