/*  Animated Fruit SpriteKit Demo  Demonstrates some basic SpriteKit concepts in CocoaUI,  including grouping and inchaining actions.  Ken Shmidheiser  17 March 2020  macOS 10.12+*/include "Tlbx SpriteKit.incl"_window = 1begin enum output 1_skView_quitBtnend enumvoid local fn BuildWindowNSInteger   wndStyleMaskwndStyleMask  = NSWindowStyleMaskTitledwndStyleMask += NSWindowStyleMaskClosablewndStyleMask += NSWindowStyleMaskMiniaturizableCGRect r = (0,0,600,500)window _window, @"SpriteKit Demo", r, wndStyleMaskWindowSetBackgroundColor( _window, fn ColorBlack )r = fn CGRectMake( 0, 50, 600, 450 )skview _skView, r, _windowSKViewSetShowsDrawCount( _skView, YES )SKViewSetShowsFPS( _skView, YES )SKViewSetShowsNodeCount( _skView, YES )r = fn CGRectMake( 495, 15, 90, 24 )button _quitBtn, YES, , @"Quit", r, NSButtonTypeMomentaryLight, NSBezelStyleSmallSquare, _windowButtonSetBordered( _quitBtn, NO )ButtonSetBackgroundColor( _quitBtn, fn ColorDarkGray )ButtonSetTitleColor( _quitBtn, fn ColorWhite )end fnvoid local fn ShowTextCFArrayRef      allEmoji, nodeArrayfloat           distance, sceneWidth, sceneHeightNSUInteger      i, countCFStringRef     tempStrSKLabelNodeRef  nodeCGSize          sizeSKActionRef     delayAction, scaleUpAction, scaleDownAction, rotateActionSKActionRef     scalingActions, waitAction, repeatAction, actionSequencesceneWidth  = 600.0sceneHeight = 450.0distance    = sceneWidth / 5SKSceneRef scene = fn SKSceneWithSize( fn CGSizeMake( sceneWidth, sceneHeight ) )SKSceneSetBackgroundColor( scene, fn ColorBlack )SKSceneSetScaleMode( scene, SKSceneScaleModeAspectFit )allEmoji = @[@"üçé", @"üçã", @"üçê", @"üçä", @"üçâ"]count = fn ArrayCount( allEmoji )for i = 0 to count -1tempStr = allEmoji[i]node = fn SKLabelNodeWithText( tempStr )SKLabelNodeSetFontColor( node, fn ColorYellow )SKLabelNodeSetFontName( node, @"Menlo" )SKLabelNodeSetFontSize( node, 60.0 )SKLabelNodeSetVerticalAlignmentMode( node, SKLabelVerticalAlignmentModeCenter )SKLabelNodeSetHorizontalAlignmentMode( node, SKLabelHorizontalAlignmentModeCenter )SKNodeSetPosition( node, fn CGPointMake( distance * ( i + 0.5  ), sceneHeight / 2 ) )SKNodeInsertChild( scene, node, i )nextSKViewPresentScene( _skView, scene )nodeArray = fn SKNodeChildren( scene )count = fn ArrayCount( nodeArray )for i = 0 to count -1delayAction         = fn SKActionWaitForDuration( i * 0.2 )scaleUpAction       = fn SKActionScaleBy( 2.5, 0.3 )size                = fn StringSizeWithAttributes( allEmoji[i], NULL )scaleDownAction     = fn SKActionScaleToSize( size, 0.3 )scalingActions      = fn SKActionSequence( @[scaleUpAction, scaleDownAction] )rotateAction        = fn SKActionRotateByAngle( PI * 2, 0.5 )scalingActions      = fn SKActionGroup( @[scalingActions, rotateAction] )waitAction          = fn SKActionWaitForDuration( 1.0 )actionSequence      = fn SKActionSequence( @[scalingActions, waitAction] )repeatAction        = fn SKActionRepeatActionForever( actionSequence )actionSequence      = fn SKActionSequence( @[delayAction, repeatAction] )SKNodeRunAction( nodeArray[i], actionSequence )nextend fnvoid local fn DoDialog( ev as long, tag as long, wnd as long )select (ev)case _btnClickselect (tag)case _quitBtn : endend selectcase _windowWillClose : endend selectend fnon dialog fn DoDialogfn BuildWindowfn ShowTextHandleEvents