/*  SpriteKit GIF Animation Demo  Demonstrates how to parse out frames in a GIF image and load them  as an array of SKTextures to be played as an animation with SpriteKit.  Ken Shmidheiser  20 March 2020  macOS 10.12+*/output file "SpriteKit GIF Animation"include "Tlbx SpriteKit.incl"include resources "bee.gif"_openPanel = 1_window = 1begin enum output 1_skView_playBtn_quitBtnend enumvoid local fn BuildWindowlong   wndStyleMaskCGRect rwndStyleMask  = NSWindowStyleMaskTitledwndStyleMask += NSWindowStyleMaskClosablewndStyleMask += NSWindowStyleMaskMiniaturizabler = fn CGRectMake( 0, 0, 600, 500 )window _window, @"SpriteKit GIF Animation", r, wndStyleMaskWindowSetBackgroundColor( _window, fn ColorBlack )r = fn CGRectMake( 0, 50, 600, 450 )skview _skView, r, _window// SKViewSetShowsDrawCount( _skView, YES )// SKViewSetShowsFPS( _skView, YES )// SKViewSetShowsNodeCount( _skView, YES )r = fn CGRectMake( 498, 15, 90, 24 )button _quitBtn,,, @"Quit", r, NSButtonTypeMomentaryLight, NSBezelStyleSmallSquare, _windowButtonSetBordered( _quitBtn, NO )ButtonSetBackgroundColor( _quitBtn, fn ColorDarkGray )ButtonSetTitleColor( _quitBtn, fn ColorWhite )end fnlocal fn ConvertGIFToImageSequence as CFMutableArrayRefCFURLRef           urlCFDictionaryRef    gifOptionsCGImageSourceRef   imageSourceNSUInteger         i, framesCountCGImageRef         cgImageRefImageRef           tempImageCFMutableArrayRef  imageMutArrayCGSize             sizeurl = fn BundleURLForImageResource( fn BundleMain, @"bee" )size = fn CGSizeMake( 800, 600 )gifOptions = @{ kCGImageSourceShouldAllowFloat:@(YES), kCGImageSourceCreateThumbnailWithTransform:@(YES), kCGImageSourceCreateThumbnailFromImageAlways:@(YES) }imageSource = fn CGImageSourceCreateWithURL( url, gifOptions )imageMutArray = fn MutableArrayWithCapacity( 0 )framesCount = fn CGImageSourceGetCount( imageSource )for i = 0 to framesCount - 1cgImageRef = fn CGImageSourceCreateImageAtIndex( imageSource, i, NULL )tempImage = fn ImageWithCGImage( cgImageRef, size )MutableArrayAddObject( imageMutArray, tempImage )nextCFRelease( imageSource )CGImageRelease( cgImageRef )end fn = imageMutArraylocal fn CreateScene as SKSceneRefSKSceneRef   sceneCGRect       rCGSize       sizer = fn ViewFrame( _skView )size = r.sizescene = fn SKSceneWithSize( size )SKSceneSetBackgroundColor( scene, fn ColorBlack )SKSceneSetScaleMode( scene, SKSceneScaleModeAspectFit )SKViewPresentScene( _skView, scene )end fn = scenevoid local fn BuildSKViewCFMutableArrayRef  imageArray, framesfloat              sceneWidth, sceneHeightSKTextureRef       textureSKSpriteNodeRef    nodeImageRef           imageCGRect             rCGSize             sizer = fn ViewFrame( _skView )size = r.sizesceneWidth  = size.widthsceneHeight = size.heightframes = fn MutableArrayWithCapacity(0)imageArray = fn ConvertGIFToImageSequencefor image in imageArraytexture = fn SKTextureWithImage( image )MutableArrayAddObject( frames, texture )nextnode = fn SKSpriteNodeWithTextureSize( fn ArrayFirstObject( frames ), size )SKNodeSetPosition( node, fn CGPointMake( sceneWidth/2, sceneHeight/2 ) )SKNodeRunAction( node, fn SKActionRepeatActionForever( fn SKActionAnimateWithTextures( frames, 0.02 ) ) )SKNodeAddChild( fn CreateScene, node )end fnvoid local fn DoDialog( ev as long, tag as long )select (ev)case _btnClickselect (tag)case _quitBtn : endend selectcase _windowShouldClose : endend selectend fnon dialog fn DoDialogfn BuildWindowfn CreateScenefn BuildSKViewHandleEvents