/*  SceneKit Shadowed Cube  Ken Shmidheiser  October 2022  https://code.tutsplus.com/tutorials/an-introduction-to-scenekit-fundamentals--cms-23847*/include "Tlbx SceneKit.incl"_window = 1begin enum output 1_sceneViewend enumlocal fn DegreesToRadians( degrees as float ) as floatend fn = degrees * ( M_PI / 180 )local fn LightedCube as SCNSceneRefSCNSceneRef   scene = fn SCNSceneInitSCNNodeRef rootNode = fn SCNSceneRootNode( scene )SCNCameraRef   camera = fn SCNCameraInitSCNNodeRef cameraNode = fn SCNNodeInitSCNNodeSetCamera( cameraNode, camera )SCNNodeSetPosition( cameraNode, fn SCNVector3Make( -3.0, 3.0, 3.0 ) )SCNLightRef       ambientLight = fn SCNLightInitSCNLightSetType(  ambientLight, SCNLightTypeAmbient )// SCNLightSetColor( ambientLight, fn ColorWithRGB( 0.2, 0.2, 0.2, 1.0 ) )SCNLightSetColor( ambientLight, fn ColorDarkGray )SCNNodeSetLight( cameraNode, ambientLight )SCNBoxRef cubeGeometry = fn SCNBoxInit( 1.0, 1.0, 1.0, 0.0 )SCNNodeRef    cubeNode = fn SCNNodeInitSCNNodeSetGeometry( cubeNode, cubeGeometry )SCNPlaneRef planeGeometry = fn SCNPlaneInit( 50.0, 50.0 )SCNNodeRef      planeNode = fn SCNNodeInitSCNNodeSetGeometry(    planeNode, planeGeometry )SCNNodeSetEulerAngles( planeNode, fn SCNVector3Make( fn DegreesToRadians( - 90.0 ), 0.0, 0.0 ) )SCNNodeSetPosition(    planeNode, fn SCNVector3Make( 0.0, -0.5, 0.0 ) )SCNMaterialRef redMaterial = fn SCNMaterialInitSCNMaterialPropertySetContents( fn SCNMaterialDiffuse( redMaterial ), fn ColorRed )SCNGeometrySetFirstMaterial( cubeGeometry, redMaterial )SCNMaterialRef greenMaterial = fn SCNMaterialInitSCNMaterialPropertySetContents( fn SCNMaterialDiffuse( greenMaterial ), fn ColorGreen )SCNGeometrySetFirstMaterial( planeGeometry, greenMaterial )SCNLightRef light = fn SCNLightInit// SCNLightSetType( light, SCNLightTypeIES )// SCNLightSetType( light, SCNLightTypeAmbient )// SCNLightSetType( light, SCNLightTypeDirectional )// SCNLightSetType( light, SCNLightTypeOmni )// SCNLightSetType( light, SCNLightTypeProbe )SCNLightSetType( light, SCNLightTypeSpot )// SCNLightSetType( light, SCNLightTypeDirectional )// SCNLightSetType( light, SCNLightTypeArea )SCNLightSetSpotInnerAngle( light, 30.0 )SCNLightSetSpotOuterAngle( light, 80.0 )SCNLightSetCastsShadow(    light,  YES )SCNNodeRef          lightNode = fn SCNNodeInitSCNNodeSetLight(    lightNode, light )SCNNodeSetPosition( lightNode, fn SCNVector3Make( 1.5, 1.5, 1.5 ) )SCNLookAtConstraintRef constraint = fn SCNLookAtConstraintInit( cubeNode )SCNLookAtConstraintSetGimbalLockEnabled( constraint, YES )SCNNodeSetConstraints( cameraNode, @[constraint] )SCNNodeSetConstraints( lightNode,  @[constraint] )SCNNodeAddChildNode( rootNode, lightNode  )SCNNodeAddChildNode( rootNode, cameraNode )SCNNodeAddChildNode( rootNode, cubeNode   )SCNNodeAddChildNode( rootNode, planeNode  )end fn = scenevoid local fn BuildWindowwindow _window, @"SceneKit", (0,0,600,600)scnview _sceneView, fn LightedCube, (0,0,600,600), ,_windowSCNViewSetBackgroundColor( _sceneView, fn ColorBlue )SCNViewSetAllowsCameraControl( _sceneView, YES )end fnvoid local fn DoDialog( ev as long, tag as long, wnd as long )select (ev)case _windowWillClose : endend selectend fnon dialog fn DoDialogfn BuildWindowHandleEvents