/*  TableViewHeaderColors1  With this option, the colors are assigned to the header cell in the user dialog event handler*/void local fn CreateTableDataCFMutableArrayRef        arrayCFMutableDictionaryRef   dictCFIndex                  row, colCFStringRef              identifier, stringarray = fn TableViewData(1)for row = 0 to 100dict = fn MutableDictionaryWithCapacity(0)for col = 0 to 4identifier = fn StringWithFormat( @"Col%ld", col )string = fn StringWithFormat( @"Cell %ld,%ld", row, col )MutableDictionarySetObjectForKey( dict, string, identifier )next colMutableArrayAddObject( array, dict )next rowTableViewReloadData( 1 )end fnvoid local fn BuildWindownibwindow 1, @"Window"// force subclassing of header cell so it will trigger dialog eventsTableViewSetHeaderTextColor( 1, fn ColorText )fn CreateTableDataend fnvoid local fn DoDialog( ev as long, tag as long, wnd as long, obj as CFTypeRef )CFStringRef   identifierColorRef      color = NULLselect ( ev )case _textFieldCellTextColoridentifier = fn TableHeaderCellColumnIdentifier( obj )// with this dialog event, obj contains a TableHeaderCellRefif ( fn StringIsEqual( identifier, @"Col0" ) ) then color = fn ColorRedif ( fn StringIsEqual( identifier, @"Col1" ) ) then color = fn ColorGreenif ( fn StringIsEqual( identifier, @"Col2" ) ) then color = fn ColorBlueif ( fn StringIsEqual( identifier, @"Col3" ) ) then color = fn ColorMagentaif ( fn StringIsEqual( identifier, @"Col4" ) ) then color = fn ColorOrangeif ( color ) then TextFieldCellEventSetTextColor( color )end selectend fnfn BuildWindowon dialog fn DoDialogHandleEvents