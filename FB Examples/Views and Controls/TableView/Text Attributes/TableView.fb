_window = 1_tableView = 1local fn IsDarkMode as BOOLend fn = ( fn UserDefaultsObject(@"AppleInterfaceStyle") != NULL )local fn AttributedStringWithFont( string as CFStringRef, name as CFStringRef, size as CGFloat ) as CFMutableAttributedStringRefCFMutableAttributedStringRef aString = fn MutableAttributedStringWithString( string )MutableAttributedStringSetFontWithName( aString, name, size )end fn = aStringlocal fn AttributedStringWithFontAndColor( string as CFStringRef, fontName as CFStringRef, fontSize as CGFloat, textCol as ColorRef ) as CFMutableAttributedStringRefCFMutableAttributedStringRef aString = fn MutableAttributedStringWithString( string )MutableAttributedStringSetFontWithName( aString, fontName, fontSize )MutableAttributedStringSetForegroundColor( aString, textCol )end fn = aStringlocal fn AttributedStringWithShadow( string as CFStringRef, offset as CGSize, blur as CGFloat, col as ColorRef ) as CFMutableAttributedStringRefCFMutableAttributedStringRef aString = fn MutableAttributedStringWithString( string )MutableAttributedStringSetFont( aString, fn FontSystemFontOfSize(30) )MutableAttributedStringSetShadow( aString, offset, blur )if ( col ) then MutableAttributedStringSetShadowColor( aString, col )end fn = aStringvoid local fn CreateTableDataCFMutableArrayRef tableData = fn TableViewData(_tableView)MutableArrayAddObject( tableData, fn MutableAttributedStringWithAttributes( @"Alpha", @{NSFontAttributeName:fn FontSystemFontOfSize(30)} ) )MutableArrayAddObject( tableData, fn AttributedStringWithFontAndColor( @"Bravo", @"Times-BoldItalic", 30, fn ColorRed ) )MutableArrayAddObject( tableData, fn MutableAttributedStringWithAttributes( @"Charlie", @{NSFontAttributeName:fn FontSystemFontOfSize(30)} ) )MutableArrayAddObject( tableData, fn AttributedStringWithFont( @"Delta", @"Menlo-Bold", 30 ) )MutableArrayAddObject( tableData, fn AttributedStringWithShadow( @"Echo", fn CGSizeMake(1.5,1.5), 1, fn ColorRed ) )MutableArrayAddObject( tableData, fn MutableAttributedStringWithAttributes( @"FutureBasic", @{NSFontAttributeName:fn FontSystemFontOfSize(30),NSForegroundColorAttributeName:fn ColorWithCalibratedRGB(0.05,0.38,0.01,1.0)} ) )MutableArrayAddObject( tableData, fn AttributedStringWithFont( @"Golf", @"Courier", 30 ) )MutableArrayAddObject( tableData, fn MutableAttributedStringWithAttributes( @"Hotel", @{NSFontAttributeName:fn FontSystemFontOfSize(30)} ) )MutableArrayAddObject( tableData, fn AttributedStringWithFontAndColor( @"India", @"Helvetica-Bold", 30, fn ColorMagenta ) )MutableArrayAddObject( tableData, fn MutableAttributedStringWithAttributes( @"Juliet", @{NSFontAttributeName:fn FontSystemFontOfSize(30),NSUnderlineStyleAttributeName:@(NSUnderlineStyleDouble)} ) )MutableArrayAddObject( tableData, fn MutableAttributedStringWithAttributes( @"kilo", @{NSFontAttributeName:fn FontSystemFontOfSize(30)} ) )MutableArrayAddObject( tableData, fn MutableAttributedStringWithAttributes( @"Lima", @{NSFontAttributeName:fn FontWithName(@"Times-BoldItalic",30),NSForegroundColorAttributeName:fn ColorSystemBlue} ) )TableViewReloadData(_tableView)end fnvoid local fn BuildWindownibwindow _window, @"Window"fn CreateTableDataend fnvoid local fn DoDialog( ev as long, tag as long, wnd as long, obj as CFTypeRef )BezierPathRef pathselect ( ev )case _tableViewRowViewDialogEventSetView( fn TableRowViewInit )case _tableRowViewDrawSelectionInRectpath = fn BezierPathWithRect( fn DialogEventRect )if ( fn IsDarkMode )ColorSet( fn ColorWithCalibratedRGB(0.31,0.36,0.43,1.0) )elseColorSet( fn ColorWithCalibratedRGB(0.0,0.0,1.0,0.2) )end if			BezierPathFill(path)end selectend fnfn BuildWindowon dialog fn DoDialogHandleEvents