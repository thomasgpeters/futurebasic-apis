/*  TableButton  Button and TextField in same cell*/// identifier#define CUSTOM_IDENTIFIER @"custom"// keys#define SDK_KEY @"sdk"#define FIX_KEY @"fix"_window = 1begin enum 1000_tableView_tableTextField_tableButtonend enumvoid local fn MyCustomCellCallback( tableTag as long, identifier as CFStringRef, row as NSInteger, vw as CFTypeRef, userData as ptr )CFDictionaryRef dict = fn ArrayObjectAtIndex( fn TableViewData( tableTag ), row )select ( fn ViewTag( vw ) )case _tableTextFieldControlSetStringValue( vw, fn DictionaryObjectForKey( dict, SDK_KEY ) )case _tableButtonBOOL flag = fn NumberBoolValue( fn DictionaryObjectForKey( dict, FIX_KEY ) )if ( flag )ButtonSetTitle( vw, @"Restore" )elseButtonSetTitle( vw, @"Fix" )end ifend selectend fnvoid local fn TableDataSetValue( value as CFTypeRef, key as CFStringRef, index as NSInteger )CFMutableDictionaryRef dict = (CFMutableDictionaryRef)fn ArrayObjectAtIndex( fn TableViewData(_tableView), index )MutableDictionarySetObjectForKey( dict, value, key )end fnvoid local fn TableDataAddRow( txt as CFStringRef, flag as BOOL )// make the dictionary mutable to make it easier to change just one key/value laterMutableArrayAddObject( fn TableViewData(_tableView), fn ObjectMutableCopy( @{SDK_KEY:txt,FIX_KEY:@(flag)} ) )end fnvoid local fn TableDataCreatefn TableDataAddRow( @"MacOSX10.10.sdk", NO )fn TableDataAddRow( @"MacOSX10.11.sdk", NO )fn TableDataAddRow( @"MacOSX10.12.sdk", YES )fn TableDataAddRow( @"MacOSX10.13.sdk", YES )TableViewReloadData( _tableView )end fnvoid local fn BuildWindownibwindow _window, @"Window"TableViewSetCustomCellCallback( _tableView, CUSTOM_IDENTIFIER, @fn MyCustomCellCallback, NULL )fn TableDataCreateend fnvoid local fn DoDialog( ev as long, tag as long, wnd as long, obj as CFTypeRef )select ( ev )case _btnClickselect ( tag )case _tableButtonCFMutableArrayRef tableData = fn TableViewData( _tableView )NSInteger row = fn TableViewRowForView( _tableView, obj )CFMutableDictionaryRef dict = (CFMutableDictionaryRef)fn ArrayObjectAtIndex( tableData, row )BOOL flag = ( fn NumberBoolValue(fn DictionaryObjectForKey( dict, FIX_KEY )) == NO )fn TableDataSetValue( @(flag), FIX_KEY, row )TableViewReloadData( _tableView )end selectcase _windowWillCloseendend selectend fnfn BuildWindowon dialog fn DoDialogHandleEvents