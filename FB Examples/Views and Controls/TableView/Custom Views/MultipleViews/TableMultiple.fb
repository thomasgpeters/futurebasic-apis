/*  TableMultipleCustom  Four columns    Col 0: checkbox    Col 1: text    Col 2: popup button    Col 3: level indicator (rating)*/// keys/identifiers#define CHECK_KEY @"check"#define TEXT_KEY @"text"#define POPUP_KEY @"popup"#define RATING_KEY @"rating"_window = 1begin enum 1000_tableView_tableCheckbox_tableTextField_tablePopUp_tableRatingend enumvoid local fn MyCustomCellCallback( tag as long, identifier as CFStringRef, row as NSInteger, vw as CFTypeRef, userData as ptr )CFDictionaryRef dict = fn ArrayObjectAtIndex( fn TableViewData( tag ), row )select ( fn ViewTag( vw ) )case _tableCheckboxButtonSetState( vw, fn NumberIntegerValue( fn DictionaryObjectForKey( dict, identifier ) ) )case _tablePopUpPopUpButtonSelectItemAtIndex( vw, fn NumberIntegerValue( fn DictionaryObjectForKey( dict, identifier ) ) )case _tableRatingControlSetIntegerValue( vw, fn NumberIntegerValue( fn DictionaryObjectForKey( dict, identifier ) ) )end selectend fnvoid local fn TableDataSetValueAtIndex( value as CFTypeRef, key as CFStringRef, index as NSInteger )CFMutableDictionaryRef dict = (CFMutableDictionaryRef)fn ArrayObjectAtIndex( fn TableViewData(_tableView), index )MutableDictionarySetObjectForKey( dict, value, key )end fnvoid local fn TableDataAddRow( state as NSInteger, txt as CFStringRef, index as NSInteger, rating as NSInteger )MutableArrayAddObject( fn TableViewData(_tableView), fn ObjectMutableCopy( @{CHECK_KEY:@(state),TEXT_KEY:txt,POPUP_KEY:@(index),RATING_KEY:@(rating)} ) )end fnvoid local fn CreateTableDatafn TableDataAddRow( NSControlStateValueOn, @"Alpha", 0, 5 )fn TableDataAddRow( NSControlStateValueOff, @"Bravo", 1, 3 )fn TableDataAddRow( NSControlStateValueOff, @"Charlie", 2, 4 )fn TableDataAddRow( NSControlStateValueOn, @"Delta", 4, 1 )fn TableDataAddRow( NSControlStateValueOff, @"Echo", 0, 2 )fn TableDataAddRow( NSControlStateValueOn, @"Foxtrot", 3, 5 )TableViewReloadData( _tableView )end fnvoid local fn BuildWindownibwindow _window, @"Window"TableViewSetCustomCellCallback( _tableView, @[CHECK_KEY,POPUP_KEY,RATING_KEY], @fn MyCustomCellCallback, NULL )fn CreateTableDataend fnvoid local fn DoDialog( ev as long, tag as long, wnd as long, obj as CFTypeRef )NSInteger   rowselect ( ev )case _btnClickselect ( tag )case _tableCheckboxrow = fn TableViewRowForView( _tableView, obj )fn TableDataSetValueAtIndex( @(fn ButtonState( obj )), CHECK_KEY, row )case _tablePopUprow = fn TableViewRowForView( _tableView, obj )fn TableDataSetValueAtIndex( @(fn PopUpButtonIndexOfSelectedItem( obj )), POPUP_KEY, row )case _tableRatingrow = fn TableViewRowForView( _tableView, obj )fn TableDataSetValueAtIndex( @(fn ControlIntegerValue( obj )), RATING_KEY, row )end selectcase _windowWillCloseendend selectend fnfn BuildWindowon dialog fn DoDialogHandleEvents