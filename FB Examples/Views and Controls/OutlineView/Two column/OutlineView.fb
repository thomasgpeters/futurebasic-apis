/*   OutlineView   From a demo by Steve Van Voorst*/void local fn CreateOutlineViewDataOutlineItemRef   item, make, modelCFMutableArrayRef outlineData = fn OutlineViewData(1)// parent1make = fn OutlineItemWithString( @"Ford", NULL, YES )model = fn OutlineItemWithString( @"Models", NULL, YES )CFDictionaryRef columns = @{@"Make":make,@"Model":model}item =fn OutlineItemWithColumns( columns, YES )MutableArrayAddObject( outlineData, item )model = fn OutlineItemWithString( @"Mustang", NULL, YES )columns = @{@"Model":model}OutlineItemAddChildColumns( item, columns, NO )model = fn OutlineItemWithString( @"Thunderbird", NULL, YES )columns = @{@"Model":model}OutlineItemAddChildColumns( item, columns, NO )model = fn OutlineItemWithString( @"Bronco", NULL, YES )columns = @{@"Model":model}OutlineItemAddChildColumns( item, columns, NO )// parent2make = fn OutlineItemWithString( @"Chevrolet", NULL, YES )model = fn OutlineItemWithString( @"Models", NULL, YES )columns = @{@"Make":make,@"Model":model}item =fn OutlineItemWithColumns( columns, YES )MutableArrayAddObject( outlineData, item )model = fn OutlineItemWithString( @"Corvette", NULL, YES )columns = @{@"Model":model}OutlineItemAddChildColumns( item, columns, NO )model = fn OutlineItemWithString( @"Camaro", NULL, YES )columns = @{@"Model":model}OutlineItemAddChildColumns( item, columns, NO )OutlineViewReloadData( 1 )end fnvoid local fn BuildWindownibwindow 1, @"Window"fn CreateOutlineViewDataend fnvoid local fn DoDialog( ev as long, tag as long )NSInteger        rowOutlineItemRef   itemselect (ev)case _outlineViewDoubleActionrow = fn TableViewSelectedRow( tag )item = fn OutlineViewItemAtRow( tag, row )if ( fn OutlineViewIsItemExpanded( tag, item ) )OutlineViewCollapseItem( tag, item )elseOutlineViewExpandItem( tag, item )end ifend selectend fnfn BuildWindowon dialog fn DoDialogHandleEvents