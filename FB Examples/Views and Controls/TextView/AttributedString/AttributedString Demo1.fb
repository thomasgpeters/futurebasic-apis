begin enum output 1_scrl_txtViewend enumvoid local fn BuildWindowCGRect r = (0,0,800,600)window 1, @"TextView AttributedString 1", rscrollview _scrl, rViewSetAutoresizingMask( _scrl, NSViewWidthSizable + NSViewHeightSizable )textview _txtView,, _scrl// a textview comes with its own mutable attributed string so there's no need to create anotherCFMutableAttributedStringRef aString = fn TextViewMutableAttributedString( _txtView )// set the text firstCFStringRef string = @"Plain\rItalic\rBold\rBold+Italic\rUnderline\rStrikethrough\rLeft\rCentre\rRight\rStroke\rShadow\rStroke+Shadow\rColour\r"TextSetString( _txtView, string )// now set attributesMutableAttributedStringSetFontWithName( aString, @"Helvetica", 30 )MutableAttributedStringSetFontWithNameInRange( aString, @"Helvetica Oblique", 30, fn CFRangeMake(6,7) )MutableAttributedStringSetFontWithNameInRange( aString, @"Helvetica Bold", 30, fn CFRangeMake(13,5) )MutableAttributedStringSetFontWithNameInRange( aString, @"Helvetica Bold Oblique", 30, fn CFRangeMake(18,12) )MutableAttributedStringSetUnderlineInRange( aString, NSUnderlineStyleSingle, fn CFRangeMake( 30,10) )MutableAttributedStringSetStrikethroughInRange( aString, NSUnderlineStyleSingle, fn CFRangeMake( 40,14) )MutableAttributedStringSetAlignmentInRange( aString, NSTextAlignmentCenter, fn CFRangeMake( 59,7) )MutableAttributedStringSetAlignmentInRange( aString, NSTextAlignmentRight, fn CFRangeMake( 66,6) )MutableAttributedStringSetStrokeWidthInRange( aString, 3.0, fn CFRangeMake(72,7) )MutableAttributedStringSetShadowInRange( aString, fn CGSizeMake(-5,5), 3.0, fn CFRangeMake(79,7) )MutableAttributedStringSetStrokeWidthInRange( aString, 3.0, fn CFRangeMake(86,14) )MutableAttributedStringSetShadowInRange( aString, fn CGSizeMake(-5,5), 3.0, fn CFRangeMake(86,14) )MutableAttributedStringSetForegroundColorInRange( aString, fn ColorRed, fn CFRangeMake(100,7) )end fneditmenu 1fn BuildWindowHandleEvents