/*  MapView - directions  macOS 10.12+*/include "Tlbx MapKit.incl"include "NSLog.incl"_window = 1begin enum 1_mapViewend enumvoid local fn MyDirectionsHandler( response as MKDirectionsResponseRef, err as ErrorRef, userData as ptr )MKRouteRef     rtMKPolylineRef  polylineMKMapRect      rCFArrayRef     routes, stepsMKRouteStepRef rtStepCFStringRef    instructionsif ( response )routes = fn MKDirectionsResponseRoutes( response )rt = fn ArrayObjectAtIndex( routes, 0 )polyline = fn MKRoutePolyline( rt )MKMapViewAddOverlayAtLevel( _mapView, polyline, MKOverlayLevelAboveRoads )r = fn MKOverlayBoundingMapRect( polyline )MKMapViewSetRegion( _mapView, fn MKCoordinateRegionForMapRect(r), YES )NSLogClearNSLog(@"Directions:")steps = fn MKRouteSteps( rt )for rtStep in stepsinstructions = fn MKRouteStepInstructions(rtStep)if ( instructions ) then NSLog(@"%@",instructions)nextNSLogScrollToTopend ifend fnvoid local fn BuildWindowMKPointAnnotationRef   annotation1, annotation2CLLocationCoordinate2D coord1, coord2MKMapItemRef           origin, destinationMKPlacemarkRef         placemark1, placemark2MKDirectionsRequestRef requestMKDirectionsRef        directionsCGRect                 r = (0,0,1000,800)window _window, @"MKMapView - directions", rWindowCenter(_window)mkmapview _mapView, rViewSetAutoresizingMask( _mapView, NSViewWidthSizable + NSViewHeightSizable )MKMapViewInstallDelegate( _mapView )coord1 = fn CLLocationCoordinate2DMake( 53.4794892, -2.2451148 )placemark1 = fn MKPlacemarkWithCoordinate( coord1 )origin = fn MKMapItemWithPlacemark( placemark1 )annotation1 = fn MKPointAnnotationWithTitle( coord1, @"Manchester", @"The first atom was split here")MKMapViewAddAnnotation( _mapView, annotation1 )coord2 = fn CLLocationCoordinate2DMake( 53.407154, -2.991665 )placemark2 = fn MKPlacemarkWithCoordinate( coord2 )destination = fn MKMapItemWithPlacemark( placemark2 )annotation2 = fn MKPointAnnotationWithTitle( coord2, @"Liverpool", @"Home of The Beatles" )MKMapViewAddAnnotation( _mapView, annotation2 )request = fn MKDirectionsRequestInitMKDirectionsRequestSetSource( request, origin )MKDirectionsRequestSetDestination( request, destination )MKDirectionsRequestSetTransportType( request, MKDirectionsTransportTypeAny )directions = fn MKDirectionsWithRequest( request )MKDirectionsCalculateDirections( directions, @fn MyDirectionsHandler, NULL )NSLog(@"Calculating route - please be patient")end fnvoid local fn DoDialog( ev as long, tag as long, wnd as long, obj as CFTypeRef )MKOverlayPathRendererRef rendererselect ( ev )case _mapViewRendererForOverlayrenderer = fn MKPolylineRendererWithPolyline( obj )MKOverlayPathRendererSetStrokeColor( renderer, fn ColorWithCalibratedRGB(1.0,0.0,0.0,0.5) )MKOverlayPathRendererSetLineWidth( renderer, 6.0 )DialogEventSetObject( renderer )end selectend fnfn BuildWindowon dialog fn DoDialogHandleEvents