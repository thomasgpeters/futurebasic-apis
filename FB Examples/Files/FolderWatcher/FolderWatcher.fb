/*  FolderWatcher   Get notified when contents of a directory hierarchy change   Bernie Wylde 20210114*/ include "Tlbx FSEvents.incl"include "NSLog.incl"_window = 1begin enum 1_infoLabel_chooseFolderBtnend enumvoid local fn MyFSEventStreamCallback( stream as FSEventStreamRef, clientCallBackInfo as ptr, numEvents as long, eventPaths as ptr, eventFlags(_maxInt) as UInt32, eventIDs(_maxInt) as UInt64 )CFStringRef path, type = @""long        iBOOL        isHiddenfor i = 0 to numEvents - 1path = fn ArrayObjectAtIndex( eventPaths, i )isHidden = fn StringHasPrefix( fn StringLastPathComponent( path ), @"." )if ( eventFlags(i) & _kFSEventStreamEventFlagItemIsFile )type = @"File"end ifif ( eventFlags(i) & _kFSEventStreamEventFlagItemIsDir )type = @"Directory"end ifif ( eventFlags(i) & _kFSEventStreamEventFlagItemCreated )if ( isHidden == NO )// ignore hidden files (usually ".DS_Store" created by the system)NSLog(@"%@ created\n\t\"%@\"\n",type,path)end ifend ifif ( eventFlags(i) & _kFSEventStreamEventFlagItemRemoved )NSLog(@"%@ removed\n\t\"%@\"\n",type,path)end ifif ( eventFlags(i) & _kFSEventStreamEventFlagItemRenamed )NSLog(@"%@ renamed\n\t\"%@\"\n",type,path)end ifnextend fnvoid local fn BuildWindowwindow _window, @"FolderWatcher", (0,0,480,270)WindowSetContentMinSize( _window, fn CGSizeMake(180,100) )textlabel _infoLabel,, (20,48,436,202)ViewSetAutoresizingMask( _infoLabel, NSViewWidthSizable + NSViewHeightSizable )button _chooseFolderBtn,,, @"Choose Folderâ€¦", (13,13,132,32)ViewSetAutoresizingMask( _chooseFolderBtn, NSViewMaxYMargin )end fnvoid local fn WatchFolderAtURL( url as CFURLRef )CFStringRef path = fn URLPath( url )FSEventStreamRef stream = (FSEventStreamRef)fn AppProperty( @"stream" )textlabel _infoLabel, fn StringWithFormat( @"Watching folder:\n\"%@\"",path )if ( stream ) then FSEventStreamRelease( stream )stream = fn FSEventStreamCreate( _kCFAllocatorDefault, @fn MyFSEventStreamCallback, NULL, @[path], _kFSEventStreamEventIdSinceNow, 1.0, _kFSEventStreamCreateFlagFileEvents + _kFSEventStreamCreateFlagUseCFTypes )FSEventStreamScheduleWithRunLoop( stream, fn CFRunLoopGetCurrent, kCFRunLoopDefaultMode )fn FSEventStreamStart( stream )end fnvoid local fn ChooseFolderOpenPanelSetCanChooseFiles( 1, NO )OpenPanelSetCanChooseDirectories( 1, YES )CFURLRef url = openpanel 1, @"Choose a folder to watch",, @"Choose"if ( url )fn WatchFolderAtURL( url )elsetextlabel _infoLabel, @""end ifend fnvoid local fn DoDialog( ev as long )select ( ev )case _btnClick : fn ChooseFoldercase _windowWillClose : endend selectend fnfn BuildWindowon dialog fn DoDialogHandleEvents