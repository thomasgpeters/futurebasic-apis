/*  SpellChecker*/_window = 1begin enum 1_scrollView_textView_checkSpellingBtnend enumvoid local fn MyCompletionHandler( acceptedString as CFStringRef, userData as ptr )CFRange   rangeif ( acceptedString )range = fn ValueRange(userData)TextReplaceCharactersInRangeWithString( _textView, range, acceptedString )end ifend fnvoid local fn CheckSpellingCFStringRef        string, badWordCFRange            rangeLayoutManagerRef   lmTextContainerRef   tcCGRect             rCFArrayRef         guessesstring = fn TextString( _textView )range = fn SpellCheckerCheckSpellingOfString( string, 0 )if ( range.location != NSNotFound )TextScrollRangeToVisible( _textView, range )lm = fn TextViewLayoutManager( _textView )tc = fn TextViewTextContainer( _textView )r = fn LayoutManagerBoundingRectForGlyphRange( lm, range, tc )badWord = fn StringSubstringWithRange( string, range )guesses = fn SpellCheckerGuessesForWordRange( range, string, fn SpellCheckerLanguage, 0 )SpellCheckerShowCorrectionIndicator( NSCorrectionIndicatorTypeDefault, badWord, guesses, r, _textView, @fn MyCompletionHandler, fn ValueWithRange(range) )end ifend fnvoid local fn BuildWindowwindow _window, @"Spell Checker", (0,0,480,360)WindowSetContentMinSize( _window, fn CGSizeMake(159,120) )scrollview _scrollView, (20,61,440,279), NSBezelBorderViewSetAutoResizingMask( _scrollView, NSViewWidthSizable + NSViewHeightSizable )textview _textView,, _scrollViewTextSetFont( _textView, fn FontLabelFontOfSize(18) )TextSetString( _textView, @"Hello yung lovers, whoever you are, I hope your trubbles are few." )WindowMakeFirstResponder( _window, _textView )button _checkSpellingBtn,,, @"Check Spelling", (14,13,131,32)ViewSetAutoResizingMask( _checkSpellingBtn, NSViewMaxYMargin )end fnvoid local fn DoDialog( ev as long, tag as long )select ( ev )case _btnClickselect ( tag )case _checkSpellingBtn : fn CheckSpellingend selectend selectend fneditmenu 1fn BuildWindowon dialog fn DoDialogHandleEvents