/*  print [%(x,y) | @(col,row)] [{string|numeric expression| CGPoint | CGRect | CGSize | CFRange} [ {,|;} {string|numeric expression| CGPoint | CGRect | CGSize | CFRange} ...] ]  cls		// clear all text in window  text [fontName [, fontSize [, foreColor [, backColor [, alignment [, tabInterval ] ] ] ] ] ]  text						// reset text style to defaults  macOS 10.11+*/window 1, @"Print to window", (0,0,600,430)print @"Alpha ";// trailing semicolon puts next 'print' text on same linetext ,, fn ColorLightGrayprint @"(default = Menlo 12)"text			// the 'text' keyword without parameters resets all styles to defaultsprint @"Bravo"text ,24print @"Menlo 24"text ,12print @"Delta"text @"Times-Bold", 24print @"Times-Bold 24"text @"AmericanTypewriter", 30, fn ColorRedprint @"AmericanTypewriter 30"text @"Helvetica", 36, fn ColorBlueprint %(150,150)@"Helvetica 48",		// trailing comma puts a tab character and next 'print' text on same linetext @"Menlo", 12, fn ColorGrayprint %(350,170)@"(150x,150y)"text ,, fn ColorTextprint		// add empty lineprintprint @"Hotel"printtext @"Marker Felt", 36, fn ColorMagenta, fn ColorYellowprint @" Marker Felt 36 "text @"Helvetica-Oblique", 18, fn ColorText, fn ColorClear, NSTextAlignmentRightprint @"\ntext aligned right"	// string can contain backslash characterstext ,,,, NSTextAlignmentCenterprint @"centered text"print @"more centered text"printtext @"Arial-Black",,,, NSTextAlignmentLeft, 96// set tab intervalprint @"A",@"B",@"C",@"D",@"E",@"F",@"G"HandleEvents