include "NSLog.incl"include "Tlbx Document.incl"output @"OpenRecentDemo"#plist CFBundleIdentifier @"com.mygreatcompany.OpenRecentDemo"_mFile = 1begin enum_iNew_iOpen_iOpenRecentend enum_mOpenRecent = 102begin enum_iClearMenuend enum_openPanel = 101void local fn MyMenuDelegateCallback( ev as long, menuID as long )select ( ev )case _menuNeedsUpdateDocumentControllerPopulateOpenRecentMenu( fn DocumentControllerShared, menuID )end selectend fnvoid local fn BuildMenusmenu _mFile,,, @"File"menu _mFile, _iNew,, @"New", @"n"menu _mFile, _iOpen,, @"Openâ€¦", @"o"menu _mFile, _iOpenRecent,, @"Open Recent"menu _mOpenRecentMenuSetSubmenu( _mFile, _iOpenRecent, _mOpenRecent )MenuSetDelegateCallback( _mOpenRecent, @fn MyMenuDelegateCallback, NULL )end fnvoid local fn BuildWindowwindow 1, @"Open Recent Demo"print @"Choose file(s) via File > Open, and take a peek in the Open Recents menu."end fnvoid local fn OpenActionCFURLRef url = openpanel _openPanel,,, @"Choose"if ( url )// ... so something with fileDocumentControllerPopulateOpenRecentMenuWithURL( fn DocumentControllerShared, _mOpenRecent, url )CFStringRef filename = fn StringByDeletingPathExtension( fn URLLastPathComponent( url ) )NSLogClear : NSLog(@"\"%@\" added to Open Recent menu",filename)end ifend fnvoid local fn ClearRecentActionDocumentControllerClearRecentDocuments( fn DocumentControllerShared )DocumentControllerPopulateOpenRecentMenu( fn DocumentControllerShared, _mOpenRecent )end fnvoid local fn DoAppEvent( ev as long )select ( ev )case _appDidFinishLaunchingfn BuildMenusfn BuildWindowend selectend fnvoid local fn DoMenu( menuID as long, itemID as long )select ( menuID )case _mFileselect ( itemID )case _iNewcase _iOpen : fn OpenActionend selectcase _mOpenRecentif ( fn MenuItemTag( menuID, itemID ) != 0 )fn ClearRecentActionelseCFURLRef url = fn MenuItemRepresentedObject( menuID, itemID )DocumentControllerPopulateOpenRecentMenuWithURL( fn DocumentControllerShared, _mOpenRecent, url )NSLogClear : NSLog(@"%@",fn URLPath(url))end ifend selectend fnon appevent fn DoAppEventon menu fn DoMenuHandleEvents