include "NSLog.incl"_mApplication = 0begin enum 1_iSeparator_iPreferencesend enum_mFile = 1begin enum_iNew_iOpen_// separator_iClose_iCloseAllend enum_mEdit = 2begin enum 9_iFind_iFindAgainend enumvoid local fn BuildMenu// applicationmenu _mApplication, _iSeparatormenu _mApplication, _iPreferences,, @"Preferences…", @","// filemenu _mFile, -1,, @"File"menu _mFile, _iNew,, @"New…", @"n"menu _mFile, _iOpen,, @"Open…", @"o"menu _mFile, _iClose,, @"Close", @"w"menu _mFile, _iCloseAll,, @"Close All", @"w", NSEventModifierFlagCommand + NSEventModifierFlagOptionMenuItemSetAlternate( _mFile, _iCloseAll, YES )// editeditmenu _mEdit//MenuSetAutoenablesItems( _mEdit, NO )menu _mEdit, _iFind,, @"Find…", @"f"menu _mEdit, _iFindAgain,, @"Find Again", @"g"NSLog(@"%ld",len(fn MenuAtIndex(_mFile)))end fnvoid local fn BuildWindowwindow 1, @"Cocoa Menus", (0,0,550,400)textfield 1,,, (20,360,200,22)textfield 2,,, (20,320,200,22)textfield 3,,, (20,280,200,22)textfield 4,,, (20,240,200,22)WindowMakeFirstResponder( 1, 1 )end fnvoid local fn DoMenu( menuID as long, itemID as long )NSLog(@"menu index: %ld, item index: %ld",menuID,itemID)NSLog(@"MenuTitle: %@, MenuItemTitle: %@", fn MenuTitle(menuID),fn MenuItemTitle(menuID,itemID))end fnvoid local fn DoDialog( ev as long, tag as long )select (ev)case _btnClickcase _textFieldDidChangeNSLog(@"textfield %ld did change",tag)end selectend fnfn BuildMenufn BuildWindowon menu fn DoMenuon dialog fn DoDialogHandleEvents