include "Tlbx AVFoundation.incl"include resources "chl.m4a"_window = 1begin enum 1_progBar_timeLabel_durLabel_playBtn_pauseBtn_stopBtnend enumvoid local fn FixButtonsdispatchmain// configure UI elements on main threadAVAudioPlayerRef player = fn AppProperty( @"Player" )if ( player )button _playBtn, NOif ( fn AVAudioPlayerIsPlaying( player ) )button _pauseBtn, YES,, @"Pause"button _stopBtn, YESelsebutton _pauseBtn, YES,, @"Resume"end ifelsetextlabel _timeLabel, @"--.-"progressbar _progBar, 0.0textlabel _durLabel, @"--.-"button _playBtn, YESbutton _pauseBtn, NO,, @"Pause"button _stopBtn, NOend ifdispatchendend fnvoid local fn BuildWindowwindow _window, @"AVAudioPlayer", (0,0,480,87), NSWindowStyleMaskTitledtextlabel _timeLabel, @"--.-", (18,52,38,16)ControlSetAlignment( _timeLabel, NSTextAlignmentRight )progressbar _progBar,, (62,48,356,20)ProgressIndicatorSetUsesThreadedAnimation( _progBar, NO )// fix cosmetic on Big Sur and abovetextlabel _durLabel, @"--.-", (424,52,38,16)button _playBtn,,, @"Start", (14,13,89,32)button _pauseBtn, NO,, @"Pause", (103,13,89,32)button _stopBtn, NO,, @"Stop", (192,13,89,32)end fnvoid local fn Cleanupfn FixButtonsAppPropertyRemove( @"Player" )end fnvoid local fn DidFinishPlayingHandler( player as AVAudioPlayerRef, success as BOOL, userData as ptr )fn Cleanupend fnvoid local fn PlayActionCFURLRef url = fn BundleURLForResource( fn BundleMain, @"chl", @"m4a", NULL )AVAudioPlayerRef player = fn AVAudioPlayerWithContentsOfURL( url, NULL )AVAudioPlayerSetDidFinishPlayingHandler( player, @fn DidFinishPlayingHandler, NULL )AppPropertySet( @"Player", player )textlabel _durLabel, fn StringWithFormat(@"%.1f",fn AVAudioPlayerDuration(player))block TimerRef timer = timerbegin, 0.1, YESCFTimeInterval ti, durif ( player )if ( fn AVAudioPlayerIsPlaying( player ) )ti = fn AVAudioPlayerCurrentTime( player )dur = fn AVAudioPlayerDuration( player )ProgressIndicatorSetDoubleValue( _progBar, ti*100/dur )textlabel _timeLabel, fn StringWithFormat( @"%.1f", ti )end ifelseTimerInvalidate( timer )end iftimerendfn AVAudioPlayerPlay( player )fn FixButtonsend fnvoid local fn PauseActionAVAudioPlayerRef player = fn AppProperty( @"Player" )if ( player )if ( fn AVAudioPlayerIsPlaying( player ) )AVAudioPlayerPause( player )elsefn AVAudioPlayerPlay( player )end ifend iffn FixButtonsend fnvoid local fn StopActionAVAudioPlayerRef player = fn AppProperty( @"Player" )if ( player )AVAudioPlayerStop( player )end iffn Cleanupend fnvoid local fn DoDialog( ev as long, tag as long )select ( ev )case _btnClickselect ( tag )case _playBtn  : fn PlayActioncase _pauseBtn : fn PauseActioncase _stopBtn  : fn StopActionend selectend selectend fnfn BuildWindowon dialog fn DoDialogHandleEvents