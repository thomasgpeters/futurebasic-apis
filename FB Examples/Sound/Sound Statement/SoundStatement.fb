include resources "Il Silenzio.m4a"_window = 1begin enum 1_segCtrl_loopBtn_volSldr_volLblend enum_sndTag = 1void local fn BuildWindownibwindow _window, @"Window"end fnvoid local fn PlayPauseActionclsif ( sound(_sndTag) ) // is sound playing?if ( fn SoundIsPaused(_sndTag) )print @"sound playing"sound _sndTagelseprint @"sound paused"sound -_sndTag // pause soundend ifelseprint @"sound playing"// params: tag, name, url | data | pasteboard, volume, loopssound _sndTag, @"Il Silenzio",, slider(_volSldr), (checkbox(_loopBtn) == NSControlStateValueOn)end ifend fnvoid local fn StopActionif ( sound(_sndTag) )cls : print @"sound stopped"sound stop _sndTagend ifend fnvoid local fn VolumeActionsound _sndTag,,, slider(_volSldr)ControlSetStringValue( _volLbl, fn StringWithFormat( @"%.2f", slider(_volSldr) ) )end fnvoid local fn LoopActionif ( sound(_sndTag) )if ( fn SoundIsPaused(_sndTag) )sound -_sndTag,,,, (checkbox(_loopBtn) == NSControlStateValueOn)elsesound _sndTag,,,, (checkbox(_loopBtn) == NSControlStateValueOn)end ifend ifend fnvoid local fn DoDialog( ev as long, tag as long )select ( ev )case _btnClickselect ( tag )case _segCtrlselect ( segmentedcontrol(tag) )case 0 : fn PlayPauseActioncase 1 : fn StopActionend selectcase _loopBtn : fn LoopActioncase _volSldr : fn VolumeActionend selectcase _soundDidFinishPlayingprint @"sound finished"end selectend fnfn BuildWindowon dialog fn DoDialogHandleEvents