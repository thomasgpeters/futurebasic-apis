/*  AVAudioEngine  Bernie Wylde 20220411*/include "Tlbx AVFoundation.incl"include resources "MyAudioFile.m4a"#define AUDIO_FILE fn AVAudioFileForReading( fn BundleURLForResource( fn BundleMain, @"MyAudioFile", @"m4a", NULL ), NULL )#define ENGINE_KEY @"engine"_window = 1begin enum 1_volumeLabel_volumeSlider_volumeValueLabel_speedLabel_speedSlider_speedValueLabel_pitchLabel_pitchSlider_pitchValueLabel_distortionLabel_distortionPopup_reverbLabel_reverbPopup_playBtn_resetValuesBtnend enum#define VOLUME_DEFAULT 0.15#define SPEED_DEFAULT 1#define PITCH_DEFAULT 0#define DISTORTION_DEFAULT 14#define REVERB_DEFAULT 0#define VOLUME fn ControlFloatValue(_volumeSlider)#define SPEED fn ControlFloatValue(_speedSlider)#define PITCH fn ControlIntegerValue(_pitchSlider)#define DISTORTION fn PopUpButtonIndexOfSelectedItem(_distortionPopup)#define REVERB fn PopUpButtonIndexOfSelectedItem(_reverbPopup)#define VOLUME_STRING fn StringWithFormat( @"%.2f", VOLUME )#define SPEED_STRING fn StringWithFormat( @"%.2f", SPEED )#define PITCH_STRING fn StringWithFormat( @"%ld", PITCH )void local fn ResetValuesslider _volumeSlider,, VOLUME_DEFAULTtextlabel _volumeValueLabel, VOLUME_STRINGslider _speedSlider,, SPEED_DEFAULTtextlabel _speedValueLabel, SPEED_STRINGslider _pitchSlider,, PITCH_DEFAULTtextlabel _pitchValueLabel, PITCH_STRINGpopupbutton _distortionPopup,, DISTORTION_DEFAULTpopupbutton _reverbPopup,, REVERB_DEFAULTend fnlocal fn DistortionMenuItems as CFArrayRefCFArrayRef items = @[@"None",@"Drums Bit Brush",@"Drums Buffer Beats",@"Drums LoFi",@"Multi Broken Speaker",@"Multi Cellphone Concert",@"Multi Decimated 1",@"Multi Decimated 2",@"Multi Decimated 3",@"Multi Decimated 4",@"Multi Distorted Funk",@"Multi Distorted Cubed",@"Multi Distorted Squared",@"Multi Echo 1",@"Multi Echo 2",@"Multi Echo Tight 1",@"Multi Echo Tight 2",@"Multi Everything Is Broken",@"Speech Alien Chatter",@"Speech Cosmic Interference",@"Speech Golden Pi",@"Speech Radio Tower",@"Speech Waves"]end fn = itemslocal fn ReverbMenuItems as CFArrayRefCFArrayRef items = @[@"None",@"Small Room",@"Medium Room",@"Large Room",@"Medium Hall",@"Large Hall",@"Plate",@"Medium Chamber",@"Large Chamber",@"Cathedral",@"Large Room 2",@"Medium Hall 2",@"Medium Hall 3",@"Large Hall 2"]end fn = itemsvoid local fn BuildWindowwindow _window, @"AVAudioEngine", (0,0,480,342)WindowSetContentMinSize( _window, fn CGSizeMake(315,342) )textlabel _volumeLabel, @"Volume:", (18,305,53,16)slider _volumeSlider,, VOLUME_DEFAULT, (75,296,387,28), 0.0, 1.0, 11ControlSetContinuous( _volumeSlider, YES )ViewSetAutoresizingMask( _volumeSlider, NSViewMinYMargin + NSViewWidthSizable )textlabel _volumeValueLabel, VOLUME_STRING, (247,278,36,16)ControlSetAlignment( _volumeValueLabel, NSTextAlignmentCenter )ViewSetAutoresizingMask( _volumeValueLabel, NSViewMinXmargin + NSViewMaxXMargin + NSViewMinYMargin )textlabel _speedLabel, @"Speed:", (18,239,47,16)slider _speedSlider,, SPEED_DEFAULT, (75,230,387,28), 0.25, 4.0, 16ControlSetContinuous( _speedSlider, YES )ViewSetAutoresizingMask( _speedSlider, NSViewMinYMargin + NSViewWidthSizable )textlabel _speedValueLabel, SPEED_STRING, (247,212,36,16)ControlSetAlignment( _speedValueLabel, NSTextAlignmentCenter )ViewSetAutoresizingMask( _speedValueLabel, NSViewMinXmargin + NSViewMaxXMargin + NSViewMinYMargin )textlabel _pitchLabel, @"Pitch:", (18,173,39,16)slider _pitchSlider,, PITCH_DEFAULT, (75,164,387,28), -2400, 2400, 13ControlSetContinuous( _pitchSlider, YES )ViewSetAutoresizingMask( _pitchSlider, NSViewMinYMargin + NSViewWidthSizable )textlabel _pitchValueLabel, PITCH_STRING, (235,146,60,16)ControlSetAlignment( _pitchValueLabel, NSTextAlignmentCenter )ViewSetAutoresizingMask( _pitchValueLabel, NSViewMinXmargin + NSViewMaxXMargin + NSViewMinYMargin )textlabel _distortionLabel, @"Distortion:", (18,107,68,16)popupbutton _distortionPopup,, DISTORTION_DEFAULT, fn DistortionMenuItems, (89,100,211,25)textlabel _reverbLabel, @"Reverb:", (18,65,51,16)popupbutton _reverbPopup,, REVERB_DEFAULT, fn ReverbMenuItems, (89,58,147,25)button _playBtn,,, @"Play", (13,13,84,32)ViewSetAutoresizingMask( _playBtn, NSViewMaxYMargin )button _resetValuesBtn,,, @"Reset Values", (355,13,112,32)ViewSetAutoresizingMask( _resetValuesBtn, NSViewMinXmargin + NSViewMaxYMargin )end fnvoid local fn PlayAVAudioEngineRef         engineAVAudioMixerNodeRef      mixerAVAudioUnitVarispeedRef  speedUnitAVAudioUnitTimePitchRef  pitchUnitAVAudioPlayerNodeRef     playerAVAudioUnitDistortionRef distortionUnitAVAudioUnitReverbRef     reverbUnitCFMutableArrayRef        nodesAVAudioNodeRef           nodeNSUInteger               count, index// engineengine = fn AVAudioEngineInitAppPropertySet( ENGINE_KEY, engine )// retainnodes = fn MutableArrayWithCapacity(0)// mixer modemixer = fn AVAudioEngineMainMixerNode( engine )AVAudioMixerNodeSetOutputVolume( mixer, VOLUME )// speed unitspeedUnit = fn AVAudioUnitVarispeedInitAVAudioUnitVarispeedSetRate( speedUnit, SPEED )MutableArrayAddObject( nodes, speedUnit )// pitch unitpitchUnit = fn AVAudioUnitTimePitchInitAVAudioUnitTimePitchSetPitch( pitchUnit, PITCH )MutableArrayAddObject( nodes, pitchUnit )// distortionUnitif ( DISTORTION )distortionUnit = fn AVAudioUnitDistortionInitAVAudioUnitDistortionLoadFactoryPreset( distortionUnit, DISTORTION - 1 )MutableArrayAddObject( nodes, distortionUnit )end if// reverbif ( REVERB )reverbUnit = fn AVAudioUnitReverbInitAVAudioUnitReverbLoadFactoryPreset( reverbUnit, REVERB - 1 )MutableArrayAddObject( nodes, reverbUnit )end if// playerplayer = fn AVAudioPlayerNodeInitMutableArrayInsertObjectAtIndex( nodes, player, 0 )// attach nodesfor node in nodesAVAudioEngineAttachNode( engine, node )nextMutableArrayAddObject( nodes, mixer )// connect nodescount = fn ArrayCount( nodes )for index = 0 to count - 2AVAudioEngineConnect( engine, nodes[index], nodes[index+1], NULL )next// scheduleAVAudioPlayerNodeScheduleFile( player, AUDIO_FILE, NULL, NULL, NULL )// start enginefn AVAudioEngineStart	( engine, NULL )// playfn AVAudioPlayerNodePlay( player )end fnvoid local fn DoDialog( ev as long, tag as long )select ( ev )case _btnClickselect ( tag )case _volumeSlider   : ControlSetStringValue( _volumeValueLabel, VOLUME_STRING )case _speedSlider    : ControlSetStringValue( _speedValueLabel, SPEED_STRING )case _pitchSlider    : ControlSetStringValue( _pitchValueLabel, PITCH_STRING )case _playBtn        : fn Playcase _resetValuesBtn : fn ResetValuesend selectend selectend fnfn BuildWindowon dialog fn DoDialogHandleEvents