/*  UndoManager Demo  FB translation of a Swift demo:    https://www.youtube.com/watch?v=WJaHOnftNIY  macOS 10.14+*/void def fn AddCircleView( aView as ViewRef )void def fn RemoveCircleView( aView as ViewRef )_window = 1begin enum 1_drawingView_labelend enumbegin enum 101_firstCircleViewend enumvoid local fn AddCircleView( aView as ViewRef )ViewAddSubview( _drawingView, aView )UndoManagerRef um = fn ResponderUndoManager( fn ViewWithTag(_drawingView) )UndoManagerRegisterUndo( um, @fn RemoveCircleView, aView )end fnvoid local fn RemoveCircleView( aView as ViewRef )ViewRemoveFromSuperview( aView )UndoManagerRef um = fn ResponderUndoManager( fn ViewWithTag(_drawingView) )//fn UndoManagerPrepareWithInvocation( um, @fn AddCircleView, aView )UndoManagerRegisterUndo( um, @fn AddCircleView, aView )end fnlocal fn NextCircleViewTag as NSIntegerNSInteger tag = _firstCircleViewwhile ( fn ViewExists( tag ) )tag++wendend fn = tagvoid local fn AddCircle( parTag as NSInteger )CGPoint pt = fn ViewConvertPointFromView( parTag, fn EventLocationInWindow, NULL )NSInteger tag = fn NextCircleViewTagsubclassview tag, fn CGRectMake( pt.x - 15, pt.y - 15, 30, 30 )ViewInitTrackingArea( tag )fn AddCircleView( fn ViewWithTag( tag ) )UndoManagerRef um = fn ResponderUndoManager( fn ViewWithTag(parTag) )UndoManagerSetActionName( um, @"Add Circle" )end fnvoid local fn RemoveCircle( tag as NSInteger )fn RemoveCircleView( fn ViewWithTag(tag) )UndoManagerRef um = fn ResponderUndoManager( fn ViewWithTag(_drawingView) )UndoManagerSetActionName( um, @"Remove Circle" )end fnvoid local fn BuildWindowwindow _window, @"UndoManager Demo", (0,0,500,500)WindowSetContentMinSize( _window, fn CGSizeMake(355,62) )subclassview _drawingView, (0,0,500,500)ViewSetAutoresizingMask( _drawingView, NSViewWidthSizable + NSViewHeightSizable )ViewInitTrackingArea( _drawingView )textlabel _label, @"Click on window to add circle. Option-click circle to remove.\nUse Edit menu to Undo/Redo actions.", (18,20,319,28)ControlSetSize( _label, NSControlSizeSmall )TextFieldSetTextColor( _label, fn ColorMagenta )ViewSetAutoresizingMask( _label, NSViewMaxYMargin )ViewAddSubview( _drawingView, _label )end fnvoid local fn DoDialog( ev as long, tag as long )BOOL         altFlagCALayerRef   layerCGRect       rselect ( ev )case _viewMouseDownaltFlag = ( (fn EventClassModifierFlags & NSEventModifierFlagOption) != 0 )select ( tag )case _drawingViewif ( altFlag == NO ) then fn AddCircle( tag )case elseif ( altFlag ) then fn RemoveCircle( tag )end selectcase _viewWantsUpdateLayerDialogEventSetBool( YES )case _viewUpdateLayerlayer = fn ViewLayer( tag )select ( tag )case _drawingViewCALayerSetBackgroundColor( layer, fn ColorBlack )case elseCALayerSetBackgroundColor( layer, fn ColorWhite )r = fn ViewFrame( tag )CALayerSetCornerRadius( layer, r.size.width/2 )end selectend selectend fneditmenu 1fn BuildWindowon dialog fn DoDialogHandleEvents