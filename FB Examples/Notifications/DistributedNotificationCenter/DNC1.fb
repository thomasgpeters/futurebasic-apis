/*  DNC1  Build this app and DNC2 then run both apps*/_window = 1begin enum 1_sendFld_sendBtn_receiveFldend enumvoid local fn MyDNCCallback( note as NotificationRef )ControlSetStringValue( _receiveFld, fn NotificationObject( note ) )end fnvoid local fn BuildWindownibwindow _window, @"DNC"WindowSetTitle( _window, @"DNC1" )WindowMakeFirstResponder( _window, _sendFld )end fnvoid local fn DoAppEvent( ev as long )select ( ev )case _appWillFinishLaunchingfn BuildWindow//=====================================================================================================// Terminology & Parameters - 2023-Feb-17 Brian//// Observer: this app is the observer. We are asking the distributed notification system( DNS )//           to send us any notifcations from other objects/apps that match the name supplied.//// First parm( callback address ): tell the DNS where to nofify our app ( i.e. call the function supplied )//// Second parm( name ): tells the DNS our app wants only notifcations with this name.//// The last ( third ) parameter limits notification delivery ( via the callback function supplied )// to a specific sender object. Most times it is enough to receive notifications// from any object that uses the name we register to observe ( in this case "DNCMessage1" ).// In other words, if any notification arrives with "DNCMessage1" name, we want to process it.// Therefore, we don't often need to further limit a received notification from a specific object// and NULL effectively says "receive from any object if the name matches"//=====================================================================================================DistributedNotificationCenterAddObserver( @fn MyDNCCallback, @"DNCMessage1", NULL )end selectend fnvoid local fn DoDialog( ev as long, tag as long, wnd as long )select ( ev )case _btnClickselect ( tag )case _sendBtn//=====================================================================================================//2023-Feb-17 Brian// Post a notification to another app and label the notification "DNCMessage2".// The other ( receiving ) app will be looking for notifcations with that notification name.////=====================================================================================================DistributedNotificationCenterPostNotificationName( @"DNCMessage2", fn ControlStringValue(_sendFld), NULL, NSNotificationDeliverImmediately )end selectend selectend fnon AppEvent fn DoAppEventon dialog fn DoDialogHandleEvents