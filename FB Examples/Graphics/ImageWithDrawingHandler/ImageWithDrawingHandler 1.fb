_window = 1begin enum output 1_imageView_textFieldend enumlocal fn MyImageDrawingHandler( r as CGRect, userData as ptr ) as BOOLCFIndex i_GRIDSIZE = 23for i = 0 to r.size.widthBezierPathStrokeLine( fn CGPointMake( i, 0 ), fn CGPointMake( i, r.size.height ), 0.5, fn ColorControlAccent )i = i + _GRIDSIZEnextfor i = 0 to r.size.heightBezierPathStrokeLine( fn CGPointMake( 0, i ), fn CGPointMake( r.size.width, i ),  0.5, fn ColorControlAccent )i = i + _GRIDSIZEnextend fn = YES // image was drawn successfullyvoid local fn BuildWindowlong   wndStyleMaskwndStyleMask  = NSWindowStyleMaskTitledwndStyleMask += NSWindowStyleMaskClosablewndStyleMask += NSWindowStyleMaskMiniaturizablewindow _window, @"Image Drawing Handler", ( 0, 0, 400, 400 ), wndStyleMaskWindowSetBackgroundColor( _window, fn ColorWhite )ImageRef image = fn ImageWithDrawingHandler( fn CGSizeMake( 360, 360 ), NO, @fn MyImageDrawingHandler, NULL )imageview _imageView, YES, image, ( 20, 20, 360, 360 ), _windowtextfield _textField, YES, @"This text is placed over the grid.", ( 20, 330, 360, 30 ), _windowTextFieldSetDrawsBackground( _textField, NO )TextFieldSetBordered( _textField, NO )TextFieldSetBezeled( _textField, NO )TextFieldSetTextColor( _textField, fn ColorRed )ControlSetFontWithName( _textField, @"Helvetica", 22.0 )ControlSetAlignment( _textField, NSTextAlignmentCenter )end fnfn BuildWindowHandleEvents