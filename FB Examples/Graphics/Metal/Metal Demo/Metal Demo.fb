include "Tlbx Metal.incl"include resources "Shader.metal"begin record VertexInsimd_float4 positionsimd_float4 colorend recordbegin enum_pipelineState_vertexBuffer_commandQueueend enum_window = 1begin enum 1_mtkViewend enumvoid local fn GetVertex( vertex(0) as VertexIn )vertex.position(0) = fn simd_make_float4(  0.5, -0.5, 0.0, 1.0 ) : vertex.color(0) = fn simd_make_float4( 1.0, 0.0, 0.0, 1.0 )vertex.position(1) = fn simd_make_float4( -0.5, -0.5, 0.0, 1.0 ) : vertex.color(1) = fn simd_make_float4( 0.0, 1.0, 0.0, 1.0 )vertex.position(2) = fn simd_make_float4( -0.5,  0.5, 0.0, 1.0 ) : vertex.color(2) = fn simd_make_float4( 0.0, 0.0, 1.0, 1.0 )vertex.position(3) = fn simd_make_float4(  0.5,  0.5, 0.0, 1.0 ) : vertex.color(3) = fn simd_make_float4( 1.0, 1.0, 0.0, 1.0 )vertex.position(4) = fn simd_make_float4(  0.5, -0.5, 0.0, 1.0 ) : vertex.color(4) = fn simd_make_float4( 1.0, 0.0, 0.0, 1.0 )vertex.position(5) = fn simd_make_float4( -0.5,  0.5, 0.0, 1.0 ) : vertex.color(5) = fn simd_make_float4( 0.0, 0.0, 1.0, 1.0 )end fnvoid local fn BuildWindowCGRect r = (0,0,640,480)window _window, @"Metal Demo", rmtkview _mtkView, rViewSetAutoresizingMask( _mtkView, NSViewWidthSizable | NSViewHeightSizable )MTLDeviceRef device = fn MTKViewDevice( _mtkView )MTLLibraryRef lib = fn MTLDeviceNewDefaultLibrary( device )CAMetalDrawableRef drawable = fn MTKViewCurrentDrawable( _mtkView )MTLRenderPipelineDescriptorRef pipelineDesc = fn MTLRenderPipelineDescriptorInitMTLRenderPipelineDescriptorSetVertexFunction( pipelineDesc, fn MTLLibraryNewFunctionWithName( lib, @"vertexFunction" ) )MTLRenderPipelineDescriptorSetFragmentFunction( pipelineDesc, fn MTLLibraryNewFunctionWithName( lib, @"fragmentFunction" ) )MTLRenderPipelineColorAttachmentDescriptorArrayRef attachments = fn MTLRenderPipelineDescriptorColorAttachments( pipelineDesc )MTLRenderPipelineColorAttachmentDescriptorRef colDesc = fn MTLRenderPipelineColorAttachmentDescriptorArrayObject( attachments, 0 )MTLTextureRef texture = fn CAMetalDrawableTexture( drawable )MTLRenderPipelineColorAttachmentDescriptorSetPixelFormat( colDesc, fn MTLTexturePixelFormat( texture ) )VertexIn vertex(5)fn GetVertex( vertex(0) )mda(_pipelineState) = fn MTLDeviceNewRenderPipelineStateWithDescriptor( device, pipelineDesc, NULL )mda(_vertexBuffer) = fn MTLDeviceNewBufferWithBytes( device, @vertex(0), sizeof(VertexIn) * 6, MTLResourceCPUCacheModeDefaultCache )mda(_commandQueue) = fn MTLDeviceNewCommandQueue( device )end fnvoid local fn DrawInMTKView( tag as long )MTLRenderPassDescriptorRef passDescriptor = fn MTKViewCurrentRenderPassDescriptor( tag )CAMetalDrawableRef drawable = fn MTKViewCurrentDrawable( tag )MTLCommandBufferRef commandBuffer = fn MTLCommandQueueCommandBuffer( mda(_commandQueue) )MTLRenderCommandEncoderRef commandEncoder = fn MTLCommandBufferRenderCommandEncoderWithDescriptor( commandBuffer, passDescriptor )MTLRenderCommandEncoderSetRenderPipelineState( commandEncoder, mda(_pipelineState) )MTLRenderCommandEncoderSetVertexBuffer( commandEncoder, mda(_vertexBuffer), 0, 0 )MTLRenderCommandEncoderDrawPrimitives( commandEncoder, MTLPrimitiveTypeTriangle, 0, 6 )MTLCommandEncoderEndEncoding( commandEncoder )MTLCommandBufferPresentDrawable( commandBuffer, drawable )MTLCommandBufferCommit( commandBuffer )end fnvoid local fn DoAppEvent( ev as long )select ( ev )case _appDidFinishLaunching : fn BuildWindowcase _appShouldTerminateAfterLastWindowClosed : AppEventSetBool(YES)end selectend fnvoid local fn DoDialog( ev as long, tag as long )select ( ev )case _mtkViewDraw : fn DrawInMTKView( tag )end selectend fnon appevent fn DoAppEventon dialog fn DoDialogHandleEvents