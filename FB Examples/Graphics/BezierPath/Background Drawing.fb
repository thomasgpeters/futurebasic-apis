/*  Background Drawing*/_window = 1begin enum 1_drawBtnend enumvoid local fn ViewDrawBezierPathRef path = fn WindowProperty( _window, @"path" )if ( path ) then BezierPathStroke( path )end fnvoid local fn AddLineBezierPathRef path = fn WindowProperty( _window, @"path" )CGPoint pt = {rnd(600),rnd(600)}BezierPathLineToPoint( path, pt )end fnvoid local fn StartDrawingbutton _drawBtn, NOBezierPathRef path = fn BezierPathInitCGPoint pt = {rnd(600),rnd(600)}BezierPathMoveToPoint( path, pt )WindowPropertySet( _window, @"path", path )dispatchgloballong ifor i = 0 to 100delay 30fn AddLinedispatchmainwindow output _windowViewSetNeedsDisplay(_windowContentViewTag)dispatchendnext idispatchmainbutton _drawBtn, YES,,,,,, _windowdispatchenddispatchendend fnvoid local fn BuildWindowwindow _window, @"Background Drawing", (0,0,600,600), NSWindowStyleMaskTitled + NSWindowStyleMaskResizableWindowSubclassContentView(_window)ViewSetFlipped(_windowContentViewTag,YES)button _drawBtn,,, @"Draw", (14,552,72,32)end fnvoid local fn DoDialog( ev as long, tag as long, wnd as long )select ( ev )case _btnClick     : fn StartDrawingcase _viewDrawRect : fn ViewDrawend selectend fnfn BuildWindowon dialog fn DoDialogHandleEvents