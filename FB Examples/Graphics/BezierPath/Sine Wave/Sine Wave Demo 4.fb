_window = 1begin enum 1_sinewaveView_amplitudeLabel_amplitudeSlider_frequencyLabel_frequencySliderend enumvoid local fn BuildWindowCGRect r = fn CGRectMake( 0, 0, 480, 360 )window _window, @"Sine Wave Demo 4", r, NSWindowStyleMaskTitled + NSWindowStyleMaskClosable + NSWindowStyleMaskMiniaturizabler = fn CGRectMake( 0, 100, 480, 260 )subclass view _sinewaveView, r, _windowr = fn CGRectMake( 120, 64, 72, 19 )textlabel _amplitudeLabel, @"Amplitude:", r, _windowControlSetAlignment( _amplitudeLabel, NSTextAlignmentRight )r = fn CGRectMake( 200, 60, 240, 19 )slider _amplitudeSlider, YES, 60.0, r, 0.0, 120.0, YES, _windowControlSetContinuous( _amplitudeSlider, YES )r = fn CGRectMake( 120, 24, 72, 19 )textlabel _frequencyLabel, @"Frequency:", r, _windowControlSetAlignment( _frequencyLabel, NSTextAlignmentRight )r = fn CGRectMake( 200, 20, 240, 19 )slider _frequencySlider, YES, 0.1, r, 0.0, 1.0, YES, _windowControlSetContinuous( _frequencySlider, YES )end fnlocal fn SineWave ( tag as long )CGFloat             x, yCGFloat        amplitude = fn ControlFloatValue( _amplitudeSlider ) // Amplitude of the sine waveCGFloat        frequency = fn ControlFloatValue( _frequencySlider ) // Frequency of the sine waveCGFloat            phase = 0.0                                      // Phase shiftCGRect            bounds = fn ViewBounds( tag )                     // Drawing areaBezierPathRef      path  = fn BezierPathInit                        // Create bezier pathCGFloat   verticalOffset = fn CGRectGetMidY( bounds )               // Center the wave verticallyCGFloat horizontalOffset = fn CGRectGetMinX( bounds )               // Start the wave from the leftBezierPathFillRect( bounds, fn ColorBlack )BezierPathMoveToPoint( path, fn CGPointMake( horizontalOffset, verticalOffset ) ) // Set bezier path start pointfor x = horizontalOffset to fn CGRectGetMaxX( bounds ) -1  // Draw the sine wavey = amplitude * sin( frequency * ( x - horizontalOffset ) + phase ) + verticalOffsetBezierPathLineToPoint( path, fn CGPointMake( x, y ) )nextBezierPathStrokeFill( path, 2.0, fn ColorGreen, NULL )             // Set the stroke color and line widthend fnvoid local fn DoDialog( ev as long, tag as long, wnd as long, obj as CFTypeRef )select ( ev )case _viewDrawRectselect ( tag )case _sinewaveView    : fn SineWave( tag )end selectcase _btnClickselect ( tag )case _amplitudeSlider : ViewSetNeedsDisplay( _sinewaveView )case _frequencySlider : ViewSetNeedsDisplay( _sinewaveView )end selectcase _windowWillClose     : endend selectend fnon dialog fn DoDialogfn BuildWindowHandleEvents