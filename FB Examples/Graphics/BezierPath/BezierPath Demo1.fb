void local fn DrawInView( tag as long )// ovalBezierPathStrokeFillOvalInRect( fn CGRectMake(20,20,100,100), 6, fn ColorYellow, fn ColorWithCalibratedRGB( 0.5, 0.5, 0.5, 1.0 ) )// rectBezierPathStrokeRect( fn CGRectMake(200,20,100,100), 1, fn ColorMagenta )// triangleCFMutableArrayRef pts = fn MutableArrayWithCapacity( 0 )// create an array of points - this will be a closed path so there's no need to repeat the first point at the endMutableArrayAddObject( pts, fn ValueWithPoint( fn CGPointMake(50,300) ) )MutableArrayAddObject( pts, fn ValueWithPoint( fn CGPointMake(300,300) ) )MutableArrayAddObject( pts, fn ValueWithPoint( fn CGPointMake(175,200) ) )BezierPathStrokeFillPolygon( pts, 3, fn ColorBlack, fn ColorCyan )// rotated rectBezierPathStrokeRotatedRect( fn CGRectMake(400,120,150,100), 10, 10, 15, 2, fn ColorBlue )end fnvoid local fn BuildWindowwindow 1WindowCenter(1)WindowSubclassContentView(1)ViewSetFlipped( _windowContentViewTag, YES )ViewSetNeedsDisplay( _windowContentViewTag )end fnvoid local fn DoDialog( ev as long, tag as long )select ( ev )case _viewDrawRect : fn DrawInView(tag)end selectend fnfn BuildWindowon dialog fn DoDialogHandleEvents