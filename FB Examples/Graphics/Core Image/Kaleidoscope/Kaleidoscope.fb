/*KaleidoscopeDemo app showcasing the CoreImage CIKaleidoscope filter.Ken Shmidheiser25 Janaury 2020Added: Iteration Control KS       Set vector to defaults x:150 y:150*/include "Tlbx CoreImage.incl"output file "Kaleidoscope"include resources "flowers.jpg"_window = 1begin enum output 1_colorImageView_kaleidoscopeImageView_angleLabel_angleSlider_angleValue_iterationLabel_iterationSlider_iterationValueend enummenu 1, -1,, @"File"editmenu 2void local fn BuildWindowNSInteger   wndStyleMaskwndStyleMask  = NSWindowStyleMaskTitledwndStyleMask += NSWindowStyleMaskClosablewndStyleMask += NSWindowStyleMaskMiniaturizableCGRect r = ( 0, 0, 820, 360 )window _window, @"Kaleidoscope", r, wndStyleMaskr = fn CGRectMake( 20, 20, 320, 320 )imageview _colorImageView, YES,, r, NSImageScaleAxesIndependently, NSImageAlignCenter, NSImageFramePhoto, _windowImageViewSetImageNamed( _colorImageView, @"flowers.jpg" )r = fn CGRectMake( 360, 20, 320, 320 )imageview _kaleidoscopeImageView, YES,, r, NSImageScaleAxesIndependently, NSImageAlignCenter, NSImageFramePhoto, _windowImageViewSetEditable( _kaleidoscopeImageView, YES )ImageViewSetAllowsCutCopyPaste( _kaleidoscopeImageView, YES )r = fn CGRectMake( 695, 325, 50, 16 )textlabel _angleLabel, @"Angle\u00B0", r, _windowControlSetAlignment( _angleLabel, NSTextAlignmentCenter )r = fn CGRectMake( 700, 40, 40, 280 )slider _angleSlider, YES, 221.2, r, 0, 360, NO, _windowSliderSetTrackFillColor( _angleSlider, fn ColorRed )ControlSetContinuous( _angleSlider, YES )r = fn CGRectMake( 693, 20, 48, 16 )textlabel _angleValue, @"221.20", r, _windowControlSetAlignment( _angleValue, NSTextAlignmentCenter )r = fn CGRectMake( 745, 325, 60, 16 )textlabel _iterationLabel, @"Iteration", r, _windowControlSetAlignment( _iterationLabel, NSTextAlignmentCenter )r = fn CGRectMake( 755, 40, 40, 280 )slider _iterationSlider, YES, 25, r, 0, 100, NO, _windowControlSetContinuous( _iterationSlider, YES )r = fn CGRectMake( 752, 20, 45, 16 )textlabel _iterationValue, @"25", r, _windowControlSetAlignment( _iterationValue, NSTextAlignmentCenter )end fnlocal fn Kaleidoscope( image as ImageRef, angle as CFNumberRef, iterations as CFNumberRef ) as ImageRefCIImageRef   ciImage, resultCIContextRef context = fn CIContextWithOptions( NULL )CFDataRef dta = fn ImageTIFFRepresentation( image)ciImage = fn CIImageWithData( dta )CIFilterRef filter = fn CIFilterWithNameAndInputParameters( @"CIKaleidoscope", @{ kCIInputImageKey:ciImage, kCIInputAngleKey:angle, @"inputCount":iterations } )CIVectorRef civ = fn CIVectorWithXY( 150, 150 )ObjectSetValueForKey( filter, civ, kCIInputCenterKey )result = fn ObjectValueForKey( filter, kCIOutputImageKey )CGImageRef cgImage = fn CIContextCreateCGImage( context, result, fn CIImageExtent( result ) )CGSize size = fn ImageSize( image )end fn = fn ImageWithCGImage( cgImage, size )void local fn SetImage( angle as CFNumberRef, iterations as CFNumberRef )ImageRef  originalImage, kaleidoscopeImageoriginalImage = fn ImageViewImage( _colorImageView )kaleidoscopeImage = fn Kaleidoscope( originalImage, angle, iterations )ImageViewSetImage( _kaleidoscopeImageView, kaleidoscopeImage )end fnvoid local fn DoDialog( ev as long, tag as long, wnd as long, obj as CFTypeRef )double      angleNSInteger   iterationselect (ev)case _btnClickselect (tag)case _angleSliderangle = fn ControlDoubleValue( tag )ControlSetDoubleValue( _angleValue, angle )iteration = fn ControlDoubleValue( _iterationSlider )fn SetImage( @(angle), @(iteration) )case _iterationSlideriteration = fn ControlIntegerValue( tag )ControlSetIntegerValue( _iterationValue, iteration )angle = fn ControlDoubleValue( _angleSlider )fn SetImage( @(angle), @(iteration) )end selectcase _windowWillClose : endend selectend fnon Dialog fn DoDialogfn BuildWindowfn SetImage( @220.0, @14.0 )HandleEvents