/*CIVignetteDemo showing vignetting of a portrait with the CIVignette filter.Ken Shmidheiser6 February 2020*/include "Tlbx CoreImage.incl"output file "Vignette"include resources "portrait.jpg"_window = 1begin enum output 1_originalImageView_vignetteImageView_radiusSlider_intensitySlider_radiusValueField_intensityValueField_originalLabel_vignetteLabel_intensitytLabel_radiusLabelend enumvoid local fn BuildWindowlong   wndStyleMaskCGRect   rwndStyleMask  = NSWindowStyleMaskTitledwndStyleMask += NSWindowStyleMaskClosablewndStyleMask += NSWindowStyleMaskMiniaturizabler = fn CGRectMake( 0, 0, 1070, 600 )window _window, @"Vignette", r, wndStyleMaskr = fn CGRectMake( 20, 20, 440, 540 )imageview _originalImageView, YES, @"portrait.jpg", r, NSImageScaleAxesIndependently, NSImageAlignCenter, NSImageFramePhoto, _windowr = fn CGRectMake( 470, 20, 440, 540 )imageview _vignetteImageView, YES,, r, NSImageScaleAxesIndependently, NSImageAlignCenter, NSImageFramePhoto, _window// The distance from the center of the effect.r = fn CGRectMake( 935, 40, 40, 530 )slider _radiusSlider, YES, 2.00, r, 0.0, 2.0, NO, _windowControlSetContinuous( _radiusSlider, YES )// The intensity of the effect.r = fn CGRectMake( 990, 40, 40, 530 )slider _intensitySlider, YES, 1.36, r, -1.0, 2.0, NO, _windowControlSetContinuous( _intensitySlider, YES )r = fn CGRectMake( 935, 20, 40, 17 )textlabel _radiusValueField, @"2.00", r, _windowControlSetAlignment( _radiusValueField, NSTextAlignmentCenter )r = fn CGRectMake( 990, 20, 40, 17 )textlabel _intensityValueField, @"1.36", r, _windowControlSetAlignment( _intensityValueField, NSTextAlignmentCenter )r = fn CGRectMake( 20, 570, 440, 17 )textlabel _originalLabel, @"Original Image", r, _windowControlSetAlignment( _originalLabel, NSTextAlignmentCenter )r = fn CGRectMake( 470, 570, 440, 17 )textlabel _vignetteLabel, @"Vignetted Image", r, _windowControlSetAlignment( _vignetteLabel, NSTextAlignmentCenter )r = fn CGRectMake( 925, 570, 60, 17 )textlabel _radiusLabel, @"Radius", r, _windowControlSetAlignment( _radiusLabel, NSTextAlignmentCenter )r = fn CGRectMake( 980, 570, 64, 17 )textlabel _intensitytLabel, @"Intensity", r, _windowControlSetAlignment( _intensitytLabel, NSTextAlignmentCenter )end fnlocal fn ImageRefToCIImage( image as ImageRef ) as CIImageRefCFDataRef   dtaCIImageRef  ciImagedta = fn ImageTIFFRepresentationUsingCompression( image, NSTIFFCompressionNone, 0.0 )ciImage = fn CIImageWithData( dta )end fn = ciImagelocal fn CIImageToImageRef( ciImage as CIImageRef ) as ImageRefCIImageRepRef  repCGSize         sizeImageRef       imagerep = fn CIImageRepWithCIImage( ciImage )size = fn ImageRepSize( rep )image = fn ImageWithSize( size )ImageAddRepresentation( image, rep )end fn = imagelocal fn VignetteImageWithIntensity( inputCIImage as CIImageRef, radius as float, intensity as float ) as CIImageRefCIImageRef   vignetteCIImageCIFilterRef  vignetteFiltervignetteFilter = fn CIFilterWithName( @"CIVignette" )ObjectSetValueForkey( vignetteFilter, inputCIImage, @"inputImage" )ObjectSetValueForkey( vignetteFilter, @(radius), @"inputRadius" )ObjectSetValueForkey( vignetteFilter, @(intensity), @"inputIntensity" )vignetteCIImage = fn CIFilterOutputImage( vignetteFilter )end fn = vignetteCIImagevoid local fn VignetteImagedouble       intensity, radiusImageRef     originalImage, vignettedImageCIImageRef   ciImage, ciVignettedImageradius = fn ControlDoubleValue( _radiusSlider )intensity = fn ControlDoubleValue( _intensitySlider )originalImage = fn ImageViewImage( _originalImageView )ciImage = fn ImageRefToCIImage( originalImage )ciVignettedImage = fn VignetteImageWithIntensity( ciImage, (float)radius, (float)intensity )vignettedImage = fn CIImageToImageRef( ciVignettedImage )ImageViewSetImage( _vignetteImageView, vignettedImage )end fnvoid local fn DoDialog( ev as long, tag as long, wnd as long, obj as CFTypeRef )double intensity, radiusselect (ev)case _btnClickselect (tag )case _radiusSliderradius = fn ControlDoubleValue( tag )ControlSetDoubleValue( _radiusValueField, radius )fn VignetteImagecase _intensitySliderintensity = fn ControlDoubleValue( tag )ControlSetDoubleValue( _intensityValueField, intensity )fn VignetteImageend selectcase _windowWillClose : endend selectend fnon dialog fn DoDialogfn BuildWindowfn VignetteImageHandleEvents