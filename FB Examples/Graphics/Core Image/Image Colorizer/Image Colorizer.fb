/*CIMultiplyCompositing Image ColorizerThis demo uses the CIMultiplyCompositing filterto change the hue of the original image.Ken Shmidheiser6 February 2020*/include "Tlbx CoreImage.incl"output file "Image Colorizer"include resources "roses.jpg"_window = 1begin enum output 1_colorImageView_monoImageView_redLabel_greenLabel_blueLabel_alphaLabel_redSlider_greenSlider_blueSlider_alphaSlider_redValue_blueValue_greenValue_alphaValueend enumvoid local fn BuildWindowlong     wndStyleMaskCGRect   rwndStyleMask  = NSWindowStyleMaskTitledwndStyleMask += NSWindowStyleMaskClosablewndStyleMask += NSWindowStyleMaskMiniaturizabler = fn CGRectMake( 0, 0, 920, 300 )window _window, @"Image Colorizer", r, wndStyleMaskr = fn CGRectMake( 20, 20, 320, 260 )imageview _colorImageView, YES,, r, NSImageScaleAxesIndependently, NSImageAlignCenter, NSImageFramePhoto, _windowImageViewSetImageNamed( _colorImageView, @"roses.jpg" )r = fn CGRectMake( 360, 20, 320, 260 )imageview _monoImageView, YES,, r, NSImageScaleAxesIndependently, NSImageAlignCenter, NSImageFramePhoto, _windowr = fn CGRectMake( 700, 265, 40, 16 )textlabel _redLabel, @"Red", r, _windowTextFieldSetTextColor( _redLabel, fn ColorSystemRed )ControlSetAlignment( _redLabel, NSTextAlignmentCenter )r = fn CGRectMake( 750, 265, 46, 16 )textlabel _greenLabel, @"Green", r, _windowTextFieldSetTextColor( _greenLabel, fn ColorSystemGreen )ControlSetAlignment( _greenLabel, NSTextAlignmentCenter )r = fn CGRectMake( 800, 265, 43, 16 )textlabel _blueLabel, @"Blue", r, _windowTextFieldSetTextColor( _blueLabel, fn ColorSystemBlue )ControlSetAlignment( _blueLabel, NSTextAlignmentCenter )r = fn CGRectMake( 850, 265, 43, 16 )textlabel _alphaLabel, @"Alpha", r, _windowControlSetAlignment( _alphaLabel, NSTextAlignmentCenter )r = fn CGRectMake( 700, 40, 40, 220 )slider _redSlider, YES, 1000, r, 0, 1000, NO, _windowSliderSetTrackFillColor( _redSlider, fn ColorRed )ControlSetContinuous( _redSlider, YES )r = fn CGRectMake( 750, 40, 40, 220 )slider _greenSlider, YES, 1000, r, 0, 1000, NO, _windowSliderSetTrackFillColor( _greenSlider, fn ColorGreen )ControlSetContinuous( _greenSlider, YES )r = fn CGRectMake( 800, 40, 40, 220 )slider _blueSlider, YES, 1000, r, 0, 1000, NO, _windowSliderSetTrackFillColor( _blueSlider, fn ColorBlue )ControlSetContinuous( _blueSlider, YES )r = fn CGRectMake( 850, 40, 40, 220 )slider _alphaSlider, YES, 1000, r, 0, 1000, NO, _windowControlSetContinuous( _alphaSlider, YES )r = fn CGRectMake( 695, 20, 45, 16 )textlabel _redValue, @"1.000", r, _windowControlSetAlignment( _redValue, NSTextAlignmentCenter )r = fn CGRectMake( 745, 20, 45, 16 )textlabel _greenValue, @"1.000", r, _windowControlSetAlignment( _greenValue, NSTextAlignmentCenter )r = fn CGRectMake( 795, 20, 45, 16 )textlabel _blueValue, @"1.000", r, _windowControlSetAlignment( _blueValue, NSTextAlignmentCenter )r = fn CGRectMake( 845, 20, 45, 16 )textlabel _alphaValue, @"1.000", r, _windowControlSetAlignment( _alphaValue, NSTextAlignmentCenter )end fnlocal fn ImageRefToCIImage( image as ImageRef ) as CIImageRefCFDataRef   dtaCIImageRef  ciImagedta = fn ImageTIFFRepresentationUsingCompression( image, NSTIFFCompressionNone, 0.0 )ciImage = fn CIImageWithData( dta )end fn = ciImagelocal fn CIImageToImageRef( ciImage as CIImageRef ) as ImageRefCIImageRepRef  repCGSize         sizeImageRef       imagerep = fn CIImageRepWithCIImage( ciImage )size = fn ImageRepSize( rep )image = fn ImageWithSize( size )ImageAddRepresentation( image, rep )end fn = imagelocal fn CIImageTintedWithColor( ciImage as CIImageRef, tintColor as ColorRef ) as CIImageRefCGColorRef    tintCIColorRef    colorCIFilterRef   filterCIImageRef    colorCIImage, outputCIImagetint = fn ColorCGColor( tintColor )color = fn CIColorWithCGColor( tint )colorCIImage = fn CIImageWithColor( color )filter = fn CIFilterWithName( @"CIMultiplyCompositing" )ObjectSetValueForkey( filter, ciImage, @"inputImage" )ObjectSetValueForkey( filter, colorCIImage, @"inputBackgroundImage" )outputCIImage = fn CIFilterOutputImage( filter )end fn = outputCIImagelocal fn TintImagedouble      red, green, blue, alphaColorRef    tintColorImageRef    originalImage, tintedImageCIImageRef  ciInputImage, ciTintedImagered   = fn ControlDoubleValue( _redSlider   )green = fn ControlDoubleValue( _greenSlider )blue  = fn ControlDoubleValue( _blueSlider  )alpha = fn ControlDoubleValue( _alphaSlider )tintColor = fn ColorWithRGB( red/1000, green/1000, blue/1000, alpha/1000 )originalImage = fn ImageViewImage( _colorImageView )ciInputImage = fn ImageRefToCIImage( originalImage )ciTintedImage = fn CIImageTintedWithColor( ciInputImage, tintColor )tintedImage = fn CIImageToImageRef( ciTintedImage )ImageViewSetImage( _monoImageView, tintedImage )end fnvoid local fn DoDialog( ev as long, tag as long, wnd as long, obj as CFTypeRef )double  red, green, blue, alphaselect (ev)case _btnClickselect (tag)case _redSliderred = fn ControlDoubleValue( tag )if red == 1000.0 then ControlSetStringValue( _redValue, @"1.000" ) else ControlSetDoubleValue( _redValue, red/1000 )fn TintImagecase _greenSlidergreen = fn ControlDoubleValue( tag )if green == 1000.0 then ControlSetStringValue( _greenValue, @"1.000" ) else ControlSetDoubleValue( _greenValue, green/1000 )fn TintImagecase _blueSliderblue = fn ControlDoubleValue( tag )if blue == 1000.0 then ControlSetStringValue( _blueValue, @"1.000" ) else ControlSetDoubleValue( _blueValue, blue/1000 )fn TintImagecase _alphaSlideralpha = fn ControlDoubleValue( tag )if alpha == 1000.0 then ControlSetStringValue( _alphaValue, @"1.000" ) else ControlSetDoubleValue( _alphaValue, alpha/1000 )fn TintImageend selectcase _windowWillClose : endend selectend fnon Dialog fn DoDialogfn BuildWindowfn TintImageHandleEvents