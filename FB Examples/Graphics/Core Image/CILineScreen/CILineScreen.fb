/*CILineScreen DemoSimulates the line pattern of a halftone screen.Ken Shmidheiser6 February 2020*/include "Tlbx CoreImage.incl"output file "CILineScreen"include resources "flowers.png"_window = 1begin enum output 1_originalImageView_lineScreenImageView_angleSlider_sharpnessSlider_widthSlider_angleValueField_sharpnessValueField_widthValueField_originalImageLabel_screenedImageLabel_angleLabel_sharpnessLabel_widthlLabelend enumvoid local fn BuildWindowlong   wndStyleMaskwndStyleMask  = NSWindowStyleMaskTitledwndStyleMask += NSWindowStyleMaskClosablewndStyleMask += NSWindowStyleMaskMiniaturizableCGRect r = ( 0, 0, 1130, 600 )window _window, @"CILineScreen", r, wndStyleMaskr = fn CGRectMake( 20, 20, 440, 540 )imageview _originalImageView, YES, @"flowers.png", r, NSImageScaleAxesIndependently, NSImageAlignCenter, NSImageFramePhoto, _windowr = fn CGRectMake( 470, 20, 440, 540 )imageview _lineScreenImageView, YES,, r, NSImageScaleAxesIndependently, NSImageAlignCenter, NSImageFramePhoto, _windowr = fn CGRectMake( 935, 40, 40, 520 )slider _angleSlider, YES, 1.562, r, 0.0, 3.14, NO, _windowControlSetContinuous( _angleSlider, YES )r = fn CGRectMake( 995, 40, 40, 520 )slider _sharpnessSlider, YES, 0.25, r, 0.0, 1.0, NO, _windowControlSetContinuous( _sharpnessSlider, YES )r = fn CGRectMake( 1060, 40, 40, 520 )slider _widthSlider, YES, 9.00, r, 1.0, 50.0, NO, _windowControlSetContinuous( _widthSlider, YES )r = fn CGRectMake( 935, 20, 42, 17 )textlabel _angleValueField, @"1.562", r, _windowControlSetAlignment( _angleValueField, NSTextAlignmentCenter )r = fn CGRectMake( 990, 20, 40, 16 )textlabel _sharpnessValueField, @"0.25", r, _windowControlSetAlignment( _sharpnessValueField, NSTextAlignmentCenter )r = fn CGRectMake( 1060, 20, 40, 16 )textlabel _widthValueField, @"9.00", r, _windowControlSetAlignment( _widthValueField, NSTextAlignmentCenter )r = fn CGRectMake( 20, 570, 440, 17 )textlabel _originalImageLabel, @"Original Image", r, _windowControlSetAlignment( _originalImageLabel, NSTextAlignmentCenter )r = fn CGRectMake( 470, 570, 440, 17 )textlabel _screenedImageLabel, @"Linescreen Image", r, _windowControlSetAlignment( _screenedImageLabel, NSTextAlignmentCenter )r = fn CGRectMake( 925, 570, 60, 17 )textlabel _angleLabel, @"Angle", r, _windowControlSetAlignment( _angleLabel, NSTextAlignmentCenter )r = fn CGRectMake( 978, 570, 75, 17 )textlabel _widthlLabel, @"Sharpness", r, _windowControlSetAlignment( _widthlLabel, NSTextAlignmentCenter )r = fn CGRectMake( 1042, 570, 80, 17 )textlabel _sharpnessLabel, @"Width", r, _windowControlSetAlignment( _sharpnessLabel, NSTextAlignmentCenter )end fnlocal fn ImageRefToCIImage( image as ImageRef ) as CIImageRefCFDataRef dta = fn ImageTIFFRepresentationUsingCompression( image, NSTIFFCompressionNone, 0.0 )CIImageRef ciImage = fn CIImageWithData( dta )end fn = ciImagelocal fn CIImageToImageRef( ciImage as CIImageRef ) as ImageRefCIImageRepRef rep = fn CIImageRepWithCIImage( ciImage )CGSize size = fn ImageRepSize( rep )ImageRef image = fn ImageWithSize( size )ImageAddRepresentation( image, rep )end fn = imagelocal fn SharpenImageWithFilter( inputCIImage as CIImageRef, angle as CFNumberRef, sharpness as CFNumberRef, inputWidth as CFNumberRef ) as CIImageRefCIFilterRef  lineScreenFilterNSInteger    x, y// Set vectors to center of original image for this demoCGRect r = fn CIImageExtent( inputCIImage )x = r.size.width/2y = r.size.height/2CIVectorRef civ = fn CIVectorWithXY( (CGFloat)x, (CGFloat)y )lineScreenFilter = fn CIFilterWithName( @"CILineScreen" )ObjectSetValueForkey( lineScreenFilter, inputCIImage, @"inputImage" )ObjectSetValueForkey( lineScreenFilter, angle, @"inputAngle" )ObjectSetValueForkey( lineScreenFilter, sharpness, @"inputSharpness" )ObjectSetValueForkey( lineScreenFilter, inputWidth, @"inputWidth" )ObjectSetValueForkey( lineScreenFilter, civ, @"inputCenter" )CIImageRef ciLineScreenedImage = fn CIFilterOutputImage( lineScreenFilter )end fn = ciLineScreenedImagevoid local fn ScreenImagedouble        angleSliderValue, sharpenessSliderValue, widthSliderValueCFNumberRef   angle, sharpness, inputWidthImageRef      originalImage, screenedImageCIImageRef    ciImage, ciScreenedImageangleSliderValue = fn ControlDoubleValue( _angleSlider )sharpenessSliderValue = fn ControlDoubleValue( _sharpnessSlider )widthSliderValue = fn ControlDoubleValue( _widthSlider )angle = @( angleSliderValue )sharpness = @( sharpenessSliderValue )inputWidth = @( widthSliderValue )originalImage = fn ImageViewImage( _originalImageView )ciImage = fn ImageRefToCIImage( originalImage )ciScreenedImage = fn SharpenImageWithFilter( ciImage, angle, sharpness, inputWidth )screenedImage = fn CIImageToImageRef( ciScreenedImage )ImageViewSetImage( _lineScreenImageView, screenedImage )end fnvoid local fn DoDialog( ev as long, tag as long, wnd as long, obj as CFTypeRef )double   angle, sharpness, inputWidthselect (ev)case _btnClickselect (tag )case _angleSliderangle = fn ControlDoubleValue( tag )ControlSetDoubleValue( _angleValueField, angle )fn ScreenImagecase _sharpnessSlidersharpness = fn ControlDoubleValue( tag )ControlSetDoubleValue( _sharpnessValueField, sharpness )fn ScreenImagecase _widthSliderinputWidth = fn ControlDoubleValue( tag )ControlSetDoubleValue( _widthValueField, inputWidth )fn ScreenImageend selectcase _windowWillClose : endend selectend fnon dialog fn DoDialogfn BuildWindowfn ScreenImageHandleEvents