/*  QR Coder  Ken Shmidheiser  January 17, 2017  Updated and Enhanced  June 21, 2018  macOS 10.12+  Yet to do:  Add control to allow user to set dimensions of image file.  How to size QR Codes:  https://blog.qrstuff.com/2011/01/18/what-size-should-a-qr-code-be*/include "Tlbx CoreImage.incl"output file "QR Coder"// menus_mApplication = 0begin enum_iAbout_iSeparator_iPreferencesend enum_mFile = 1begin enum_iSave__iPrintend enum_mEdit = 2// window_window = 1begin enum output 1_imageView_infoLabel_textField_createBtn_saveBtn_printBtn_typeLabel_radio1_radio2_radio3_radio4_radio5end enum// alerts_stringAlert = 1_codeMissingAlert = 2void local fn BuildMenuMenuItemSetOnMenuAction( _mApplication, _iAbout )menu _mApplication, _iSeparatormenu _mApplication, _iPreferences,, @"Preferences…", @","menu _mFile,,, @"File"menu _mFile, _iSave,, @"Save…", @"s"menu _mFile, _iPrint,, @"Print…", @"p"editmenu _mEditend fnvoid local fn BuildWindowNSInteger  wndStyleMaskwndStyleMask  = NSWindowStyleMaskTitledwndStyleMask += NSWindowStyleMaskClosablewndStyleMask += NSWindowStyleMaskMiniaturizableCGRect r = ( 0, 0, 500, 400 )window _window, @"QR Coder", r, wndStyleMaskr = fn CGRectMake( 140, 165, 210, 210 )imageview _imageView,,, r, NSImageScaleProportionallyUpOrDown, NSImageAlignCenter, NSImageFramePhotoImageViewSetEditable( _imageView, YES )ImageViewSetAllowsCutCopyPaste( _imageView, YES )r = fn CGRectMake( 18, 117, 250, 22 )textlabel _infoLabel, @"Enter text to convert to QR Code:", rr = fn CGRectMake( 20, 55, 460, 60 )textfield _textField,, @"http://www.brilorsoftware.com/FB", rTextFieldSetBordered( _textField, YES )r = fn CGRectMake( 340, 15, 145, 28 )button _createBtn,,, @"Create QR Code", r, NSButtonTypeMomentaryLight, NSBezelStyleRegularSquarer = fn CGRectMake( 205, 15, 130, 28 )button _saveBtn,,, @"Save QR Code", r, NSButtonTypeMomentaryLight, NSBezelStyleRegularSquarer = fn CGRectMake( 70, 15, 130, 28 )button _printBtn,,, @"Print QR Code", r, NSButtonTypeMomentaryLight, NSBezelStyleRegularSquarer = fn CGRectMake( 365, 360, 69, 18 )textlabel _typeLabel, @"File type:", rr = fn CGRectMake( 365, 335, 69, 18 )button _radio1,, NSControlStateValueOn, @"BMP", r, NSButtonTypeRadior = fn CGRectOffset( r, 0, -22 )button _radio2,,, @"GIF", r, NSButtonTypeRadior = fn CGRectOffset( r, 0, -22 )button _radio3,,, @"JPEG", r, NSButtonTypeRadior = fn CGRectOffset( r, 0, -22 )button _radio4,,, @"PNG", r, NSButtonTypeRadior = fn CGRectOffset( r, 0, -22 )button _radio5,,, @"TIFF", r, NSButtonTypeRadioend fnlocal fn CreateQRCode( qrString as CFStringRef, imageWidth as double, imageHeight as double ) as CGImageReffloat   scaleX, scaleYCFDataRef dta = fn StringData( qrString, NSISOLatin1StringEncoding )CIFilterRef qrFilter = fn CIFilterWithName( @"CIQRCodeGenerator" )ObjectSetValueForkey( qrFilter, dta, @"inputMessage" )/*Optional error resilence levels (low to high):L: 7% M: 15% Q: 25% H: 30%*/ObjectSetValueForkey( qrFilter, @"H", @"inputCorrectionLevel" )CIImageRef qrImage = fn CIFilterOutputImage( qrFilter )CGRect extent = fn CIImageExtent( qrImage )scaleX = imageWidth / extent.size.widthscaleY = imageHeight / extent.size.heightqrImage = fn CIImageByApplyingTransform( qrImage, fn CGAffineTransformMakeScale(scaleX,scaleY) )BitmapImageRepRef rep = fn BitmapImageRepWithCIImage( qrImage )end fn = fn BitmapImageRepCGImage( rep )void local fn InputQRCodeData( string as CFStringRef )CGImageRef  qrCodeImageRef    imageForViewCGSize      sizeif  ( fn StringLength( string ) != 0 )qrCode = fn CreateQRCode( string, 210.0, 210.0 )elsealert _stringAlert, NSAlertStyleWarning, @"Text missing", @"Enter text to use for creating QR Code.", @"Okay", YESexit fnend ifif (qrCode)size = fn CGSizeMake( 210.0, 210.0 )imageForView = fn ImageWithCGImage( qrCode, size )ImageViewSetImage( _imageView, imageForView )elsealert _stringAlert, NSAlertStyleWarning, @"QR coding failed", @"Check validity of characters in your text.", @"Okay", YESend ifend fnvoid local fn SaveQRCodeCFDataRef                tiffData, imageDataCFStringRef              utiStr = NULLlong                     type = 0NSBitmapImageFileType    fileTypeCFURLref                 urlCFMutableDictionaryRef   propertiesBitmapImageRepRef        bitmapif fn ButtonState( _radio1 ) == NSControlStateValueOn then utiStr = @"com.microsoft.bmp"  : type = 0if fn ButtonState( _radio2 ) == NSControlStateValueOn then utiStr = @"com.compuserve.gif" : type = 1if fn ButtonState( _radio3 ) == NSControlStateValueOn then utiStr = @"public.jpeg"        : type = 2if fn ButtonState( _radio4 ) == NSControlStateValueOn then utiStr = @"public.png"         : type = 3if fn ButtonState( _radio5 ) == NSControlStateValueOn then utiStr = @"public.tiff"        : type = 4ImageRef qrImage = fn ImageViewImage( _imageView )if (qrImage )tiffData = fn ImageTIFFRepresentation( qrImage )SavePanelSetCanCreateDirectories( 1, YES )SavePanelSetShowsTagField( 1, NO )SavePanelSetExtensionHidden( 1, NO )url = savepanel 1, @"Save QR Code", utiStr, @"Untitled", @"Save QR Code", NULLif (url)properties = fn MutableDictionaryWithCapacity(0)bitmap = fn BitmapImageRepWithData( tiffData )select ( type )case 0 : fileType = NSBitmapImageFileTypeBMPcase 1 : fileType = NSBitmapImageFileTypeGIFcase 2 : fileType = NSBitmapImageFileTypeJPEGcase 3 : fileType = NSBitmapImageFileTypePNGcase else : fileType = NSBitmapImageFileTypeTIFFend selectimageData = fn BitmapImageRepRepresentationUsingType( bitmap, fileType, properties )fn DataWriteToURL( imageData, url, NSDataWritingAtomic, NULL )else// User canceledend ifelsealert _codeMissingAlert, NSAlertStyleWarning, @"QR Code missing", @"You must first create a QR code to save.", @"Okay", YESend ifend fnvoid local fn DoDialog( ev as long, tag as long, wnd as long )select (ev)case _btnClickselect (tag)case _createBtn : fn InputQRCodeData( fn ControlStringValue( _textField ) )case _saveBtn   : fn SaveQRCodecase _printBtnif ( fn ImageViewImage(_imageView) )ViewPrint( _imageView )elsealert _codeMissingAlert, NSAlertStyleWarning, @"QR Code missing", @"You must first create a QR code to print.", @"Okay", YESend ifend selectcase _alertDidEndAlertRemove( wnd )case _windowWillClose : endend selectend fnvoid local fn DoMenu( menuID as long, itemID as long )CFMutableAttributedStringRef   attrStrCFDictionaryRef                dictselect (menuID)case _mApplicationselect (itemID)case _iAboutattrStr = fn MutableAttributedStringWithString( @"A utility to create QR Codes on the fly." )dict = @{@"Credits":attrStr,@"ApplicationName":@"QR Coder",@"Version":@"1.0",@"Copyright":@"Copyright 2017-2018 Ken Shmidheiser",@"ApplicationVersion":@"1.0 alpha"}AppOrderFrontStandardAboutPanelWithOptions( dict )end selectcase _mFileselect (itemID )case _iSave  : fn SaveQRCodecase _iPrintif ( fn ImageViewImage(_imageView) )ViewPrint( _imageView )elsealert _codeMissingAlert, NSAlertStyleWarning, @"QR Code missing", @"You must first create a QR code to print.", @"Okay", YESend ifend selectend selectend fnfn BuildMenufn BuildWindowon dialog fn DoDialogon menu fn DoMenuHandleEvents