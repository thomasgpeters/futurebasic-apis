/*  CATextLayer Demo*/include resources "Teacup.png"include "NSLog.incl"_window = 1begin enum 1_layerView_upBtn_leftBtn_rightBtn_downBtn_scrollLabelend enumvoid local fn AddViewSublayer( tag as NSInteger )CAScrollLayerRef   scrollLayerCALayerRef         layer, sublayerlayer = fn ViewLayer( tag )sublayer = fn CALayerInitCALayerSetFrame( sublayer, fn CGRectMake(0,0,1000,1000) )CALayerSetContents( sublayer, fn ImageNamed(@"Teacup") )scrollLayer = fn CAScrollLayerInitCALayerSetFrame( scrollLayer, fn CGRectMake(0,0,360,360) )CALayerSetBorderWidth( scrollLayer, 1 )CALayerAddSublayer( scrollLayer, sublayer )CALayerAddSublayer( layer, scrollLayer )end fnvoid local fn BuildWindowwindow _window, @"CATextLayer Demo", (0,0,400,507), NSWindowStyleMaskTitledview _layerView, (20,127,360,360)ViewSetWantsLayer( _layerView, YES )fn AddViewSublayer( _layerView )button _upBtn,,, @"Up", (163,79,75,32)ControlSetContinuous( _upBtn, YES )button _leftBtn,,, @"Left", (107,46,75,32)ControlSetContinuous( _leftBtn, YES )button _rightBtn,,, @"Right", (219,46,75,32)ControlSetContinuous( _rightBtn, YES )button _downBtn,,, @"Down", (163,13,75,32)ControlSetContinuous( _downBtn, YES )textlabel _scrollLabel, @"scroll", (182,56,37,17)end fnvoid local fn ScrollByPoint( pt as CGPoint )CALayerRef         layerCFArrayRef         layersCAScrollLayerRef   scrollLayerstatic CGPoint     sLastPt// get view backing layerlayer = fn ViewLayer( _layerView )// get scrolllayerlayers = fn CALayerSublayers( layer )scrollLayer = fn ArrayObjectAtIndex(layers,0)sLastPt.x += pt.xsLastPt.y += pt.yCAScrollLayerScrollToPoint( scrollLayer, sLastPt )end fnvoid local fn DoDialog( ev as long, tag as long )select ( ev )case _btnClickselect ( tag )case _upBtnfn ScrollByPoint( fn CGPointMake(0,-40) )case _leftBtnfn ScrollByPoint( fn CGPointMake(40,0) )case _rightBtnfn ScrollByPoint( fn CGPointMake(-40,0) )case _downBtnfn ScrollByPoint( fn CGPointMake(0,40) )end selectend selectend fnfn BuildWindowon dialog fn DoDialogHandleEvents