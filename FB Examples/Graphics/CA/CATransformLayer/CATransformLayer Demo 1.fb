/*  CATransformLayer Demo*/begin enum 1_viewend enumbegin globalsCGFloat gSideLengthCATransformLayerRef gTxLayerend globalsgSideLength = 160local fn SideLayer( col as ColorRef ) as CALayerRefCGRect bounds = fn ViewBounds(_view)CALayerRef layer = fn CALayerInitCALayerSetFrame( layer, fn CGRectMake(0,0,gSideLength,gSideLength) )CALayerSetPosition( layer, fn CGPointMake( fn CGRectGetMidX(bounds), fn CGRectGetMidY(bounds) ) )CALayerSetBorderColor( layer, fn ColorLightGray )CALayerSetBorderWidth( layer, 1.0 )CALayerSetBackgroundColor( layer, col )end fn = layerlocal fn DegreesToRadians( degrees as CGFloat ) as CGFloatend fn = ( degrees * PI / 180 )void local fn Rotate( xOffset as double, yOffset as double )CGFloat         totalRotation, xRotationalFactor, yRotationalFactor, x, y, zCATransform3D   currentTransform, rotationdouble totalOffset = sqr( xOffset * xOffset + yOffset *yOffset )totalRotation = fn DegreesToRadians( totalOffset )xRotationalFactor = totalOffset/totalRotationyRotationalFactor = totalOffset/totalRotationcurrentTransform = fn CATransform3DTranslate( fn CALayerSublayerTransform(gTxLayer), 0.0, 0.0, 0.0 )x = xRotationalFactor * currentTransform.m12 - yRotationalFactor * currentTransform.m11y = xRotationalFactor * currentTransform.m22 - yRotationalFactor * currentTransform.m21z = xRotationalFactor * currentTransform.m32 - yRotationalFactor * currentTransform.m31rotation = fn CATransform3DRotate( fn CALayerSublayerTransform(gTxLayer), totalRotation, x, y, z )CALayerSetSublayerTransform( gTxLayer, rotation )end fnvoid local fn SetUpTransformLayerCATransform3D   txCALayerRef layer = fn SideLayer( fn ColorWithRGB(1,0,0,0.5) )CAlayerAddSubLayer( gTxLayer, layer )layer = fn SideLayer( fn ColorWithRGB(0.5,0.5,0.0,0.5) )tx = fn CATransform3DMakeTranslation( gSideLength / 2.0, 0.0, gSideLength / -2.0)tx = fn CATransform3DRotate( tx, fn DegreesToRadians(90.0), 0.0, 1.0, 0.0 )CALayerSetTransform( layer, tx )CALayerAddSublayer( gTxLayer, layer )layer = fn SideLayer( fn ColorWithRGB(1,1,0,0.5) )CALayerSetTransform( layer, fn CATransform3DMakeTranslation( 0.0, 0.0, -gSideLength ) )CALayerAddSublayer( gTxLayer, layer )layer = fn SideLayer( fn ColorWithRGB(0,1,0,0.5) )tx = fn CATransform3DMakeTranslation( gSideLength / -2.0, 0.0, gSideLength / -2.0)tx = fn CATransform3DRotate( tx, fn DegreesToRadians(90.0), 0.0, 1.0, 0.0 )CALayerSetTransform( layer, tx )CALayerAddSublayer( gTxLayer, layer )layer = fn SideLayer( fn ColorWithRGB(0,0,1,0.5) )tx = fn CATransform3DMakeTranslation( 0.0, gSideLength / -2.0, gSideLength / -2.0)tx = fn CATransform3DRotate( tx, fn DegreesToRadians(90.0), 1.0, 0.0, 0.0 )CALayerSetTransform( layer, tx )CALayerAddSublayer( gTxLayer, layer )layer = fn SideLayer( fn ColorWithRGB(1.0,0.0,1.0,0.5) )tx = fn CATransform3DMakeTranslation( 0.0, gSideLength / 2.0, gSideLength / -2.0)tx = fn CATransform3DRotate( tx, fn DegreesToRadians(90.0), 1.0, 0.0, 0.0 )CALayerSetTransform( layer, tx )CALayerAddSublayer( gTxLayer, layer )CALayerSetAnchorPointZ( gTxLayer, gSideLength / -2.0 )fn Rotate( 16.0, 16.0 )end fnvoid local fn BuildWindowwindow 1, @"CATransformLayer Demo", (0,0,500,500)view 1, (0,0,500,500)ViewSetWantsLayer( 1, YES )gTxLayer = fn CATransformLayerInitfn SetUpTransformLayerCALayerAddSublayer( fn ViewLayer(1), gTxLayer )//fn Rotate( 50, 50 )end fnfn BuildWindowHandleEvents