/*  CALayer Demo  Visualize changes to various aspects of a CALayer.  Ken Shmidheiser 20210309*/_window = 1begin enum 1_view_viewColorLabel_borderColorLabel_borderWidthLabel_heightLabell_cornerRadiusLabel_opacityLabel_showHideShadowLabel_viewColorBtn_borderColorBtn_borderWidthBtn_heightBtn_cornerRadiusBtn_opacityBtnend enumvoid local fn BuildWindowCGRect      rCALayerRef  layerCFArrayRef  arrayNSUInteger  i, xr = fn CGRectMake( 0, 0, 460, 360 )window _window, @"CALayer Demo", r, NSWindowStyleMaskTitled + NSWindowStyleMaskClosable + NSWindowStyleMaskMiniaturizabler = fn CGRectMake( 210, 20, 230, 320 )view _view, r, _windowViewSetWantsLayer( _view, YES )layer = fn ViewLayer( _view )CALayerSetBounds(          layer, fn ViewBounds( _view ) )CALayerSetBackgroundColor( layer, fn ColorWhite          )CALayerSetBorderColor(     layer, fn ColorRed            )CALayerSetBorderWidth(     layer, 10.0                   )CALayerSetCornerRadius(    layer, 10.0                   )// Create control labelsarray = @[@"Click to Change View Color:", @"Click to Change Border Color:", @"Change Border Width:", @"Change View Height:", @"Change Corner Radius:", @"Change Opacity:", @"Show/Hide Shadow:"]x = 0r = fn CGRectMake( 14, 309, 185, 31 )for i = _viewColorLabel to _opacityLabeltextlabel i,, rControlSetStringValue( i, fn ArrayObjectAtIndex( array, x ) )x++r = fn CGRectOffset( r, 0, -52 )next// Create controlsr = fn CGRectMake( 14, 292, 180, 28 )colorwell _viewColorBtn, YES, fn ColorWhite, r,, _windowr = fn CGRectOffset( r, 0, -52 )colorwell _borderColorBtn, YES, fn ColorRed, r,, _windowr = fn CGRectOffset( r, 0, -52 )slider _borderWidthBtn, YES, 10.0, r, 0.0, 50.0, YES, _windowControlSetContinuous( _borderWidthBtn, YES )r = fn CGRectOffset( r, 0, -52 )slider _heightBtn, YES, 320, r, 2, 320, YES, _windowControlSetContinuous( _heightBtn, YES )r = fn CGRectOffset( r, 0, -52 )slider _cornerRadiusBtn, YES, 15, r, 0, 100, YES, _windowControlSetContinuous( _cornerRadiusBtn, YES )r = fn CGRectOffset( r, 0, -52 )slider _opacityBtn, YES, 1.0, r, 0.0, 1.0, YES, _windowControlSetContinuous( _opacityBtn, YES )ColorPanelSetColor( fn ColorWhite )// initialize color panelend fnvoid local fn ChangeBorderWidth( wdth as float )CALayerSetBorderWidth( fn ViewLayer( _view ), wdth )end fnvoid local fn ChangeViewHeight( height as NSInteger )CGRect bounds = fn ViewBounds( _view )bounds.size.height = heightCALayerSetBounds( fn ViewLayer( _view ), bounds )end fnvoid local fn ChangeCornerRadius( radius as float )CALayerSetCornerRadius( fn ViewLayer( _view ), radius )end fnvoid local fn ChangeOpacity( opacity as float )CALayerSetOpacity( fn ViewLayer( _view ), opacity )end fnvoid local fn DoDialog( ev as long, tag as long, wnd as long )select ( ev )case _btnClickselect ( tag )case _borderWidthBtn   : fn ChangeBorderWidth(  fn ControlFloatValue( tag ) )case _heightBtn        : fn ChangeViewHeight(   fn ControlFloatValue( tag ) )case _cornerRadiusBtn  : fn ChangeCornerRadius( fn ControlFloatValue( tag ) )case _opacityBtn       : fn ChangeOpacity(      fn ControlFloatValue( tag ) )end selectcase _colorPanelChangeColorif ( fn ColorWellIsActive(_viewColorBtn) )CALayerSetBackgroundColor( fn ViewLayer( _view ), fn ColorPanelColor )elseif ( fn ColorWellIsActive(_borderColorBtn) )CALayerSetBorderColor( fn ViewLayer( _view ), fn ColorPanelColor )end ifend ifend selectend fnon dialog fn DoDialogfn BuildWindowHandleEvents