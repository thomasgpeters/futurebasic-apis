include "Tlbx Vision.incl"include "NSLog.incl"include resources "ted.png"include resources "text.png"include resources "chart.png"#define IMAGE_NAMES @[@"ted",@"text",@"chart"]_window = 1begin enum 1_imageView_rectView_leftBtn_rightBtn_scanBtnend enum// resize and position rect view over imagevoid local fn SetRectViewFrameCGRect imgViewRectCGSize imgSizeCGFloat x, yimgViewRect = fn ViewFrame( _imageView )imgSize = fn ImageSize( fn ImageViewImage( _imageView ) )x = imgViewRect.origin.x + ( imgViewRect.size.width - imgSize.width ) / 2y = imgViewRect.origin.y + ( imgViewRect.size.height - imgSize.height ) / 2view _rectView, fn CGRectMake( x, y, imgSize.width, imgSize.height )end fnvoid local fn BuildWindowwindow _window, @"VNRecognizeTextRequest Demo", (0,0,600,600), NSWindowStyleMaskTitledimageview _imageView,, fn ArrayFirstObject(IMAGE_NAMES), (64,60,472,520)ViewPropertySet( _imageView, @"index", @0 )subclassview _rectViewfn SetRectViewFramebutton _leftBtn,,,, (20,302,36,36)ButtonSetImage( _leftBtn, NSImageNameGoBackTemplate )button _rightBtn,,,, (544,302,36,36)ButtonSetImage( _rightBtn, NSImageNameGoForwardTemplate )button _scanBtn,,, @"Scan Image", (248,13,105,32)end fnvoid local fn NextImage( dir as long )long index, countcount =  = fn ArrayCount( IMAGE_NAMES )index = intval( fn ViewProperty( _imageView, @"index" ) ) + dirif ( index >= count ) then index = 0if ( index < 0 ) then index = count - 1ViewPropertySet( _imageView, @"index", @(index) )imageview _imageView,, fn ArrayObjectAtIndex( IMAGE_NAMES, index )AppPropertyRemove( @"rects" )fn SetRectViewFrameend fnvoid local fn ViewDrawRectCGRect											 rCFArrayRef                observationsVNRectangleObservationRef observationImageRef                  imageimage = fn ImageViewImage( _imageView )observations = fn AppProperty( @"rects" )if ( observations )for observation in observationsr = fn VNRectangleObservationRectInImage( observation, image )BezierPathStrokeRect( r, 1, fn ColorRed )nextend ifend fnvoid local fn ScanImageVNRecognizeTextRequestRef      requestCFArrayRef                     requests, results, topCandidatesImageRef                       imageVNImageRequestHandlerRef       handlerErrorRef                       errVNRecognizedTextObservationRef observationVNRecognizedTextRef            recognizedTextCFStringRef                    stringCFMutableArrayRef              rectObservationsVNRectangleObservationRef      rectObservationrectObservations = fn MutableArrayWithCapacity(0)request = fn VNRecognizeTextRequestInitrequests = @[request]image = fn ImageViewImage( _imageView )handler = fn VNImageRequestHandlerWithImage( image, @{} )err = NULLif ( fn VNImageRequestHandlerPerformRequests( handler, requests, @err ) )results = fn VNRecognizeTextRequestResults( fn ArrayFirstObject( requests ) )for observation in resultstopCandidates = fn VNRecognizedTextObservationTopCandidates( observation, 1 )recognizedText = fn ArrayFirstObject( topCandidates )string = fn VNRecognizedTextString( recognizedText )rectObservation = fn VNRecognizedTextBoundingBoxForRange( recognizedText, fn CFRangeMake(0,len(string)), NULL )MutableArrayAddObject( rectObservations, rectObservation )nextelseNSLog(@"Error: %@",err)end ifAppPropertySet( @"rects", rectObservations )ViewSetNeedsDisplay( _rectView )end fnvoid local fn DoDialog( ev as long, tag as long )select ( ev )case _btnClickselect ( tag )case _leftBtn  : fn NextImage( -1 )case _rightBtn : fn NextImage( 1 )case _scanBtn  : fn ScanImageend selectcase _viewDrawRectselect ( tag )case _rectView : fn ViewDrawRectend selectend selectend fnfn BuildWindowon dialog fn DoDialogHandleEvents