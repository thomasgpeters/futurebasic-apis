begin enum 1_window1_window2_window3end enumvoid local fn ViewDraw1CGRect r = fn ViewBounds( _windowContentViewTag )CGContextRef ctx = fn GraphicsContextCurrentCGContextCGContextSaveGState( ctx )CGContextTranslateCTM( ctx, 0.0, r.size.height )CGContextScaleCTM( ctx, 1.0, -1.0 )CGContextSetLineWidth(ctx, 6.0)CGContextSetRGBStrokeColor( ctx, 1.0, 0.0, 0.0, 1.0  )CGContextStrokeRect( ctx, fn CGRectMake(150,150,100,100) )CGContextRestoreGState( ctx )end fnvoid local fn ViewDraw2CGRect r = fn ViewBounds( _windowContentViewTag )CGContextRef ctx = fn GraphicsContextCurrentCGContextCGContextSaveGState( ctx )CGContextTranslateCTM( ctx, 0.0, r.size.height )CGContextScaleCTM( ctx, 1.0, -1.0 )CGContextBeginPath( ctx )CGContextSetLineWidth( ctx, 6.0)CGContextSetRGBStrokeColor( ctx, 0.0, 1.0, 0.0, 1.0  )CGContextStrokeEllipseInRect( ctx, fn CGRectMake(30,30,420,210) )CGContextSetLineWidth( ctx, 2.0)CGContextSetRGBStrokeColor( ctx, 1.0, 0.0, 1.0, 1.0  )CGContextMoveToPoint( ctx, 60, 135 )CGContextAddLineToPoint( ctx, 420,135 )CGContextStrokePath( ctx )CGContextClosePath( ctx )CGContextRestoreGState( ctx )end fnvoid local fn ViewDraw3CGRect r = fn ViewBounds( _windowContentViewTag )CGContextRef ctx = fn GraphicsContextCurrentCGContextCGContextSaveGState( ctx )CGContextTranslateCTM( ctx, 0.0, r.size.height )CGContextScaleCTM( ctx, 1.0, -1.0 )CGContextStrokeEllipseInRect( ctx, fn CGRectMake(40,60,220,280) )CGContextSetLineWidth( ctx, 6.0)CGContextSetRGBStrokeColor( ctx, 0.0, 0.0, 1.0, 1.0  )CGContextStrokeRect( ctx, fn CGRectMake(100,100,100,200) )CGContextRestoreGState( ctx )end fnvoid local fn BuildWindowswindow 1, @"Window 1", (20,450,400,400)WindowSubclassContentView(1)ViewSetNeedsDisplay( _windowContentViewTag )window 2, @"Window 2", (500,550,480,270)WindowSubclassContentView(2)ViewSetNeedsDisplay( _windowContentViewTag )window 3, @"Window 3", (440,100,300,400)WindowSubclassContentView(3)ViewSetNeedsDisplay( _windowContentViewTag )end fnvoid local fn DoDialog( ev as long, tag as long, wnd as long )select ( ev )case _viewDrawRectselect ( wnd )case _window1 : fn ViewDraw1case _window2 : fn ViewDraw2case _window3 : fn ViewDraw3end selectend selectend fnfn BuildWindowson dialog fn DoDialogHandleEvents