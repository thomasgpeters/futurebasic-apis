// Ken Shmidheiser 202211_window = 1_wndWidth = 680void local fn BuildWindowwindow _window, @"Fractal Tree", ( 0, 0, _wndWidth, 600 )WindowSetBackgroundColor( _window, fn ColorBlack )WindowSubclassContentView( _window )end fnlocal fn PlotTree( x1 as double, y1 as double, size as long, angle as double, spread as long, depth as long, scale as double )double x2, y2pen 1.5, fn ColorGreen, NSLineCapStyleSquare// Convert angle to radiansx2 = x1 + size * cos(angle * pi / 180)y2 = y1 + size * sin(angle * pi / 180)line x1, y1, x2, y2if ( depth > 0 )fn PlotTree( x2, y2, size * scale, angle - spread, spread, depth - 1, scale )fn PlotTree( x2, y2, size * scale, angle + spread, spread, depth - 1, scale )end ifend fnvoid local fn DoMouse( tag as NSInteger )CGRect   r = fn ViewFrame( _windowContentViewTag )CGPoint pt = fn EventLocationInView( tag )if ( fn CGRectContainsPoint( r, pt ) )double spread = ( pt.x / (_wndWidth / 2 ) ) * 90clsfn PlotTree( _wndWidth / 2, 550, 140, -90, spread, 10, 0.75 )end ifend fnvoid local fn DoDialog( ev as long, tag as long )select ( tag )case _windowContentViewTagselect ( ev )case _viewMouseMoved   : fn DoMouse( tag )end selectend selectselect ( ev )case _windowWillClose : endend selectend fnon dialog fn DoDialogfn BuildWindowfn PlotTree( _wndWidth / 2, 550, 140, -90, 25, 10, 0.75 )HandleEvents