/*Original CFIndexSet demo by Bernie Wylde 20091214Brian 20180213: Rewritten for CocoaUIShows mutable array manipulation using Indexsets.(1) Create an array from an input array based on the IndexSet(2) Remove several array indices based on an IndexSet in one call*/include "NSLog.incl"void local fn ShowArray( array as CFArrayRef )CFStringRef   stringfor string in arrayNSLog(@": %@",string )nextend fnvoid local fn DoIt// create a mutable array with arbitrary valuesNSLog(@"--- Create a mutable array ---")CFMutableArrayRef mutArray = fn MutableArrayWithCapacity( 0 )MutableArrayAddObject( mutArray, @"alpha" )    // index 0MutableArrayAddObject( mutArray, @"bravo" )MutableArrayAddObject( mutArray, @"charlie" )  // index 2MutableArrayAddObject( mutArray, @"delta" )MutableArrayAddObject( mutArray, @"echo" )MutableArrayAddObject( mutArray, @"foxtrot" )  // index 5MutableArrayAddObject( mutArray, @"golf" )fn ShowArray( mutArray )NSLog(@"\r--- Create a mutable IndexSet ---")MutableIndexSetRef mutSet1 = fn MutableIndexSetInitfn MutableIndexSetAddIndex( mutSet1, 2 ) // "charlie"fn MutableIndexSetAddIndex( mutSet1, 0 ) // "alpha"fn MutableIndexSetAddIndex( mutSet1, 5 ) // "foxtrot"NSUInteger count = fn IndexSetCount( mutSet1 )NSLog(@"Count: %ld\nFirst index: %ld\nLast index:%ld", count,fn IndexSetFirstIndex( mutSet1), fn IndexSetLastIndex( mutSet1) )// create a new CFArray with the objects in our mutable array - the IndexSet holds the element numbersNSLog(@"\r--- Create array of objects at indexes --- ")CFArrayRef setArray = fn ArrayObjectsAtIndexes( mutArray, mutSet1 )fn ShowArray( setArray )// remove the mutable array objects at the element numbers in IndexSetNSLog(@"\r--- Remove objects at indexes --- ")MutableArrayRemoveObjectsAtIndexes( mutArray, mutSet1 )fn ShowArray( mutArray )end fnfn DoItHandleEvents