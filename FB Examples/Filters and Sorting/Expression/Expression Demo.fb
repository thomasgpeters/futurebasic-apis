/*  Expression Demo*/include "NSLog.incl"_window = 1begin enum 1_formatFld_equalsLabel_resultLabel_calcBtnend enumvoid local fn BuildWindowwindow _window, @"Expression Demo", (0,0,340,90)WindowSetContentMinSize( _window, fn CGSizeMake( 340, 90 ) )textfield _formatFld,, @"23 x 10", (20,49,200,21)ViewSetAutoresizingMask( _formatFld, NSViewMinYMargin + NSViewWidthSizable )textlabel _equalsLabel, @"=", (226,52,13,16)ViewSetAutoresizingMask( _equalsLabel, NSViewMinYMargin + NSViewMinXMargin )textlabel _resultLabel,, (243,52,79,16)ViewSetAutoresizingMask( _resultLabel, NSViewMinYMargin + NSViewMinXMargin )button _calcBtn,,, @"Calc", (14,13,67,32)ButtonSetKeyEquivalent( _calcBtn, @"\r" )ViewSetAutoresizingMask( _calcBtn, NSViewMaxYMargin )WindowMakeFirstResponder( _window, _formatFld )end fnvoid local fn Calculate( format as CFStringRef )format = fn StringByReplacingOccurrencesOfString( fn StringLowercaseString(format), @"x", @"*" )format = fn StringByReplacingOccurrencesOfString( format, @"^", @"**" )ExpressionRef expression = fn ExpressionWithFormat( format )//NSLog(@"we get here if no exception")CFNumberRef result = fn ExpressionValueWithObject( expression, NULL, NULL )CFStringRef string = fn NumberStringValue( result )textlabel _resultLabel, stringend fnvoid local fn DoDialog( ev as long, tag as long )select ( ev )case _btnClickselect ( tag )case _calcBtn : fn Calculate( fn ControlStringValue( _formatFld ) )end selectend selectend fnfn BuildWindowon dialog fn DoDialogHandleEvents