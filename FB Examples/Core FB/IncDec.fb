include "NSLog.incl"/*   shows how to update a long's value.   1. using the INC 'long' FB command   2. using C style indirection to dereference a typed pointer   3. easily adding/subtracting from a integer passed as a pointer to a function.       Brian 20200814*/local fn PassPtrToFunc( aLong as ^long )inc long ( aLong )end fnNSLogSetTabInterval( 130 )// First Waylong myInt = 37   																							// declare variable and initializepointer p = @myInt																							// declare pointer and initialize to var's addressNSLog(@"myInt's original value:\t%ld", myInt )	// show initial value of varinc long ( p )																								// increment the value at the address pointed to by 'p'NSLog(@"myInt's value after 1st increment:\t%ld", myInt )// Second Way^long myIntPtr = @myInt					// declare a pointer to a long and initialize to var's address*myIntPtr += 1						// use 'C' style dereference to increment the value myIntPtr's addressNSLog(@"myInt's value after 2nd increment:\t%ld", myInt )dec long ( myIntPtr )					// decrement the value at the address pointed to by myIntPtrNSLog(@"myInt's value after decrement:\t%ld", myInt )inc word ( myIntPtr )NSLog(@"myInt's value after 3rd increment:\t%ld", myInt )fn PassPtrToFunc( @myInt )NSLog(@"myInt's value after function call:\t%ld", myInt )HandleEvents