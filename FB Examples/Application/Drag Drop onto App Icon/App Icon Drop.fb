/*  App Icon Drop  20181006 Ken Shmidheiser*/// Must be same name as in Info.plistoutput file "App Icon Drop"_mFile = 1begin enum_iOpenend enum_mEdit = 2_window = 1begin enum output 1_scrollView_textView_openBtnend enumvoid local fn BuildMenumenu _mFile,,, @"File"menu _mFile, _iOpen,, @"Open file…", @"o"editmenu _mEditend fnvoid local fn BuildWindowCGRect r = ( 0, 0, 600, 450 )window _window, fn ProcessInfoProcessName, rWindowSetMinSize( _window, fn CGSizeMake( 450, 200 ) )r = fn CGRectMake( 20, 61, 560, 369 )scrollview _scrollView, r, NSLineBorderViewSetAutoresizingMask( _scrollView, NSViewWidthSizable + NSViewHeightSizable )subclass// subclass next widget to allow drag droptextview _textView,, _scrollViewTextViewSetTextContainerInset( _textView, fn CGSizeMake( 8, 8 ) )ViewRegisterForDraggedTypes( _textView, @[@"public.text",@"bas",@"txt",@"incl"] )TextSetFontWithName( _textView, @"Menlo", 13.0 )TextSetString( _textView, @"" )r = fn CGRectMake( 478, 13, 108, 32 )button _openBtn,,, @"Open file…", rViewSetAutoresizingMask( _openBtn, NSViewMinXMargin + NSViewMaxYMargin )WindowMakeFirstResponder( _window, _textView )end fnvoid local fn SetViewText( url as CFURLRef )CFStringRef tempStr = fn StringWithContentsOfURL( url, NSMacOSRomanStringEncoding, NULL )WindowSetTitleWithRepresentedURL( _window, url )TextSetString( _textView, tempStr )end fnvoid local fn OpenFileCFURLRef url = openpanel 1, @"Open file", @"kUTTypeText;bas;txt;incl", @"Open file…"if ( url )fn SetViewText( url )else// User canceledend ifend fnvoid local fn DoMenu( menuID as long, itemID as long )select (menuID)case _mFileselect (itemID )case _iOpen : fn OpenFileend selectend selectend fnvoid local fn DoDialog( ev as long, tag as long )select (ev)case _btnClickselect (tag)case _openBtn : fn OpenFileend selectcase _viewPerformDragOperation : fn SetViewText( fn DialogEventURL )case _windowWillClose : endend selectend fnvoid local fn DoAppEvent( ev as long )select (ev)case _appOpenURLs : fn SetViewText( fn AppEventURL )end selectend fnon menu fn DoMenuon dialog fn DoDialogon appevent fn DoAppEventfn BuildMenufn BuildWindowHandleEvents