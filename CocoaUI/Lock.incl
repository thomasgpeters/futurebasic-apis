/*  Lock  Bernie Wylde 20231215  Framework: Foundation  Inherits from: Object  NSLock - https://developer.apple.com/documentation/foundation/nslock?language=objc*/// Inittoolbox fn LockInit = LockRef// autoreleased// Acquiretoolbox fn LockBeforeDate( LockRef ref, CFDateRef limit ) = BOOLtoolbox fn LockTry( LockRef ref ) = BOOL// Nametoolbox fn LockName( LockRef ref ) = CFStringReftoolbox LockSetName( LockRef ref, CFStringRef name )/*  Locking  Protocol*/toolbox LockingLock( LockingRef ref )toolbox LockingUnlock( LockingRef ref )/*  ConditionLock  Inherits from: Object*/// Inittoolbox fn ConditionLockWithCondition( NSInteger condition ) = ConditionLockRef// Conditiontoolbox fn ConditionLockCondition( ConditionLockRef ref ) = NSInteger// Acquire and releasetoolbox fn ConditionLockLockBeforeDate( ConditionLockRef ref, CFDateRef limit ) = BOOLtoolbox ConditionLockLockWhenCondition( ConditionLockRef ref, NSInteger condition )toolbox fn ConditionLockLockWhenConditionBeforeDate( ConditionLockRef ref, NSInteger condition, CFDateRef limit ) = BOOLtoolbox fn ConditionLockTryLock( ConditionLockRef ref ) = BOOLtoolbox fn ConditionLockTryLockWhenCondition( ConditionLockRef ref, NSInteger condition ) = BOOLtoolbox ConditionLockUnlockWithCondition( ConditionLockRef ref, NSInteger condition )// Identifytoolbox fn ConditionLockName( ConditionLockRef ref ) = CFStringReftoolbox ConditionLockSetName( ConditionLockRef ref, CFStringRef name )/*  RecursiveLock  Inherits from: Object*/// Inittoolbox fn RecursiveLockInit = RecursiveLockRef// autoreleased// Acquiretoolbox fn RecursiveLockLockBeforeDate( RecursiveLockRef ref, CFDateRef limit ) = BOOLtoolbox fn RecursiveLockTryLock( RecursiveLockRef ref ) = BOOL// Namingtoolbox fn RecursiveLockName( RecursiveLockRef ref ) = CFStringReftoolbox RecursiveLockSetName( RecursiveLockRef ref, CFStringRef name )/*  Condition  Inherits from: Object*/// Inittoolbox fn ConditionInit = ConditionRef// autoreleased// Waitingtoolbox ConditionWait( ConditionRef ref )toolbox fn ConditionWaitUntilDate( ConditionRef ref, CFDateRef limit ) = BOOL// Signal waiting threadstoolbox ConditionSignal( ConditionRef ref )toolbox ConditionBroadcast( ConditionRef ref )// Identifytoolbox fn ConditionName( ConditionRef ref ) = CFStringReftoolbox ConditionSetName( ConditionRef ref, CFStringRef name )