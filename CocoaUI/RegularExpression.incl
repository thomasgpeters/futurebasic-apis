/*  RegularExpression.incl  Bernie Wylde 20180928  Framework: Foundation  Inherits from: Object  NSRegularExpression - https://developer.apple.com/documentation/foundation/nsregularexpression?language=objc*/// options#if ndef _DEFINEDINCOCOA#define NSRegularExpressionOptions as NSUInteger#endifsystem NSRegularExpressionOptions NSRegularExpressionCaseInsensitivesystem NSRegularExpressionOptions NSRegularExpressionAllowCommentsAndWhitespacesystem NSRegularExpressionOptions NSRegularExpressionIgnoreMetacharacterssystem NSRegularExpressionOptions NSRegularExpressionDotMatchesLineSeparatorssystem NSRegularExpressionOptions NSRegularExpressionAnchorsMatchLinessystem NSRegularExpressionOptions NSRegularExpressionUseUnixLineSeparatorssystem NSRegularExpressionOptions NSRegularExpressionUseUnicodeWordBoundaries// matching flags#if ndef _DEFINEDINCOCOA#define NSMatchingFlags as NSUInteger#endifsystem NSMatchingFlags NSMatchingProgresssystem NSMatchingFlags NSMatchingCompletedsystem NSMatchingFlags NSMatchingHitEndsystem NSMatchingFlags NSMatchingRequiredEndsystem NSMatchingFlags NSMatchingInternalError// matching options#if ndef _DEFINEDINCOCOA#define NSMatchingOptions as NSUInteger#endifsystem NSMatchingOptions NSMatchingReportProgresssystem NSMatchingOptions NSMatchingReportCompletionsystem NSMatchingOptions NSMatchingAnchoredsystem NSMatchingOptions NSMatchingWithTransparentBoundssystem NSMatchingOptions NSMatchingWithoutAnchoringBounds// Classtoolbox fn RegularExpressionClass = ClassRef// Createtoolbox fn RegularExpressionWithPattern( CFStringRef pattern, NSRegularExpressionOptions options, ErrorRef *err ) = RegularExpressionRef// Getting the regex and optionstoolbox fn RegularExpressionPattern( RegularExpressionRef ref ) = CFStringReftoolbox fn RegularExpressionOptions( RegularExpressionRef ref ) = NSRegularExpressionOptionstoolbox fn RegularExpressionNumberOfCaptureGroups( RegularExpressionRef ref ) = NSUInteger// Searchingtoolbox fn RegularExpressionNumberOfMatches( RegularExpressionRef ref, CFStringRef string, NSMatchingOptions options, CFRange range ) = NSUInteger/*  RegularExpressionEnumerateMatches  Callback function example:    void local fn RegexCallback( result as TextCheckingResultRef, flags as NSMatchingFlags, stp ^BOOL, userData as ptr )      // *stp = YES // stop enumeration    end fn*/toolbox RegularExpressionEnumerateMatches( RegularExpressionRef ref, CFStringRef string, NSMatchingOptions options, CFRange range, ptr callback, ptr userData )toolbox fn RegularExpressionMatches( RegularExpressionRef ref, CFStringRef string, NSMatchingOptions options, CFRange range ) = CFArrayReftoolbox fn RegularExpressionFirstMatch( RegularExpressionRef ref, CFStringRef string, NSMatchingOptions options, CFRange range ) = TextCheckingResultReftoolbox fn RegularExpressionRangeOfFirstMatch( RegularExpressionRef ref, CFStringRef string, NSMatchingOptions options, CFRange range ) = CFRange// Replacingtoolbox fn RegularExpressionReplaceMatches( RegularExpressionRef ref, CFMutableStringRef string, NSMatchingOptions options, CFRange range, CFStringRef templ ) = NSUIntegertoolbox fn RegularExpressionStringByReplacingMatches( RegularExpressionRef ref, CFStringRef string, NSMatchingOptions options, CFRange range, CFStringRef templ ) = CFStringRef// Escapingtoolbox fn RegularExpressionEscapedTemplate( CFStringRef string ) = CFStringReftoolbox fn RegularExpressionEscapedPattern( CFStringRef string ) = CFStringRef// Custom replacetoolbox fn RegularExpressionReplacementStringForResult( RegularExpressionRef ref, TextCheckingResultRef result, CFStringRef string, NSInteger offset, CFStringRef templ ) = CFStringRef/*  DataDetector.incl  Inherits from: RegularExpression/Object  NSDataDetector - https://developer.apple.com/documentation/foundation/nsdatadetector?language=objc*/// Createtoolbox fn DataDetectorWithTypes( NSTextCheckingTypes types, ErrorRef *err ) = DataDetectorRef// Checking typestoolbox fn DataDetectorCheckingTypes( DataDetectorRef ref ) = NSTextCheckingTypes