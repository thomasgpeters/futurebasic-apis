/*  Workspace.incl  Bernie Wylde 20170401  Framework: AppKit  Inherits from: Object  NSWorkspace - https://developer.apple.com/documentation/appkit/nsworkspace?language=objc*/// launch options#if ndef _DEFINEDINCOCOA#define NSWorkspaceLaunchOptions as NSUInteger// deprecated: 10.15#endifsystem NSWorkspaceLaunchOptions NSWorkspaceLaunchAndPrint                 // deprecated: 11.0system NSWorkspaceLaunchOptions NSWorkspaceLaunchWithErrorPresentation    // deprecated: 11.0system NSWorkspaceLaunchOptions NSWorkspaceLaunchInhibitingBackgroundOnly // deprecated: 11.0system NSWorkspaceLaunchOptions NSWorkspaceLaunchWithoutAddingToRecents   // deprecated: 11.0system NSWorkspaceLaunchOptions NSWorkspaceLaunchWithoutActivation        // deprecated: 11.0system NSWorkspaceLaunchOptions NSWorkspaceLaunchAsync                    // deprecated: 11.0system NSWorkspaceLaunchOptions NSWorkspaceLaunchNewInstance              // deprecated: 11.0system NSWorkspaceLaunchOptions NSWorkspaceLaunchAndHide                  // deprecated: 11.0system NSWorkspaceLaunchOptions NSWorkspaceLaunchAndHideOthers            // deprecated: 11.0system NSWorkspaceLaunchOptions NSWorkspaceLaunchDefault                  // deprecated: 11.0system NSWorkspaceLaunchOptions NSWorkspaceLaunchAllowingClassicStartup   // deprecated: 11.0system NSWorkspaceLaunchOptions NSWorkspaceLaunchPreferringClassic        // deprecated: 11.0// launch configuration optionssystem CFStringRef NSWorkspaceLaunchConfigurationAppleEvent   // deprecated: 11.0system CFStringRef NSWorkspaceLaunchConfigurationArguments    // deprecated: 11.0system CFStringRef NSWorkspaceLaunchConfigurationEnvironment  // deprecated: 11.0system CFStringRef NSWorkspaceLaunchConfigurationArchitecture // deprecated: 11.0// icon creation options#if ndef _DEFINEDINCOCOA#define NSWorkspaceIconCreationOptions as NSUInteger#endifsystem NSWorkspaceIconCreationOptions NSExcludeQuickDrawElementsIconCreationOptionsystem NSWorkspaceIconCreationOptions NSExclude10_4ElementsIconCreationOption// authorization types#if ndef _DEFINEDINCOCOA#define NSWorkspaceAuthorizationType as NSInteger// macOS 10.14+#endifsystem NSWorkspaceAuthorizationType NSWorkspaceAuthorizationTypeCreateSymbolicLink // macOS 10.14+system NSWorkspaceAuthorizationType NSWorkspaceAuthorizationTypeSetAttributes      // macOS 10.14+system NSWorkspaceAuthorizationType NSWorkspaceAuthorizationTypeReplaceFile        // macOS 10.14+// application notificationssystem CFStringRef NSWorkspaceApplicationKeysystem CFStringRef NSWorkspaceWillLaunchApplicationNotificationsystem CFStringRef NSWorkspaceDidLaunchApplicationNotificationsystem CFStringRef NSWorkspaceDidTerminateApplicationNotificationsystem CFStringRef NSWorkspaceDidHideApplicationNotificationsystem CFStringRef NSWorkspaceDidUnhideApplicationNotificationsystem CFStringRef NSWorkspaceDidActivateApplicationNotificationsystem CFStringRef NSWorkspaceDidDeactivateApplicationNotification// volume notificationssystem CFStringRef NSWorkspaceVolumeLocalizedNameKeysystem CFStringRef NSWorkspaceVolumeURLKeysystem CFStringRef NSWorkspaceVolumeOldLocalizedNameKeysystem CFStringRef NSWorkspaceVolumeOldURLKeysystem CFStringRef NSWorkspaceDidMountNotificationsystem CFStringRef NSWorkspaceDidUnmountNotificationsystem CFStringRef NSWorkspaceWillUnmountNotificationsystem CFStringRef NSWorkspaceDidRenameVolumeNotification// power notificationssystem CFStringRef NSWorkspaceWillPowerOffNotificationsystem CFStringRef NSWorkspaceWillSleepNotificationsystem CFStringRef NSWorkspaceDidWakeNotificationsystem CFStringRef NSWorkspaceScreensDidSleepNotificationsystem CFStringRef NSWorkspaceScreensDidWakeNotification// session notificationssystem CFStringRef NSWorkspaceSessionDidBecomeActiveNotificationsystem CFStringRef NSWorkspaceSessionDidResignActiveNotification// miscellaneous notificationssystem CFStringRef NSWorkspaceDidChangeFileLabelsNotificationsystem CFStringRef NSWorkspaceActiveSpaceDidChangeNotification// Classtoolbox fn WorkspaceClass = ClassRef// Sharedtoolbox fn WorkspaceShared = WorkspaceRef// Notification centertoolbox fn WorkspaceNotificationCenter = NotificationCenterReftoolbox WorkspaceNotificationCenterAddObserver( ptr callback, CFStringRef name, CFTypeRef obj )toolbox WorkspaceNotificationCenterRemoveObserver( ptr callback, CFStringRef name )toolbox WorkspaceNotificationCenterPostNotification( NotificationRef note )toolbox WorkspaceNotificationCenterPostNotificationName( CFStringRef name, CFTypeRef obj, CFDictionaryRef userInfo )// Opening URLs/*  WorkspaceOpenURLWithConfiguration, WorkspaceOpenURLsWithApplicationAndConfiguration  N.B. configuration and completionHandler params can be NULL  Completion handler example:    void local fn MyCompletionHandler( app as RunningApplicationRef, err as ErrorRef, userData as ptr )    end fn*/#if _MACOSMAXALLOWED >= 101500toolbox WorkspaceOpenURLWithConfiguration( CFURLRef url, WorkspaceOpenConfigurationRef configuration, ptr completionHandler, ptr userData )                                    // macOS 10.15+toolbox WorkspaceOpenURLsWithApplicationAndConfiguration( CFArrayRef urls, CFURLRef appURL, WorkspaceOpenConfigurationRef configuration, ptr completionHandler, ptr userData ) // macOS 10.15+#endif// 101500toolbox fn WorkspaceOpenURL( CFURLRef url ) = BOOLtoolbox fn WorkspaceOpenURLWithOptions( CFURLRef url, NSWorkspaceLaunchOptions options, CFDictionaryRef configuration, ErrorRef *err ) = RunningApplicationRef // deprecated: 10.15toolbox fn WorkspaceOpenURLWithApplication( CFURLRef url, CFStringRef appName, BOOL deactivate ) = BOOL                                                        // deprecated: 10.15toolbox fn WorkspaceOpenURLsWithApplicationAtURL( CFArrayRef urls, CFURLRef appURL, NSWorkspaceLaunchOptions options, CFDictionaryRef configuration )  = BOOL  // deprecated: 10.15toolbox fn WorkspaceOpenURLWithApplicationAtURL( CFURLRef url, CFURLRef appURL, NSWorkspaceLaunchOptions options, CFDictionaryRef configuration )  = BOOL  // deprecated: 10.15// Launching and hiding apps/*  WorkspaceOpenApplicationAtURLWithConfiguration  N.B. configuration and completionHandler params can be NULL  Completion handler example:    void local fn MyCompletionHandler( app as RunningApplicationRef, err as ErrorRef, userData as ptr )    end fn*/#if _MACOSMAXALLOWED >= 101500toolbox WorkspaceOpenApplicationAtURLWithConfiguration( CFURLRef url, WorkspaceOpenConfigurationRef configuration, ptr completionHandler, ptr userData )// macOS 10.15+#endif// 101500toolbox WorkspaceHideOtherApplicationstoolbox fn WorkspaceLaunchApplication( CFStringRef appName ) = BOOL// deprecated: 10.15 use: WorkspaceOpenApplicationAtURLWithConfigurationtoolbox fn WorkspaceLaunchApplicationAtURL( CFURLRef url, NSWorkspaceLaunchOptions options, CFDictionaryRef configuration, ErrorRef *err ) = BOOL// deprecated: 10.15 use: WorkspaceOpenApplicationAtURLWithConfiguration// Manipulating filestoolbox WorkspaceDuplicateURLs( CFArrayRef urls )//toolbox WorkspaceDuplicateURLs( CFArrayRef urls, ptr completionHandler, ptr userData )toolbox WorkspaceRecycleURL( CFURLRef url)//toolbox WorkspaceRecycleURL( CFURLRef url, ptr completionHandler, ptr userData )toolbox WorkspaceRecycleURLs( CFArrayRef urls )//toolbox WorkspaceRecycleURLs( CFArrayRef urls, ptr completionHander, ptr userData )toolbox WorkspaceActivateFileViewerSelectingURLs( CFArrayRef fileURLs )// UTItoolbox fn WorkspaceTypeOfFileAtURL( CFURLRef url ) = CFStringRef                                                 // deprecated: 12.0 use: URLGetResourceValueForKeytoolbox fn WorkspaceLocalizedDescriptionForType( CFStringRef type ) = CFStringRef                                 // deprecated: 12.0 use: UTTypeLocalizedDescriptiontoolbox fn WorkspacePreferredFilenameExtensionForType( CFStringRef typeName ) = CFStringRef                       // deprecated: 12.0 use: UTTypePreferredFilenameExtensiontoolbox fn WorkspaceFilenameExtensionIsValidForType( CFStringRef filenameExtension, CFStringRef typeName ) = BOOL // deprecated: 12.0 use: UTTypeTypesWithTagtoolbox fn WorkspaceFileTypeConformsToType( CFStringRef firstTypeName, CFStringRef secondTypeName ) = BOOL        // deprecated: 12.0 use: UTTypeConformsToType// Infotoolbox fn WorkspaceURLForApplicationToOpenURL( CFURLRef url ) = CFURLRef#if _MACOSMAXALLOWED >= 120000toolbox fn WorkspaceURLForApplicationToOpenContentType( UTTypeRef contentType ) = CFURLRef // macOS 12.0+#endif // 120000toolbox fn WorkspaceURLForApplication( CFStringRef name ) = CFURLReftoolbox fn WorkspaceURLForApplicationWithBundleIdentifier( CFStringRef identifier ) = CFURLRef#if _MACOSMAXALLOWED >= 120000toolbox fn WorkspaceURLsForApplicationsToOpenURL( CFURLRef url ) = CFArrayRef                      // macOS 12.0+toolbox fn WorkspaceURLsForApplicationsToOpenContentType( UTTypeRef contentType ) = CFArrayRef     // macOS 12.0+toolbox fn WorkspaceURLsForApplicationsWithBundleIdentifier( CFStringRef identifier ) = CFArrayRef // macOS 12.0+#endif // 120000toolbox fn WorkspaceGetFileSystemInfoForURL( CFURLRef url, BOOL *isRemovable, BOOL *isWritable, BOOL *isUnmountable, CFStringRef *description, CFStringRef *type ) = BOOLtoolbox fn WorkspaceIsFilePackageAtURL( CFURLRef url ) = BOOLtoolbox fn WorkspaceFrontmostApplication = RunningApplicationReftoolbox fn WorkspaceRunningApplications = CFArrayReftoolbox fn WorkspaceMenuBarOwningApplication = RunningApplicationReftoolbox fn WorkspaceGetInfoForFileAtURL( CFURLRef url, CFStringRef *appName, CFStringRef *type ) = BOOL// Set default app info/*  WorkspaceSetDefaultApplicationAtURLToOpenContentType  WorkspaceSetDefaultApplicationAtURLToOpenContentTypeOfFileAtURL  WorkspaceSetDefaultApplicationAtURLToOpenFileAtURL  WorkspaceSetDefaultApplicationAtURLToOpenURLsWithScheme  completion handler:    void local fn MyCompletionHandler( err as ErrorRef, userData as ptr )      // ...    end fn*/#if _MACOSMAXALLOWED >= 120000toolbox WorkspaceSetDefaultApplicationAtURLToOpenContentType( CFURLRef url, UTTypeRef contentType, ptr completionHandler, ptr userData )       // macOS 12.0+toolbox WorkspaceSetDefaultApplicationAtURLToOpenContentTypeOfFileAtURL( CFURLRef url, CFURLRef fileURL, ptr completionHandler, ptr userData ) // macOS 12.0+toolbox WorkspaceSetDefaultApplicationAtURLToOpenFileAtURL( CFURLRef url, CFURLRef fileURL, ptr completionHandler, ptr userData )              // macOS 12.0+toolbox WorkspaceSetDefaultApplicationAtURLToOpenURLsWithScheme( CFURLRef url, CFStringRef urlScheme, ptr completionHandler, ptr userData )    // macOS 12.0+#endif // 120000// Iconstoolbox fn WorkspaceIconForFileAtURL( CFURLRef url ) = ImageReftoolbox fn WorkspaceIconForFilesAtURLs( CFArrayRef urls ) = ImageRef#if _MACOSMAXALLOWED >= 110000// this function requires Tlbx UniformTypeIdentifiers.incltoolbox fn WorkspaceIconForContentType( UTTypeRef contentType ) = ImageRef // macOS 11.0+#endif// 110000toolbox fn WorkspaceIconForFileType( CFStringRef type ) = ImageRef // deprecated: 12.0 use: WorkspaceIconForContentTypetoolbox WorkspaceSetIconForFileAtURL( ImageRef icon, CFURLRef url, NSWorkspaceIconCreationOptions options )// Unmounttoolbox fn WorkspaceUnmountAndEjectDeviceAtURL( CFURLRef url, ErrorRef *err ) = BOOL// Desktop imagetoolbox fn WorkspaceDesktopImageURLForScreen( ScreenRef screen ) = CFURLReftoolbox WorkspaceSetDesktopImageURLForScreen( CFURLRef url, ScreenRef screen, CFDictionaryRef options, ErrorRef *err )toolbox fn WorkspaceDesktopImageOptionsForScreen( ScreenRef screen ) = CFDictionaryRef// Spotlight searchestoolbox fn WorkspaceShowSearchResultsForQueryString( CFStringRef string ) = BOOL// File labelstoolbox fn WorkspaceFileLabels = CFArrayReftoolbox fn WorkspaceFileLabelColors = CFArrayRef// Changes to file systemtoolbox WorkspaceNoteFileSystemChangedAtURL( CFURLRef url )// Accessibilitytoolbox fn WorkspaceAccessibilityDisplayShouldDifferentiateWithoutColor = BOOLtoolbox fn WorkspaceAccessibilityDisplayShouldIncreaseContrast = BOOLtoolbox fn WorkspaceAccessibilityDisplayShouldReduceTransparency = BOOLtoolbox fn WorkspaceAccessibilityDisplayShouldInvertColors = BOOLtoolbox fn WorkspaceAccessibilityDisplayShouldReduceMotion = BOOLtoolbox fn WorkspaceIsSwitchControlEnabled = BOOLtoolbox fn WorkspaceIsVoiceOverEnabled = BOOL// Privileged operations/*  WorkspaceRequestAuthorizationOfType  Completion handler example:    void local fn ( authorization as WorkspaceAuthorizationRef, err as ErrorRef, userData as ptr )    end fn*/#if _MACOSMAXALLOWED >= 101400toolbox WorkspaceRequestAuthorizationOfType( NSWorkspaceAuthorizationType type, ptr completionHandler, ptr userData )// macOS 10.14+#endif// 101400/*  WorkspaceOpenConfiguration  Inherits from: Object  NSWorkspaceOpenConfiguration - https://developer.apple.com/documentation/appkit/nsworkspaceopenconfiguration?language=objc  macOS 10.15+*/// Create#if _MACOSMAXALLOWED >= 101500toolbox fn WorkspaceOpenConfigurationInit = WorkspaceOpenConfigurationRef                                               // autoreleased// macOS 10.15+// Handling URLstoolbox fn WorkspaceOpenConfigurationRequiresUniversalLinks( WorkspaceOpenConfigurationRef ref ) = BOOL                 // macOS 10.15+toolbox WorkspaceOpenConfigurationSetRequiresUniversalLinks( WorkspaceOpenConfigurationRef ref, BOOL flag )             // macOS 10.15+toolbox fn WorkspaceOpenConfigurationIsForPrinting( WorkspaceOpenConfigurationRef ref ) = BOOL                          // macOS 10.15+toolbox WorkspaceOpenConfigurationSetForPrinting( WorkspaceOpenConfigurationRef ref, BOOL flag )                        // macOS 10.15+// App-related behaviorstoolbox fn WorkspaceOpenConfigurationActivates( WorkspaceOpenConfigurationRef ref ) = BOOL                              // macOS 10.15+toolbox WorkspaceOpenConfigurationSetActivates( WorkspaceOpenConfigurationRef ref, BOOL flag )                          // macOS 10.15+toolbox fn WorkspaceOpenConfigurationAddsToRecentItems( WorkspaceOpenConfigurationRef ref ) = BOOL                      // macOS 10.15+toolbox WorkspaceOpenConfigurationSetAddsToRecentItems( WorkspaceOpenConfigurationRef ref, BOOL flag )                  // macOS 10.15+toolbox fn WorkspaceOpenConfigurationCreatesNewApplicationInstance( WorkspaceOpenConfigurationRef ref ) = BOOL          // macOS 10.15+toolbox WorkspaceOpenConfigurationSetCreatesNewApplicationInstance( WorkspaceOpenConfigurationRef ref, BOOL flag )      // macOS 10.15+toolbox fn WorkspaceOpenConfigurationHides( WorkspaceOpenConfigurationRef ref ) = BOOL                                  // macOS 10.15+toolbox WorkspaceOpenConfigurationSetHides( WorkspaceOpenConfigurationRef ref, BOOL flag )                              // macOS 10.15+toolbox fn WorkspaceOpenConfigurationHidesOthers( WorkspaceOpenConfigurationRef ref ) = BOOL                            // macOS 10.15+toolbox WorkspaceOpenConfigurationSetHidesOthers( WorkspaceOpenConfigurationRef ref, BOOL flag )                        // macOS 10.15+// Prompting the usertoolbox fn WorkspaceOpenConfigurationPromptsUserIfNeeded( WorkspaceOpenConfigurationRef ref ) = BOOL                    // macOS 10.15+toolbox WorkspaceOpenConfigurationSetPromptsUserIfNeeded( WorkspaceOpenConfigurationRef ref, BOOL flag )                // macOS 10.15+// Launch attributestoolbox fn WorkspaceOpenConfigurationAppleEvent( WorkspaceOpenConfigurationRef ref ) = AppleEventDescriptorRef          // macOS 10.15+toolbox WorkspaceOpenConfigurationSetAppleEvent( WorkspaceOpenConfigurationRef ref, AppleEventDescriptorRef ae )        // macOS 10.15+toolbox fn WorkspaceOpenConfigurationArguments( WorkspaceOpenConfigurationRef ref ) = CFArrayRef                        // macOS 10.15+toolbox WorkspaceOpenConfigurationSetArguments( WorkspaceOpenConfigurationRef ref, CFArrayRef args )                    // macOS 10.15+toolbox fn WorkspaceOpenConfigurationEnvironment( WorkspaceOpenConfigurationRef ref ) = CFDictionaryRef                 // macOS 10.15+toolbox WorkspaceOpenConfigurationSetEnvironment( WorkspaceOpenConfigurationRef ref, CFDictionaryRef environment )      // macOS 10.15+toolbox fn WorkspaceOpenConfigurationArchitecture( WorkspaceOpenConfigurationRef ref ) = SInt32                         // macOS 10.15+toolbox WorkspaceOpenConfigurationSetArchitecture( WorkspaceOpenConfigurationRef ref, SInt32 architecture )             // macOS 10.15+// Instance propertiestoolbox fn WorkspaceOpenConfigurationAllowsRunningApplicationSubstition( WorkspaceOpenConfigurationRef ref ) = BOOL     // macOS 10.15+toolbox WorkspaceOpenConfigurationSetAllowsRunningApplicationSubstition( WorkspaceOpenConfigurationRef ref, BOOL flag ) // macOS 10.15+#endif// 101500