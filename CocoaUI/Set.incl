/*  Set.incl  Bernie Wylde 20180503  Framework: Foundation  Inherits from: Object  NSSet - https://developer.apple.com/documentation/foundation/nsset?language=objc*/// Classtoolbox fn SetClass = ClassRef// Createtoolbox fn SetWithArray( CFArrayRef array ) = CFSetReftoolbox fn SetWithObject( CFTypeRef obj ) = CFSetReftoolbox fn SetWithObjects( CFTypeRef obj1, ... ) = CFSetReftoolbox fn SetWithSet( CFSetRef set ) = CFSetReftoolbox fn SetByAddingObject( CFSetRef ref, CFTypeRef obj ) = CFSetReftoolbox fn SetByAddingObjectsFromSet( CFSetRef ref1, CFSetRef ref2 ) = CFSetReftoolbox fn SetByAddingObjectsFromArray( CFSetRef ref, CFArrayRef array ) = CFSetRef// Counttoolbox fn SetCount( CFSetRef ref ) = NSUInteger// Accessing memberstoolbox fn SetAllObjects( CFSetRef ref ) = CFArrayReftoolbox fn SetAnyObject( CFSetRef ref ) = CFTypeReftoolbox fn SetContainsObject( CFSetRef ref, CFTypeRef obj ) = BOOLtoolbox fn SetMember( CFSetRef ref, CFTypeRef obj ) = CFTypeReftoolbox fn SetObjectEnumerator( CFSetRef ref ) = EnumeratorRef/*  SetEnumerateObjects  SetEnumerateObjectsWithOptions  callback example:    void local fn MyObjectEnumerator( set as CFSetRef, obj as CFTypeRef, stp as ^BOOL, userData as ptr )      // *stp = YES // stop enumeration    end fn*/toolbox SetEnumerateObjects( CFSetRef ref, ptr callback, ptr userData )toolbox SetEnumerateObjectsWithOptions( CFSetRef ref, NSEnumerationOptions options, ptr callback, ptr userData )/*  SetObjectsPassingTest  SetObjectsWithOptionsPassingTest  predicate example:    local fn MyObjectPredicate( set as CFSetRef, obj as CFTypeRef, stp as ^BOOL, userData as ptr ) as BOOL      BOOL passed      passed = YES // YES or NO to indicate whether obj passed the test      // *stp = YES // stop enumeration    end fn = passed*/toolbox fn SetObjectsPassingTest( CFSetRef ref, ptr predicate, ptr userData ) = CFSetReftoolbox fn SetObjectsWithOptionsPassingTest( CFSetRef ref, NSEnumerationOptions options, ptr predicate, ptr userData ) = CFSetRef// Comparetoolbox fn SetIsSubsetOfSet( CFSetRef ref1, CFSetRef ref2 ) = BOOLtoolbox fn SetIntersectsSet( CFSetRef ref1, CFSetRef ref2 ) = BOOLtoolbox fn SetIsEqual( CFSetRef ref1, CFSetRef ref2 ) = BOOLtoolbox fn SetValueForKey( CFSetRef ref, CFStringRef key ) = CFTypeReftoolbox SetSetValueForKey( CFSetRef ref, CFTypeRef value, CFStringRef key )// Sorted arraytoolbox fn SetSortedArrayUsingDescriptors( CFSetRef ref, CFArrayRef sortDescriptors ) = CFArrayRef// Key-value observing// Descriptiontoolbox fn SetDescription( CFSetRef ref ) = CFStringReftoolbox fn SetDescriptionWithLocale( CFSetRef ref, CFTypeRef locale ) = CFStringRef// locale can be CFDictionary or CFLocale// Initializerstoolbox fn SetWithCollectionViewIndexPath( IndexPathRef indexPath ) = CFSetReftoolbox fn SetWithCollectionViewIndexPaths( CFArrayRef indexPaths ) = CFSetRef// Instance methods/*  SetEnumerateIndexPathsWithOptions  callback example:    void local fn MyEnumerateIndexPathsCallback( set as CFSetRef, indexPath as IndexPathRef, stp as ^BOOL, userData as ptr )      // *stp = YES // stop enumeration    end fn*/toolbox SetEnumerateIndexPathsWithOptions( CFSetRef ref, NSEnumerationOptions options, ptr callback, ptr userData )/*  MutableSet  Inherits from: Set/Object  NSMutableSet - https://developer.apple.com/documentation/foundation/nsmutableset?language=objc*/// Classtoolbox fn MutableSetClass = ClassRef// Createtoolbox fn MutableSetNew = CFMutableSetRef// autoreleasedtoolbox fn MutableSetWithCapacity( NSUInteger length ) = CFMutableSetReftoolbox fn MutableSetWithArray( CFArrayRef array ) = CFMutableSetReftoolbox fn MutableSetWithObject( CFTypeRef obj ) = CFMutableSetReftoolbox fn MutableSetWithObjects( CFTypeRef obj1, ... ) = CFMutableSetReftoolbox fn MutableSetWithSet( CFSetRef set ) = CFMutableSetRef// Add and removetoolbox MutableSetAddObject( CFMutableSetRef ref, CFTypeRef obj )toolbox MutableSetRemoveObject( CFMutableSetRef ref, CFTypeRef obj )toolbox MutableSetRemoveAllObjects( CFMutableSetRef ref )toolbox MutableSetAddObjectsFromArray( CFMutableSetRef ref, CFArrayRef array )// Combine/recombinetoolbox MutableSetUnionSet( CFMutableSetRef ref1, CFSetRef ref2 )toolbox MutableSetMinusSet( CFMutableSetRef ref1, CFSetRef ref2 )toolbox MutableSetIntersectSet( CFMutableSetRef ref1, CFSetRef ref2 )toolbox MutableSetSet( CFMutableSetRef ref1, CFSetRef ref2 )/*  CountedSet  Bernie Wylde 20180503  Inherits from: MutableSet/Set/Object  NSCountedSet - https://developer.apple.com/documentation/foundation/nscountedset?language=objc*/// Classtoolbox fn CountedSetClass = ClassRef// Inittoolbox fn CountedSetNew = CountedSetReftoolbox fn CountedSetWithArray( CFArrayRef array ) = CountedSetReftoolbox fn CountedSetWithSet( CFSetRef set ) = CountedSetReftoolbox fn CountedSetWithCapacity( NSUInteger length ) = CountedSetRef// Add/removetoolbox CountedSetAddObject( CountedSetRef ref, CFTypeRef obj )toolbox CountedSetRemoveObject( CountedSetRef ref, CFTypeRef obj )// Combine/recombinetoolbox CountedSetUnionSet( CountedSetRef ref, CFSetRef set )toolbox CountedSetMinusSet( CountedSetRef ref, CFSetRef set )toolbox CountedSetIntersectSet( CountedSetRef ref, CFSetRef set )// Examinetoolbox fn CountedSetCountForObject( CountedSetRef ref, CFTypeRef obj ) = NSUInteger// Accessing memberstoolbox fn CountedSetObjectEnumerator( CountedSetRef ref ) = EnumeratorRef