/*  OrderedSet.incl  Bernie Wylde 20180503  Framework: Foundation  Inherits from: Object  NSOrderedSet - https://developer.apple.com/documentation/foundation/nsorderedset?language=objc*/// Classtoolbox fn OrderedSetClass = ClassRef// Createtoolbox fn OrderedSetWithArray( CFArrayRef array ) = OrderedSetReftoolbox fn OrderedSetWithArrayRange( CFArrayRef array, CFRange range, BOOL copyItems ) = OrderedSetReftoolbox fn OrderedSetWithObject( CFTypeRef obj ) = OrderedSetReftoolbox fn OrderedSetWithObjects( CFTypeRef obj, ... ) = OrderedSetRef// a comma-separated list of objects, ending with NULLtoolbox fn OrderedSetWithOrderedSet( OrderedSetRef set ) = OrderedSetReftoolbox fn OrderedSetWithSet( CFSetRef set ) = OrderedSetRef// Counttoolbox fn OrderedSetCount( OrderedSetRef ref ) = NSUInteger// Accessing set memberstoolbox fn OrderedSetContainsObject( OrderedSetRef ref, CFTypeRef obj ) = BOOL/*  OrderedSetEnumerateObjects, OrderedSetEnumerateObjectsWithOptions & OrderedSetEnumerateObjectsAtIndexes  Callback function example:    void local fn MyCallback( ref as OrderedSetRef, obj as CFTypeRef, index as NSUInteger, stp as ^BOOL, userData as ptr )       // *stp = YES // stop enumeration    end fn*/toolbox OrderedSetEnumerateObjects( OrderedSetRef ref, ptr callback, ptr userData )toolbox OrderedSetEnumerateObjectsWithOptions( OrderedSetRef ref, NSEnumerationOptions options, ptr callback, ptr userData )toolbox OrderedSetEnumerateObjectsAtIndexes( OrderedSetRef ref, IndexSetRef indexSet, NSEnumerationOptions options, ptr callback, ptr userData )toolbox fn OrderedSetFirstObject( OrderedSetRef ref ) = CFTypeReftoolbox fn OrderedSetLastObject( OrderedSetRef ref ) = CFTypeReftoolbox fn OrderedSetObjectAtIndex( OrderedSetRef ref, NSUInteger index ) = CFTypeReftoolbox fn OrderedSetObjectsAtIndexes( OrderedSetRef ref, IndexSetRef indexes ) = CFArrayReftoolbox fn OrderedSetIndexOfObject( OrderedSetRef ref, CFTypeRef obj ) = NSUInteger// Key-value codingtoolbox OrderedSetSetValueForKey( OrderedSetRef ref, CFTypeRef value, CFStringRef key )toolbox fn OrderedSetValueForKey( OrderedSetRef ref, CFStringRef key ) = CFTypeRef// Observingtoolbox fn OrderedSetIsEqual( OrderedSetRef ref1, OrderedSetRef ref2 ) = BOOLtoolbox fn OrderedSetIntersectsOrderedSet( OrderedSetRef ref1, OrderedSetRef ref2 ) = BOOLtoolbox fn OrderedSetIntersectsSet( OrderedSetRef ref, CFSetRef set ) = BOOLtoolbox fn OrderedSetIsSubsetOfOrderedSet( OrderedSetRef ref1, OrderedSetRef ref2 ) = BOOLtoolbox fn OrderedSetIsSubsetOfSet( OrderedSetRef ref, CFSetRef set ) = BOOL// Sorted arraytoolbox fn OrderedSetSortedArrayUsingDescriptors( OrderedSetRef ref, CFArrayRef descriptors ) = CFArrayRef/*  OrderedSetSortedArrayUsingComparator & OrderedSetSortedArrayWithOptionsUsingComparator  comparator function example:    local fn MyComparator( os as OrderedSetRef, obj1 as CFTypeRef, obj2 as CFTypeRef ) as NSComparisonResult      NSComparisonResult   result      // ...    end fn = result*/toolbox fn OrderedSetSortedArrayUsingComparator( OrderedSetRef ref, ptr comparator, ptr userData ) = CFArrayReftoolbox fn OrderedSetSortedArrayWithOptionsUsingComparator( OrderedSetRef ref, NSSortOptions options, ptr comparator, ptr userData ) = CFArrayRef// Filteringtoolbox fn OrderedSetFilteredOrderedSetUsingPredicate( OrderedSetRef ref, PredicateRef predicate ) = OrderedSetRef// Descriptiontoolbox fn OrderedSetDescription( OrderedSetRef ref ) = CFStringReftoolbox fn OrderedSetDescriptionWithLocale( OrderedSetRef ref, CFLocaleRef locale ) = CFStringReftoolbox fn OrderedSetDescriptionWithLocaleAndIndent( OrderedSetRef ref, CFLocaleRef locale, NSUInteger indent ) = CFStringRef// Convertingtoolbox fn OrderedSetArray( OrderedSetRef ref ) = CFArrayReftoolbox fn OrderedSetSet( OrderedSetRef ref ) = CFSetRef// Instance methods#if _MACOSMAXALLOWED >= 101500toolbox fn OrderedSetByApplyingDifference( OrderedSetRef ref, OrderedCollectionDifferenceRef diff ) = OrderedSetRef                                                                                                                   // macOS 10.15+toolbox fn OrderedSetDifferenceFromOrderedSet( OrderedSetRef ref, OrderedSetRef otherSet ) = OrderedCollectionDifferenceRef                                                                                                           // macOS 10.15+toolbox fn OrderedSetDifferenceFromOrderedSetWithOptions( OrderedSetRef ref, OrderedSetRef otherSet, NSOrderedCollectionDifferenceCalculationOptions options ) = OrderedCollectionDifferenceRef                                       // macOS 10.15+toolbox fn OrderedSetDifferenceFromOrderedSetUsingEquivalenceTest( OrderedSetRef ref, OrderedSetRef otherSet, NSOrderedCollectionDifferenceCalculationOptions options, ptr handler, ptr userData ) = OrderedCollectionDifferenceRef // macOS 10.15+#endif// 101500/*  MutableOrderedSet  Inherits from OrderedSet/Object  NSMutableOrderedSet - https://developer.apple.com/documentation/foundation/nsmutableorderedset?language=objc*/// Classtoolbox fn MutableOrderedSetClass = ClassRef// Createtoolbox fn MutableOrderedSetNew = MutableOrderedSetRef// autoreleasedtoolbox fn MutableOrderedSetWithCapacity( NSUInteger size ) = MutableOrderedSetReftoolbox fn MutableOrderedSetWithArray( CFArrayRef array ) = MutableOrderedSetReftoolbox fn MutableOrderedSetWithArrayRange( CFArrayRef array, CFRange range, BOOL copyItems ) = MutableOrderedSetReftoolbox fn MutableOrderedSetWithObject( CFTypeRef obj ) = MutableOrderedSetReftoolbox fn MutableOrderedSetWithObjects( CFTypeRef obj, ... ) = MutableOrderedSetRef// a comma-separated list of objects, ending with NULLtoolbox fn MutableOrderedSetWithOrderedSet( OrderedSetRef set ) = MutableOrderedSetReftoolbox fn MutableOrderedSetWithSet( CFSetRef set ) = MutableOrderedSetRef// Add, remove, reordertoolbox MutableOrderedSetAddObject( MutableOrderedSetRef ref, CFTypeRef obj )toolbox MutableOrderedSetAddObjectsFromArray( MutableOrderedSetRef ref, CFArrayRef array )toolbox MutableOrderedSetInsertObjectAtIndex( MutableOrderedSetRef ref, CFTypeRef obj, NSUInteger index )toolbox MutableOrderedSetInsertObjectsAtIndexes( MutableOrderedSetRef ref, CFArrayRef objects, IndexSetRef indexes )toolbox MutableOrderedSetRemoveObject( MutableOrderedSetRef ref, CFTypeRef obj )toolbox MutableOrderedSetRemoveObjectAtIndex( MutableOrderedSetRef ref, NSUInteger index )toolbox MutableOrderedSetRemoveObjectsAtIndexes( MutableOrderedSetRef ref, IndexSetRef indexes )toolbox MutableOrderedSetRemoveObjectsInArray( MutableOrderedSetRef ref, CFArrayRef array )toolbox MutableOrderedSetRemoveObjectsInRange( MutableOrderedSetRef ref, CFRange range )toolbox MutableOrderedSetRemoveAllObjects( MutableOrderedSetRef ref )toolbox MutableOrderedSetReplaceObjectAtIndex( MutableOrderedSetRef ref, CFTypeRef obj, NSUInteger index )toolbox MutableOrderedSetReplaceObjectsAtIndexes( MutableOrderedSetRef ref, CFArrayRef objects, IndexSetRef indexes )toolbox MutableOrderedSetSetObjectAtIndex( MutableOrderedSetRef ref, CFTypeRef obj, NSUInteger index )toolbox MutableOrderedSetMoveObjectsAtIndexesToIndex( MutableOrderedSetRef ref, IndexSetRef indexes, NSUInteger index )toolbox MutableOrderedSetExchangeObjectAtIndex( MutableOrderedSetRef ref, NSUInteger index1, NSUInteger index2 )// Sortingtoolbox MutableOrderedSetSortUsingDescriptors( MutableOrderedSetRef ref, CFArrayRef descriptors )// Combining and recombiningtoolbox MutableOrderedSetIntersectOrderedSet( MutableOrderedSetRef ref1, OrderedSetRef ref2 )toolbox MutableOrderedSetIntersectSet( MutableOrderedSetRef ref, CFSetRef set )toolbox MutableOrderedSetMinusOrderedSet( MutableOrderedSetRef ref1, OrderedSetRef ref2 )toolbox MutableOrderedSetMinusSet( MutableOrderedSetRef ref, CFSetRef set )toolbox MutableOrderedSetUnionOrderedSet( MutableOrderedSetRef ref1, OrderedSetRef ref2 )toolbox MutableOrderedSetUnionSet( MutableOrderedSetRef ref, CFSetRef set )// Instance methods#if _MACOSMAXALLOWED >= 101500toolbox MutableOrderedSetApplyDifference( MutableOrderedSetRef ref, OrderedCollectionDifferenceRef diff )// macOS 10.15+#endif// 101500