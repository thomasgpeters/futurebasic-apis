/*  Cell.incl  Bernie Wylde 20170704  Framework: AppKit  Inherits from: Object  NSCell - https://developer.apple.com/documentation/appkit/nscell?language=objc  Subclass name: CellSC*/// state#if ndef _DEFINEDINCOCOA#define NSCellStateValue as NSInteger    // deprecated: 10.14 use: NSControlStateValue#define NSControlStateValue as NSInteger#endifsystem NSCellStateValue NSMixedState // deprecated: 10.14 use: NSControlStateValueMixedsystem NSCellStateValue NSOffState   // deprecated: 10.14 use: NSControlStateValueOffsystem NSCellStateValue NSOnState    // deprecated: 10.14 use: NSControlStateValueOnsystem NSControlStateValue NSControlStateValueMixed // -1system NSControlStateValue NSControlStateValueOff   // 0system NSControlStateValue NSControlStateValueOn    // 1// cell style#if ndef _DEFINEDINCOCOA#define NSCellStyleMask as NSUInteger#endifsystem NSCellStyleMask NSNoCellMask               // 0system NSCellStyleMask NSContentsCellMask         // 1system NSCellStyleMask NSPushInCellMask           // 2system NSCellStyleMask NSChangeGrayCellMask       // 4system NSCellStyleMask NSChangeBackgroundCellMask // 8// tint#if ndef _DEFINEDINCOCOA#define NSControlTint as NSUInteger#endifsystem NSControlTint NSDefaultControlTint  // 0system NSControlTint NSBlueControlTint     // 2system NSControlTint NSGraphiteControlTint // 6system NSControlTint NSClearControlTint    // 7// size#if ndef _DEFINEDINCOCOA#define NSControlSize as NSUInteger#endifsystem NSControlSize NSControlSizeRegular // 0system NSControlSize NSControlSizeSmall   // 1system NSControlSize NSControlSizeMini    // 2#if _MACOSMAXALLOWED >= 110000system NSControlSize NSControlSizeLarge   // 3 // macOS 11.0+#endif // 110000// attributes#if ndef _DEFINEDINCOCOA#define NSCellAttribute as NSUInteger#endifsystem NSCellAttribute NSCellDisabled               // 0system NSCellAttribute NSCellState                  // 1system NSCellAttribute NSPushInCell                 // 2system NSCellAttribute NSCellEditable               // 3system NSCellAttribute NSChangeGrayCell             // 4system NSCellAttribute NSCellHighlighted            // 5system NSCellAttribute NSCellLightsByContents       // 6system NSCellAttribute NSCellLightsByGray           // 7system NSCellAttribute NSChangeBackgroundCell       // 8system NSCellAttribute NSCellLightsByBackground     // 9system NSCellAttribute NSCellIsBordered             // 10system NSCellAttribute NSCellHasOverlappingImage    // 11system NSCellAttribute NSCellHasImageHorizontal     // 12system NSCellAttribute NSCellHasImageOnLeftOrBottom // 13system NSCellAttribute NSCellChangesContents        // 14system NSCellAttribute NSCellIsInsetButton          // 15system NSCellAttribute NSCellAllowsMixedState       // 16// image position#if ndef _DEFINEDINCOCOA#define NSCellImagePosition as NSUInteger#endifsystem NSCellImagePosition NSNoImage       // 0system NSCellImagePosition NSImageOnly     // 1system NSCellImagePosition NSImageLeft     // 2system NSCellImagePosition NSImageRight    // 3system NSCellImagePosition NSImageBelow    // 4system NSCellImagePosition NSImageAbove    // 5system NSCellImagePosition NSImageOverlaps // 6system NSCellImagePosition NSImageLeading  // 7system NSCellImagePosition NSImageTrailing // 8// image scaling#if ndef _DEFINEDINCOCOA#define NSImageScaling as NSUInteger#endifsystem NSImageScaling NSImageScaleProportionallyDown     // 0system NSImageScaling NSImageScaleAxesIndependently      // 1system NSImageScaling NSImageScaleNone                   // 2system NSImageScaling NSImageScaleProportionallyUpOrDown // 3// background style#if ndef _DEFINEDINCOCOA#define NSBackgroundStyle as NSInteger#endifsystem NSBackgroundStyle NSBackgroundStyleLight   // = 0 deprecated: 11.0 use: NSBackgroundStyleNormalsystem NSBackgroundStyle NSBackgroundStyleDark    // = 1 deprecated: 11.0 use: NSBackgroundStyleEmphasizedsystem NSBackgroundStyle NSBackgroundStyleRaised  // = 2system NSBackgroundStyle NSBackgroundStyleLowered // = 3#if _MACOSMAXALLOWED >= 110000system NSBackgroundStyle NSBackgroundStyleNormal     // = 0 macOS 11.0+system NSBackgroundStyle NSBackgroundStyleEmphasized // = 1 macOS 11.0+#endif // 110000// type#if ndef _DEFINEDINCOCOA#define NSCellType as NSUInteger#endifsystem NSCellType NSNullCellType  // 0system NSCellType NSTextCellType  // 1system NSCellType NSImageCellType // 2// hit result#if ndef _DEFINEDINCOCOA#define NSCellHitResult as NSUInteger#endifsystem NSUInteger NSCellHitNone             // 0system NSUInteger NSCellHitContentArea      // 1 << 0system NSUInteger NSCellHitEditableTextArea // 1 << 1system NSUInteger NSCellHitTrackableArea    // 1 << 2// dialog eventsbegin enum not output 4200_cellFontend enumtoolbox CellEventSetFont( FontRef font )// Classtoolbox fn CellClass = ClassRef// Inittoolbox fn CellWithImage( ImageRef image ) = CellReftoolbox fn CellWithText( CFStringRef text ) = CellRef// Valuestoolbox fn CellObjectValue( CellRef ref ) = CFTypeReftoolbox CellSetObjectValue( CellRef ref, CFTypeRef obj )toolbox fn CellHasValidObjectValue( CellRef ref ) = BOOLtoolbox fn CellIntValue( CellRef ref ) = SInt32toolbox CellSetIntValue( CellRef ref, SInt32 value )toolbox fn CellIntegerValue( CellRef ref ) = NSIntegertoolbox CellSetIntegerValue( CellRef ref, NSInteger value )toolbox fn CellStringValue( CellRef ref ) = CFStringReftoolbox CellSetStringValue( CellRef ref, CFStringRef string )toolbox fn CellDoubleValue( CellRef ref ) = doubletoolbox CellSetDoubleValue( CellRef ref, double value )toolbox fn CellFloatValue( CellRef ref ) = floattoolbox CellSetFloatValue( CellRef ref, float value )// Attributestoolbox fn CellAttribute( CellRef ref, NSCellAttribute parameter ) = NSIntegertoolbox CellSetAttribute( CellRef ref, NSCellAttribute parameter, NSInteger value )toolbox fn CellType( CellRef ref ) = NSCellTypetoolbox CellSetType( CellRef ref, NSCellType type )toolbox fn CellIsEnabled( CellRef ref ) = BOOLtoolbox CellSetEnabled( CellRef ref, BOOL flag )toolbox fn CellAllowsUndo( CellRef ref ) = BOOLtoolbox CellSetAllowsUndo( CellRef ref, BOOL flag )// Display attributestoolbox fn CellIsBezeled( CellRef ref ) = BOOLtoolbox CellSetBezeled( CellRef ref, BOOL flag )toolbox fn CellIsBordered( CellRef ref ) = BOOLtoolbox CellSetBordered( CellRef ref, BOOL flag )toolbox fn CellIsOpaque( CellRef ref ) = BOOLtoolbox fn CellBackgroundStyle( CellRef ref ) = NSBackgroundStyletoolbox CellSetBackgroundStyle( CellRef ref, NSBackgroundStyle style )toolbox fn CellInteriorBackgroundStyle( CellRef ref ) = NSBackgroundStyle// Statetoolbox fn CellAllowsMixedState( CellRef ref ) = BOOLtoolbox CellSetAllowsMixedState( CellRef ref, BOOL flag )toolbox fn CellNextState( CellRef ref ) = NSIntegertoolbox CellSetNextState( CellRef ref )toolbox fn CellState( CellRef ref ) = NSInteger// Textual attributestoolbox fn CellIsEditable( CellRef ref ) = BOOLtoolbox CellSetEditable( CellRef ref, BOOL flag )toolbox fn CellIsSelectable( CellRef ref ) = BOOLtoolbox CellSetSelectable( CellRef ref, BOOL flag )toolbox fn CellIsScrollable( CellRef ref ) = BOOLtoolbox CellSetScrollable( CellRef ref, BOOL flag )toolbox fn CellAlignment( CellRef ref ) = NSTextAlignmenttoolbox CellSetAlignment( CellRef ref, NSTextAlignment alignment )toolbox fn CellFont( CellRef ref ) = FontReftoolbox CellSetFont( CellRef ref, FontRef font )toolbox fn CellLineBreakMode( CellRef ref ) = NSLineBreakModetoolbox CellSetLineBreakMode( CellRef ref, NSLineBreakMode mode )toolbox fn CellTruncatesLastVisibleLine( CellRef ref ) = BOOLtoolbox CellSetTruncatesLastVisibleLine( CellRef ref, BOOL flag )toolbox fn CellWraps( CellRef ref ) = BOOLtoolbox CellSetWraps( CellRef ref, BOOL flag )toolbox fn CellBaseWritingDirection( CellRef ref ) = NSWritingDirectiontoolbox CellSetBaseWritingDirection( CellRef ref, NSWritingDirection direction )toolbox fn CellAttributedStringValue( CellRef ref ) = CFAttributedStringReftoolbox CellSetAttributedStringValue( CellRef ref, CFAttributedStringRef aString )toolbox fn CellAllowsEditingTextAttributes( CellRef ref ) = BOOLtoolbox CellSetAllowsEditingTextAttributes( CellRef ref, BOOL flag )toolbox fn CellImportsGraphics( CellRef ref ) = BOOLtoolbox CellSetImportsGraphics( CellRef ref, BOOL flag )toolbox fn CellSetUpFieldEditorAttributes( CellRef ref, TextRef textObj ) = TextReftoolbox fn CellTitle( CellRef ref ) = CFStringReftoolbox CellSetTitle( CellRef ref, CFStringRef title )// Target and actiontoolbox fn CellAction( CellRef ref ) = SELReftoolbox CellSetAction( CellRef ref, SELRef action )toolbox fn CellTarget( CellRef ref ) = CFTypeReftoolbox CellSetTarget( CellRef ref, CFTypeRef target )toolbox fn CellIsContinuous( CellRef ref ) = BOOLtoolbox CellSetContinuous( CellRef ref, BOOL flag )toolbox fn CellSendActionOn( CellRef ref, NSEventMask mask ) = NSInteger// Imagetoolbox fn CellImage( CellRef ref ) = ImageReftoolbox CellSetImage( CellRef ref, CFTypeRef inImage )// Tagtoolbox fn CellTag( CellRef ref ) = NSIntegertoolbox CellSetTag( CellRef ref, NSInteger tag )// Formattertoolbox fn CellFormatter( CellRef ref ) = FormatterReftoolbox CellSetFormatter( CellRef ref, FormatterRef formatter )// Menustoolbox fn CellDefaultMenu = MenuReftoolbox fn CellMenu( CellRef ref ) = MenuReftoolbox CellSetMenu( CellRef ref, MenuRef m )toolbox fn CellMenuForEvent( CellRef ref, EventRef event, CGRect cellFrame, ViewRef aView ) = MenuRef// Comparetoolbox fn CellCompare( CellRef ref, CellRef otherCell ) = NSComparisonResult// Keyboard eventstoolbox fn CellAcceptsFirstResponder( CellRef ref ) = BOOLtoolbox fn CellShowsFirstResponder( CellRef ref ) = BOOLtoolbox fn CellRefusesFirstResponder( CellRef ref ) = BOOLtoolbox CellPerformClick( CellRef ref )// Deriving valuestoolbox CellTakeObjectValueFrom( CellRef ref, CFTypeRef sender )toolbox CellTakeIntegerValueFrom( CellRef ref, CFTypeRef sender )toolbox CellTakeIntValueFrom( CellRef ref, CFTypeRef sender )toolbox CellTakeStringValueFrom( CellRef ref, CFTypeRef sender )toolbox CellTakeDoubleValueFrom( CellRef ref, CFTypeRef sender )toolbox CellTakeFloatValueFrom( CellRef ref, CFTypeRef sender )// Represented objecttoolbox fn CellRepresentedObject( CellRef ref ) = CFTypeReftoolbox CellSetRepresentedObject( CellRef ref, CFTypeRef obj )// Track mouse// ...toolbox fn CellMouseDownFlags( CellRef ref ) = NSIntegertoolbox fn CellPrefersTrackingUntilMouseUp = BOOLtoolbox CellGetPeriodicDelay( CellRef ref, float *delayValue, float *interval )// Hit testtoolbox fn CellHitTestForEvent( CellRef ref, EventRef event, CGRect cellFrame, ViewRef controlView ) = NSUInteger // NSCellHitResult// Cursor// Keyboard alternativestoolbox fn CellKeyEquivalent( CellRef ref ) = CFStringRef// Dragging// Focus ring// ...toolbox fn CellDefaultFocusRingType = NSFocusRingTypetoolbox fn CellFocusRingType( CellRef ref ) = NSFocusRingTypetoolbox CellSetFocusRingType( CellRef ref, NSFocusRingType type )// Cell size// ...toolbox fn CellSize( CellRef ref ) = CGSizetoolbox fn CellSizeForBounds( CellRef ref, CGRect bounds ) = CGSizetoolbox fn CellDrawingRectForBounds( CellRef ref, CGRect bounds ) = CGRecttoolbox fn CellImageRectForBounds( CellRef ref, CGRect bounds ) = CGRecttoolbox fn CellTitleRectForBounds( CellRef ref, CGRect bounds ) = CGRecttoolbox fn CellControlSize( CellRef ref ) = NSControlSizetoolbox CellSetControlSize( CellRef ref, NSControlSize size )// Highlighting// ...toolbox fn CellHighlightColor( CellRef ref, CGRect frame, ViewRef controlView ) = ColorRef// ...toolbox fn CellControlView( CellRef ref ) = ViewReftoolbox CellSetControlView( CellRef ref, ViewRef aView )toolbox CellHighlight( CellRef ref, BOOL flag, CGRect frame, ViewRef controlView )toolbox fn CellIsHighlighted( CellRef ref ) = BOOL//toolbox CellSetHighlighted( CellRef ref, BOOL flag )// Editing and selecting text//toolbox CellEdit( CellRef ref, CGRect frame, ViewRef controlView, TextRef textObj, ...// ...toolbox fn CellSendsActionOnEditing( CellRef ref ) = BOOLtoolbox CellSetSendsActionOnEditing( CellRef ref, BOOL flag )toolbox CellEndEditing( CellRef ref, TextRef textObj )// ...toolbox fn CellUsesSingleLineMode( CellRef ref ) = BOOLtoolbox CellSetUsesSingleLineMode( CellRef ref, BOOL flag )// Expansion framestoolbox fn CellExpansionFrame( CellRef ref, CGRect frame, ViewRef controlView ) = CGRecttoolbox CellDrawWithExpansionFrame( CellRef ref, CGRect frame, ViewRef controlView )// Layout directiontoolbox fn CellUserInterfaceLayoutDirection( CellRef ref ) = NSUserInterfaceLayoutDirectiontoolbox CellSetUserInterfaceLayoutDirection( CellRef ref, NSUserInterfaceLayoutDirection direction )// Multipart imagestoolbox nsDrawThreePartImage( CGRect frame, ImageRef startCap, ImageRef centerFill, ImageRef endCap, BOOL vertical, NSCompositingOperation op, CGFloat alphaFraction, BOOL flipped )toolbox nsDrawNinePartImage( CGRect frame, ImageRef tl, ImageRef t, ImageRef tr, ImageRef l, ImageRef c, ImageRef r, ImageRef bl, ImageRef b, ImageRef br, NSCompositingOperation op, CGFloat alphaFraction, BOOL flipped )