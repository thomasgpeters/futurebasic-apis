/*  Object.incl  Bernie Wylde 20180306  Framework: Foundation  NSObject - https://developer.apple.com/documentation/objectivec/nsobject?language=objc  See also ObjCRuntime.incl functions:    ClassFromString    StringFromClass*/// Inittoolbox fn ObjectInit = ObjectRef// autoreleased// Identify classtoolbox fn ObjectClass( ObjectRef obj ) = ClassReftoolbox fn ObjectSuperclass( ObjectRef obj ) = ClassRef// Identify and compare objectstoolbox fn ObjectIsEqual( ObjectRef obj1, ObjectRef obj2 ) = BOOLtoolbox fn ObjectHash( ObjectRef obj ) = NSUInteger// self// Test inheritance, behavior, conformancetoolbox fn ObjectIsKindOfClass( ObjectRef obj, ClassRef class ) = BOOLtoolbox fn ObjectIsMemberOfClass( ObjectRef obj, ClassRef class ) = BOOLtoolbox fn ObjectRespondsToSelector( ObjectRef obj, CFStringRef selectorName ) = BOOLtoolbox fn ObjectConformsToProtocol( ObjectRef obj, ProtocolRef protocol ) = BOOL// Describe objectstoolbox fn ObjectDescription( ObjectRef obj ) = CFStringReftoolbox fn ObjectDebugDescription( ObjectRef obj ) = CFStringRef// Send messagestoolbox ObjectPerformSelector( ObjectRef obj, CFStringRef selectorString, ObjectRef withObj, CFTimeInterval afterDelay )//toolbox ObjectPerformSelectorWithObject( ObjectRef obj, CFStringRef selectorString, ObjectRef withObj )toolbox ObjectPerformSelectorWithObjects( ObjectRef obj, CFStringRef selectorString, ObjectRef obj1, ObjectRef obj2 )toolbox ObjectPerformSelectorOnMainThread( ObjectRef obj, CFStringRef selectorString, ObjectRef withObj, BOOL waitUntilDone )toolbox ObjectPerformSelectorInBackground( ObjectRef obj, CFStringRef selectorString, ObjectRef withObj )// Identify proxytoolbox fn ObjectIsProxy( ObjectRef obj ) = BOOL// Retain/releasetoolbox fn ObjectRetain( ObjectRef obj ) = ObjectReftoolbox ObjectRelease( ObjectRef obj )toolbox fn ObjectAutorelease( ObjectRef obj ) = ObjectReftoolbox fn ObjectIsSubclassOfClass( ObjectRef obj, ClassRef class ) = BOOL// Create, copy, dealloc// ...toolbox fn ObjectCopy( ObjectRef obj ) = ObjectRef// autoreleasedtoolbox fn ObjectMutableCopy( ObjectRef obj ) = ObjectRef// autoreleased// Class functionality// Protocol conformance// Method infotoolbox fn ObjectMethodForSelector( ObjectRef obj, SELRef selector ) = IMPReftoolbox fn ObjectInstanceMethodForSelector( ClassRef class, SELRef selector ) = IMPRef//toolbox fn ObjectInstanceMethodSignatureForSelector( ObjectRef obj, SELRef selector ) = MethodSignatureReftoolbox fn ObjectInstanceMethodSignatureForSelector( ClassRef class, SELRef selector ) = MethodSignatureRef// 20240701toolbox fn ObjectMethodSignatureForSelector( ObjectRef obj, SELRef selector ) = MethodSignatureRef// Forwarding messages// Dynamically resolve methods// Error handling// Archiving// Class descriptions// Scriptingtoolbox fn ObjectClassName( ObjectRef obj ) = CFStringRef// Instance properties// Type properties// Instance methods// ...// ...// KeyValueObserving// KeyValueCoding - See KeyValueCoding.incl//toolbox fn ObjectValueForKey( ObjectRef obj, CFStringRef key ) = ObjectRef// moved to KeyValueCoding.incl 20220406//toolbox ObjectSetValueForKey( ObjectRef obj, ObjectRef value, CFStringRef key )// // moved to KeyValueCoding.incl 20220406// NSObject protocol methods// supportsSecureCoding/*  NScriptWhoseTests functions*/toolbox fn ObjectIsEqualTo( ObjectRef obj, ObjectRef otherObj ) = BOOLtoolbox fn ObjectIsGreaterThan( ObjectRef obj, ObjectRef otherObj ) = BOOLtoolbox fn ObjectIsGreaterThanOrEqualTo( ObjectRef obj, ObjectRef otherObj ) = BOOLtoolbox fn ObjectIsLessThan( ObjectRef obj, ObjectRef otherObj ) = BOOLtoolbox fn ObjectIsLessThanOrEqualTo( ObjectRef obj, ObjectRef otherObj ) = BOOLtoolbox fn ObjectIsNotEqualTo( ObjectRef obj, ObjectRef otherObj ) = BOOL// Customtoolbox ObjectCallFunction( ptr fnAddress, ObjectRef withObj, CFTimeInterval afterDelay )toolbox ObjectCallFunctionOnMainThread( ptr fnAddress, ObjectRef withObj, BOOL waitUntilDone )toolbox ObjectCallFunctionInBackground( ptr fnAddress, ObjectRef withObj )/*  ObjectProperty  Store an arbitrary value as a property of an object*/toolbox fn ObjectProperty( ObjectRef obj, CFStringRef key ) = ObjectReftoolbox ObjectSetProperty( ObjectRef obj, CFStringRef key, ObjectRef value ) // same as ObjectPropertySettoolbox ObjectPropertySet( ObjectRef obj, CFStringRef key, ObjectRef value )toolbox fn ObjectPropertyBool( ObjectRef obj, CFStringRef key ) = BOOLtoolbox ObjectPropertySetBool( ObjectRef obj, CFStringRef key, BOOL value )toolbox fn ObjectPropertyLong( ObjectRef obj, CFStringRef key ) = longtoolbox ObjectPropertySetLong( ObjectRef obj, CFStringRef key, long value )toolbox fn ObjectPropertyDouble( ObjectRef obj, CFStringRef key ) = doubletoolbox ObjectPropertySetDouble( ObjectRef obj, CFStringRef key, double value )toolbox fn ObjectPropertyRect( ObjectRef obj, CFStringRef key ) = CGRecttoolbox ObjectPropertySetRect( ObjectRef obj, CFStringRef key, CGRect r )toolbox fn ObjectPropertyPoint( ObjectRef obj, CFStringRef key ) = CGPointtoolbox ObjectPropertySetPoint( ObjectRef obj, CFStringRef key, CGPoint pt )toolbox fn ObjectPropertySize( ObjectRef obj, CFStringRef key ) = CGSizetoolbox ObjectPropertySetSize( ObjectRef obj, CFStringRef key, CGSize sz )toolbox fn ObjectPropertyRange( ObjectRef obj, CFStringRef key ) = CFRangetoolbox ObjectPropertySetRange( ObjectRef obj, CFStringRef key, CFRange range )toolbox fn ObjectPropertyBookmarkURL( ObjectRef obj, CFStringRef key ) = CFURLReftoolbox ObjectPropertySetBookmarkURL( ObjectRef obj, CFStringRef key, CFURLRef url )toolbox fn ObjectPropertyGetBytes( ObjectRef obj, CFStringRef key, ptr bytes ) = BOOLtoolbox ObjectPropertySetBytes( ObjectRef obj, CFStringRef key, ptr bytes, long length )toolbox ObjectRemoveProperty( ObjectRef obj, CFStringRef key )               // same as ObjectPropertyRemovetoolbox ObjectPropertyRemove( ObjectRef obj, CFStringRef key )toolbox ObjectRemoveAllProperties( ObjectRef obj )                           // same as ObjectPropertyRemoveAlltoolbox ObjectPropertyRemoveAll( ObjectRef obj )/*  ObjectID  Maintain a list of objects, identified by an integer value (ID)*/toolbox fn ObjectID( ObjectRef obj ) = NSInteger// returns NSNotFound if, er, not foundtoolbox fn ObjectWithID( NSInteger objID ) = ObjectReftoolbox ObjectSetID( ObjectRef obj, NSInteger objID )// if an object already exists with objID, the old object is replaced with objtoolbox ObjectRemoveID( NSInteger objID )/*  JSON convenience functions*/toolbox fn ObjectWithJSONString( CFStringRef string, ErrorRef *err ) = ObjectRef