/*  AVPlayerView - https://developer.apple.com/documentation/avkit/avplayerview?language=objc  Bernie Wylde 20180309  Framework: AVKit  Inherits from: View/Responder/Object    syntax:    avplayerview tag, rect, controlsStyle, wndTag*/// controls style#if ndef _DEFINEDINCOCOA#define AVPlayerViewControlsStyle as NSInteger#endifsystem AVPlayerViewControlsStyle AVPlayerViewControlsStyleNonesystem AVPlayerViewControlsStyle AVPlayerViewControlsStyleInlinesystem AVPlayerViewControlsStyle AVPlayerViewControlsStyleFloatingsystem AVPlayerViewControlsStyle AVPlayerViewControlsStyleMinimalsystem AVPlayerViewControlsStyle AVPlayerViewControlsStyleDefault// = AVPlayerViewControlsStyleInline// trim result#if ndef _DEFINEDINCOCOA#define AVPlayerViewTrimResult as NSInteger#endifsystem AVPlayerViewTrimResult AVPlayerViewTrimOKButtonsystem AVPlayerViewTrimResult AVPlayerViewTrimCancelButton// Classtoolbox fn AVPlayerViewClass = ClassReftoolbox fn AVPlayerViewWithTag( NSInteger tag ) = AVPlayerViewRef// Inittoolbox fn AVPlayerViewInit( NSInteger tag, CGRect r ) = AVPlayerViewRef// autoreleased// AVPlayertoolbox fn AVPlayerViewPlayer( NSInteger tag ) = AVPlayerReftoolbox AVPlayerViewSetPlayer( NSInteger tag, AVPlayerRef player )// Customizationtoolbox fn avPlayerViewControlsStyle( NSInteger tag ) = AVPlayerViewControlsStyle// lowercase 'av' to avoid clash with var typetoolbox AVPlayerViewSetControlsStyle( NSInteger tag, AVPlayerViewControlsStyle style )toolbox fn AVPlayerViewShowsFrameSteppingButtons( NSInteger tag ) = BOOLtoolbox AVPlayerViewSetShowsFrameSteppingButtons( NSInteger tag, BOOL flag )toolbox fn AVPlayerViewShowsSharingServiceButton( NSInteger tag ) = BOOLtoolbox AVPlayerViewSetShowsSharingServiceButton( NSInteger tag, BOOL flag )toolbox fn AVPlayerViewShowsFullScreenToggleButton( NSInteger tag ) = BOOLtoolbox AVPlayerViewSetShowsFullScreenToggleButton( NSInteger tag, BOOL flag )toolbox fn AVPlayerViewContentOverlayView( NSInteger tag ) = ViewReftoolbox fn AVPlayerViewActionPopUpButtonMenu( NSInteger tag ) = MenuReftoolbox AVPlayerViewSetActionPopUpButtonMenu( NSInteger tag, MenuRef m )toolbox fn AVPlayerViewUpdatesNowPlayingInfoCenter( NSInteger tag ) = BOOLtoolbox AVPlayerViewSetUpdatesNowPlayingInfoCenter( NSInteger tag, BOOL flag )// Configure videotoolbox fn AVPlayerViewIsReadyForDisplay( NSInteger tag ) = BOOLtoolbox fn AVPlayerViewVideoBounds( NSInteger tag ) = CGRecttoolbox fn AVPlayerViewVideoGravity( NSInteger tag ) = CFStringReftoolbox AVPlayerViewSetVideoGravity( NSInteger tag, CFStringRef gravity )// Frame analysis//toolbox fn AVPlayerViewAllowsVideoFrameAnalysis( NSInteger tag ) = BOOL//toolbox AVPlayerViewSetAllowsVideoFrameAnalysis( NSInteger tag, BOOL flag )// Playback speed#if _MACOSMAXALLOWED >= 130000//toolbox fn AVPlayerViewSpeeds( NSInteger tag ) = CFArrayRef                // macOS 13.0+//toolbox AVPlayerViewSetSpeeds( NSInteger tag, CFArrayRef speeds )          // macOS 13.0+//toolbox fn AVPlayerViewSelectedSpeed( NSInteger tag ) = AVPlaybackSpeedRef // macOS 13.0+//toolbox AVPlayerViewSelectSpeed( NSInteger tag, AVPlaybackSpeedRef speed ) // macOS 13.0+#endif// 130000// Trimming playback contenttoolbox fn AVPlayerViewCanBeginTrimming( NSInteger tag ) = BOOL/*  AVPlayerViewBeginTrimmingWithCompletionHandler  completion handler example:    void local fn MyCompletionHandler( tag as NSInteger, result as AVPlayerViewTrimResult, userData as ptr )      // ...    end fn*/toolbox AVPlayerViewBeginTrimmingWithCompletionHandler( NSInteger tag, ptr completionHandler, ptr userData )// Display chapter and titletoolbox AVPlayerViewFlashChapterNumber( NSInteger tag, NSUInteger number, CFStringRef title )// title is optional and can be NULL// Conveniencetoolbox fn AVPlayerViewPlayerIsPlaying( NSInteger tag ) = BOOL