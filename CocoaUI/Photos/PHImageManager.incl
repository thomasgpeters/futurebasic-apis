/*  PHImageManager  Bernie Wylde 20250112  Framework: Photos  Inherits from: Object*/// image request ID#if ndef _DEFINEDINCOCOA#define PHImageRequestID as SInt32#endif // _DEFINEDINCOCOAsystem PHImageRequestID PHInvalidImageRequestID // = 0system CGSize PHImageManagerMaximumSize// image request option version#if ndef _DEFINEDINCOCOA#define PHImageRequestOptionsVersion as NSInteger#endif // _DEFINEDINCOCOAsystem PHImageRequestOptionsVersion PHImageRequestOptionsVersionCurrent // = 0, // version with edits (aka adjustments) rendered or unadjusted version if there is no editssystem PHImageRequestOptionsVersion PHImageRequestOptionsVersionUnadjusted //, // original version without any adjustmentssystem PHImageRequestOptionsVersion PHImageRequestOptionsVersionOriginal // original version, in the case of a combined format the highest fidelity format will be returned (e.g. RAW for a RAW+JPG source image)// delivery mode#if ndef _DEFINEDINCOCOA#define PHImageRequestOptionsDeliveryMode as NSInteger#endif // _DEFINEDINCOCOAsystem PHImageRequestOptionsDeliveryMode PHImageRequestOptionsDeliveryModeOpportunistic // = 0, // client may get several image results when the call is asynchronous or will get one result when the call is synchronoussystem PHImageRequestOptionsDeliveryMode PHImageRequestOptionsDeliveryModeHighQualityFormat // = 1, // client will get one result only and it will be as asked or better than askedsystem PHImageRequestOptionsDeliveryMode PHImageRequestOptionsDeliveryModeFastFormat // = 2 // client will get one result only and it may be degraded// resize mode#if ndef _DEFINEDINCOCOA#define PHImageRequestOptionsResizeMode as NSInteger#endif // _DEFINEDINCOCOAsystem PHImageRequestOptionsResizeMode PHImageRequestOptionsResizeModeNone // = 0, // no resizesystem PHImageRequestOptionsResizeMode PHImageRequestOptionsResizeModeFast //, // use targetSize as a hint for optimal decoding when the source image is a compressed format (i.e. subsampling), the delivered image may be larger than targetSizesystem PHImageRequestOptionsResizeMode PHImageRequestOptionsResizeModeExact //, // same as above but also guarantees the delivered image is exactly targetSize (must be set when a normalizedCropRect is specified)// video request option version#if _MACOSMAXALLOWED >= 101500#if ndef _DEFINEDINCOCOA#define PHVideoRequestOptionsVersion as NSInteger // macOS 10.15+#endif // _DEFINEDINCOCOAsystem PHVideoRequestOptionsVersion PHVideoRequestOptionsVersionCurrent// = 0, // macOS 10.15+ // version with edits (aka adjustments) rendered or unadjusted version if there is no editssystem PHVideoRequestOptionsVersion PHVideoRequestOptionsVersionOriginal // macOS 10.15+ // original version// video request option delivery mode#if ndef _DEFINEDINCOCOA#define PHVideoRequestOptionsDeliveryMode as NSInteger // macOS 10.15+#endif // _DEFINEDINCOCOAsystem PHVideoRequestOptionsDeliveryMode PHVideoRequestOptionsDeliveryModeAutomatic           // = 0, // macOS 10.15+ // let us pick the quality (typ. PHVideoRequestOptionsDeliveryModeMediumQualityFormat for streamed AVPlayerItem or AVAsset, or PHVideoRequestOptionsDeliveryModeHighQualityFormat for AVAssetExportSession)system PHVideoRequestOptionsDeliveryMode PHVideoRequestOptionsDeliveryModeHighQualityFormat   // = 1, // macOS 10.15+ // best qualitysystem PHVideoRequestOptionsDeliveryMode PHVideoRequestOptionsDeliveryModeMediumQualityFormat // = 2, // macOS 10.15+ // medium quality (typ. 720p), currently only supported for AVPlayerItem or AVAsset when streaming from iCloud (will systematically default to PHVideoRequestOptionsDeliveryModeHighQualityFormat if locally available)system PHVideoRequestOptionsDeliveryMode PHVideoRequestOptionsDeliveryModeFastFormat          // = 3  // macOS 10.15+ // fastest available (typ. 360p MP4), currently only supported for AVPlayerItem or AVAsset when streaming from iCloud (will systematically default to PHVideoRequestOptionsDeliveryModeHighQualityFormat if locally available)#endif // 101500// Gettoolbox fn PHImageManagerDefault = PHImageManagerRef// Request images/*  PHImageManagerRequestImageForAsset  result handler:    void local fn MyHandler( ref as PHImageManagerRef, result as ImageRef, info as CFDictionaryRef, userData as ptr )      // ...    end fn*/toolbox fn PHImageManagerRequestImageForAsset( PHImageManagerRef ref, PHAssetRef asset, CGSize targetSize, PHImageContentMode contentMode, PHImageRequestOptionsRef options, ptr resultHandler, ptr userData ) = PHImageRequestID#if _MACOSMAXALLOWED >= 101500/*  PHImageManagerRequestImageDataAndOrientaionForAsset  result handler:    void local fn MyHandler( ref as PHImageManagerRef, imageData as CFDataRef, dataUTI as CFStringRef, orientation as CGImagePropertyOrientation, info as CFDictionaryRef, userData as ptr )      // ...    end fn*/toolbox fn PHImageManagerRequestImageDataAndOrientaionForAsset( PHImageManagerRef ref, PHAssetRef asset, PHImageRequestOptionsRef options, ptr resultHandler, ptr userData ) = PHImageRequestID#endif // 101500// Request video objects#if _MACOSMAXALLOWED >= 101500/*  PHImageManagerRequestPlayerItemForVideo  result handler:    void local fn MyHandler( ref as PHImageManagerRef, playerItem as AVPlayerItemRef, info as CFDictionaryRef, userData as ptr )      // ...    end fn*/toolbox fn PHImageManagerRequestPlayerItemForVideo( PHImageManagerRef ref, PHAssetRef asset, PHVideoRequestOptionsRef options, ptr resultHandler, ptr userData ) = PHImageRequestID // macOS 10.15+/*  PHImageManagerRequestExportSessionForVideo  result handler:    void local fn MyHandler( ref as PHImageManagerRef, exportSession as AVAssetExportSessionRef, info as CFDictionaryRef, userData as ptr )      // ...    end fn*/toolbox fn PHImageManagerRequestExportSessionForVideo( PHImageManagerRef ref, PHAssetRef asset, PHVideoRequestOptionsRef options, CFStringRef exportPreset, ptr resultHandler, ptr userData ) = PHImageRequestID // macOS 10.15+/*  PHImageManagerRequestExportSessionForVideo  result handler:    void local fn MyHandler( ref as PHImageManagerRef, asset as AVAssetRef, audioMix as AVAudioMixRef, info as CFDictionaryRef, userData as ptr )      // ...    end fn*/toolbox fn PHImageManagerRequestAVAssetForVideo( PHImageManagerRef ref, PHAssetRef asset, PHVideoRequestOptionsRef options, ptr resultHandler, ptr userData ) = PHImageRequestID // macOS 10.15+#endif // 101500// Request live photos#if _MACOSMAXALLOWED >= 101500/*  PHImageManagerRequestLivePhotoForAsset  result handler:    void local fn MyHandler( ref as PHImageManagerRef, livePhoto as PHLivePhotoRef, info as CFDictionaryRef, userData as ptr )      // ...    end fn*/toolbox fn PHImageManagerRequestLivePhotoForAsset( PHImageManagerRef ref, PHAssetRef asset, CGSize targetSize, PHImageContentMode contentMode, PHLivePhotoRequestOptionsRef options, ptr resultHandler, ptr userData ) = PHImageRequestID // macOS 10.15+#endif // 101500// Cancel requesttoolbox PHImageManagerRequestCancelImageRequest( PHImageManagerRef ref, PHImageRequestID requestID )/*  PHImageRequestOptions  Inherits from: Object*/// Scheduletoolbox fn PHImageRequestOptionsIsSynchronous( PHImageRequestOptionsRef ref ) = BOOLtoolbox PHImageRequestOptionsSetSynchronous( PHImageRequestOptionsRef ref, BOOL flag )// Specifytoolbox fn phImageRequestOptionsVersion( PHImageRequestOptionsRef ref ) = PHImageRequestOptionsVersion // lowercase 'ph' to avoid clash with typetoolbox PHImageRequestOptionsSetVersion( PHImageRequestOptionsRef ref, PHImageRequestOptionsVersion version )toolbox fn phImageRequestOptionsDeliveryMode( PHImageRequestOptionsRef ref ) = PHImageRequestOptionsDeliveryMode // lowercase 'ph' to avoid clash with typetoolbox PHImageRequestOptionsSetDeliveryMode( PHImageRequestOptionsRef ref, PHImageRequestOptionsDeliveryMode md )toolbox fn phImageRequestOptionsResizeMode( PHImageRequestOptionsRef ref ) = PHImageRequestOptionsResizeMode // lowercase 'ph' to avoid clash with typetoolbox PHImageRequestOptionsSetResizeMode( PHImageRequestOptionsRef ref, PHImageRequestOptionsResizeMode md )toolbox fn PHImageRequestOptionsNormalizedCropRect( PHImageRequestOptionsRef ref ) = CGRecttoolbox PHImageRequestOptionsSetNormalizedCropRect( PHImageRequestOptionsRef ref, CGRect r )// Fetch image data from iCloudtoolbox fn PHImageRequestOptionsIsNetworkAccessAllowed( PHImageRequestOptionsRef ref ) = BOOLtoolbox PHImageRequestOptionsSetNetworkAccessAllowed( PHImageRequestOptionsRef ref, BOOL flag )/*  PHImageRequestOptionsSetProgressHandler  handler:    void local fn MyHandler( ref as PHImageRequestOptionsRef, progress as double, err as ErrorRef, stp as ^BOOL, userData as ptr )      // ...    end fn*/toolbox PHImageRequestOptionsSetProgressHandler( PHImageRequestOptionsRef ref, ptr progressHandler, ptr userData )// Instance properties#if _MACOSMAXALLOWED >= 140000toolbox fn PHImageRequestOptionsAllowSecondaryDegradedImage( PHImageRequestOptionsRef ref ) = BOOL     // macOS 14.0+toolbox PHImageRequestOptionsSetAllowSecondaryDegradedImage( PHImageRequestOptionsRef ref, BOOL flag ) // macOS 14.0+#endif // 140000/*  PHVideoRequestOptions  Inherits from: Object  macOS 10.15+*/#if _MACOSMAXALLOWED >= 101500// Optionstoolbox fn phVideoRequestOptionsVersion( PHVideoRequestOptionsRef ref ) = PHVideoRequestOptionsVersion // macOS 10.15+ // lowercase 'ph' to avoid clash with typetoolbox PHVideoRequestOptionsSetVersion( PHVideoRequestOptionsRef ref, PHVideoRequestOptionsVersion version ) // macOS 10.15+toolbox fn phVideoRequestOptionsDeliveryMode( PHVideoRequestOptionsRef ref ) = PHVideoRequestOptionsDeliveryMode // macOS 10.15+ // lowercase 'ph' to avoid clash with typetoolbox PHVideoRequestOptionsSetDeliveryMode( PHVideoRequestOptionsRef ref, PHVideoRequestOptionsDeliveryMode md ) // macOS 10.15+// Fetch data from iCouldtoolbox fn PHVideoRequestOptionsIsNetworkAccessAllowed( PHVideoRequestOptionsRef ref ) = BOOL // macOS 10.15+toolbox PHVideoRequestOptionsSetNetworkAccessAllowed( PHVideoRequestOptionsRef ref, BOOL flag ) // macOS 10.15+/*  PHVideoRequestOptionsSetProgressHandler  progress handler:    void local fn MyHandler( ref as PHVideoRequestOptionsRef, progress as double, err as ErrorRef, stp as ^BOOL, info as CFDictionaryRef, userData as ptr )      // ...    end fn*/toolbox PHVideoRequestOptionsSetProgressHandler( PHVideoRequestOptionsRef ref, ptr progressHandler, ptr userData ) // macOS 10.15+#endif // 101500/*  PHLivePhotoRequestOptions  Inherits from: Object  macOS 10.15+*/#if _MACOSMAXALLOWED >= 101500// Optionstoolbox fn PHLivePhotoRequestOptionsVersion( PHLivePhotoRequestOptionsRef ref ) = PHImageRequestOptionsVersion // macOS 10.15+ // lowercase 'ph' to avoid clash with typetoolbox PHLivePhotoRequestOptionsSetVersion( PHLivePhotoRequestOptionsRef ref, PHImageRequestOptionsVersion version ) // macOS 10.15+toolbox fn PHLivePhotoRequestOptionsDeliveryMode( PHLivePhotoRequestOptionsRef ref ) = PHImageRequestOptionsDeliveryMode // macOS 10.15+ // lowercase 'ph' to avoid clash with typetoolbox PHLivePhotoRequestOptionsSetDeliveryMode( PHLivePhotoRequestOptionsRef ref, PHImageRequestOptionsDeliveryMode md ) // macOS 10.15+// Fetch data from iCouldtoolbox fn PHLivePhotoRequestOptionsIsNetworkAccessAllowed( PHLivePhotoRequestOptionsRef ref ) = BOOL // macOS 10.15+toolbox PHLivePhotoRequestOptionsSetNetworkAccessAllowed( PHLivePhotoRequestOptionsRef ref, BOOL flag ) // macOS 10.15+/*  PHLivePhotoRequestOptionsSetProgressHandler  progress handler:    void local fn MyHandler( ref as PHLivePhotoRequestOptionsRef, progress as double, err as ErrorRef, stp as ^BOOL, info as CFDictionaryRef, userData as ptr )      // ...    end fn*/toolbox PHLivePhotoRequestOptionsSetProgressHandler( PHLivePhotoRequestOptionsRef ref, ptr progressHandler, ptr userData ) // macOS 10.15+#endif // 101500