/*  AudioFile - https://developer.apple.com/documentation/audiotoolbox/audio_file_services?language=objc  Bernie Wylde 20230706  Framework: AudioToolbox*/#if ndef _DEFINEDINCOCOA#define AudioFileID as ptr#define AudioFileTypeID as UInt32#endif// propertyID#if ndef _DEFINEDINCOCOA#define AudioFilePropertyID as UInt32#endifsystem AudioFilePropertyID kAudioFileGlobalInfo_ReadableTypes                        // = 'afrf',system AudioFilePropertyID kAudioFileGlobalInfo_WritableTypes                        // = 'afwf',system AudioFilePropertyID kAudioFileGlobalInfo_FileTypeName                         // = 'ftnm',system AudioFilePropertyID kAudioFileGlobalInfo_AvailableStreamDescriptionsForFormat // = 'sdid',system AudioFilePropertyID kAudioFileGlobalInfo_AvailableFormatIDs                   // = 'fmid',system AudioFilePropertyID kAudioFileGlobalInfo_AllExtensions                        // = 'alxt',system AudioFilePropertyID kAudioFileGlobalInfo_AllHFSTypeCodes                      // = 'ahfs',system AudioFilePropertyID kAudioFileGlobalInfo_AllUTIs                              // = 'auti',system AudioFilePropertyID kAudioFileGlobalInfo_AllMIMETypes                         // = 'amim',system AudioFilePropertyID kAudioFileGlobalInfo_ExtensionsForType                    // = 'fext',system AudioFilePropertyID kAudioFileGlobalInfo_HFSTypeCodesForType                  // = 'fhfs',system AudioFilePropertyID kAudioFileGlobalInfo_UTIsForType                          // = 'futi',system AudioFilePropertyID kAudioFileGlobalInfo_MIMETypesForType                     // = 'fmim',system AudioFilePropertyID kAudioFileGlobalInfo_TypesForMIMEType                     // = 'tmim',system AudioFilePropertyID kAudioFileGlobalInfo_TypesForUTI                          // = 'tuti',system AudioFilePropertyID kAudioFileGlobalInfo_TypesForHFSTypeCode                  // = 'thfs',system AudioFilePropertyID kAudioFileGlobalInfo_TypesForExtension                    // = 'text'system AudioFilePropertyID kAudioFilePropertyFileFormat                     // =	'ffmt',system AudioFilePropertyID kAudioFilePropertyDataFormat                     // =	'dfmt',system AudioFilePropertyID kAudioFilePropertyIsOptimized                    // =	'optm',system AudioFilePropertyID kAudioFilePropertyMagicCookieData                // =	'mgic',system AudioFilePropertyID kAudioFilePropertyAudioDataByteCount             // =	'bcnt',system AudioFilePropertyID kAudioFilePropertyAudioDataPacketCount           // =	'pcnt',system AudioFilePropertyID kAudioFilePropertyMaximumPacketSize              // =	'psze',system AudioFilePropertyID kAudioFilePropertyDataOffset                     // =	'doff',system AudioFilePropertyID kAudioFilePropertyChannelLayout                  // =	'cmap',system AudioFilePropertyID kAudioFilePropertyDeferSizeUpdates               // =	'dszu',system AudioFilePropertyID kAudioFilePropertyDataFormatName                 // =	'fnme',system AudioFilePropertyID kAudioFilePropertyMarkerList                     // =	'mkls',system AudioFilePropertyID kAudioFilePropertyRegionList                     // =	'rgls',system AudioFilePropertyID kAudioFilePropertyPacketToFrame                  // =	'pkfr',system AudioFilePropertyID kAudioFilePropertyFrameToPacket                  // =	'frpk',system AudioFilePropertyID kAudioFilePropertyRestrictsRandomAccess          // =	'rrap',system AudioFilePropertyID kAudioFilePropertyPacketToRollDistance           // =	'pkrl',system AudioFilePropertyID kAudioFilePropertyPreviousIndependentPacket      // = 'pind',system AudioFilePropertyID kAudioFilePropertyNextIndependentPacket          // =	'nind',system AudioFilePropertyID kAudioFilePropertyPacketToDependencyInfo         // =	'pkdp',system AudioFilePropertyID kAudioFilePropertyPacketToByte                   // =	'pkby',system AudioFilePropertyID kAudioFilePropertyByteToPacket                   // =	'bypk',system AudioFilePropertyID kAudioFilePropertyChunkIDs                       // =	'chid',system AudioFilePropertyID kAudioFilePropertyInfoDictionary                 // =	'info',system AudioFilePropertyID kAudioFilePropertyPacketTableInfo                // =	'pnfo',system AudioFilePropertyID kAudioFilePropertyFormatList                     // =	'flst',system AudioFilePropertyID kAudioFilePropertyPacketSizeUpperBound           // =	'pkub',system AudioFilePropertyID kAudioFilePropertyPacketRangeByteCountUpperBound // = 'prub',system AudioFilePropertyID kAudioFilePropertyReserveDuration                // =	'rsrv',system AudioFilePropertyID kAudioFilePropertyEstimatedDuration              // =	'edur',system AudioFilePropertyID kAudioFilePropertyBitRate                        // =	'brat',system AudioFilePropertyID kAudioFilePropertyID3Tag                         // =	'id3t',system AudioFilePropertyID kAudioFilePropertyID3TagOffset                   // =	'id3o',system AudioFilePropertyID kAudioFilePropertySourceBitDepth                 // =	'sbtd',system AudioFilePropertyID kAudioFilePropertyAlbumArtwork                   // =	'aart',system AudioFilePropertyID kAudioFilePropertyAudioTrackCount                // = 'atct',system AudioFilePropertyID kAudioFilePropertyUseAudioTrack                  // =	'uatk'// flags#if ndef _DEFINEDINCOCOA#define AudioFileFlags as UInt32#endifsystem AudioFileFlags kAudioFileFlags_EraseFile              // = 1system AudioFileFlags kAudioFileFlags_DontPageAlignAudioData // = 2// permissions#if ndef _DEFINEDINCOCOA#define AudioFilePermissions as UInt32#endifsystem AudioFilePermissions kAudioFileReadPermission      // = 0x01system AudioFilePermissions kAudioFileWritePermission     // = 0x02system AudioFilePermissions kAudioFileReadWritePermission // = 0x03// smpte time#if ndef _DEFINEDINCOCOAbegin record AudioFile_SMPTE_TimeSInt8 mHoursUInt8 mMinutesUInt8 mSecondsUInt8 mFramesUInt32 mSubFrameSampleOffsetend record#endif // _DEFINEDINCOCOA// marker#if ndef _DEFINEDINCOCOAbegin record AudioFileMarkerdouble mFramePositionCFStringRef	mNameSInt32				mMarkerIDAudioFile_SMPTE_Time	mSMPTETimeUInt32					mTypeUInt16					mReservedUInt16					mChannelend record#endif // _DEFINEDINCOCOA// region flags#if ndef _DEFINEDINCOCOA#define AudioFileRegionFlags as UInt32#endif // _DEFINEDINCOCOAsystem AudioFileRegionFlags kAudioFileRegionFlag_LoopEnable // = 1,system AudioFileRegionFlags kAudioFileRegionFlag_PlayForward // = 2,system AudioFileRegionFlags kAudioFileRegionFlag_PlayBackward // = 4// region#if ndef _DEFINEDINCOCOAbegin record AudioFileRegionUInt32 mRegionIDCFStringRef mNameAudioFileRegionFlags mFlagsUInt32 mNumberMarkersAudioFileMarker mMarkers[1] // this is a variable length array of mNumberMarkers elementsend record#endif // _DEFINEDINCOCOA// Createtoolbox fn AudioFileCreateWithURL( CFURLRef inFileRef, AudioFileTypeID inFileType, AudioStreamBasicDescription *inFormat, AudioFileFlags inFlags, AudioFileID  *outAudioFile  ) = OSStatus//toolbox fn AudioFileInitializeWithCallbacks( ptr inClientData, AudioFile_ReadProc inReadFunc, AudioFile_WriteProc inWriteFunc, AudioFile_GetSizeProc inGetSizeFunc, AudioFile_SetSizeProc inSetSizeFunc, AudioFileTypeID inFileType, AudioStreamBasicDescription *inFormat, AudioFileFlags inFlags, AudioFileID *outAudioFile ) = OSStatus// Open and closetoolbox fn AudioFileOpenURL( CFURLRef inFileRef, AudioFilePermissions inPermissions, AudioFileTypeID inFileTypeHint, AudioFileID *outAudioFile ) = OSStatus// ...toolbox fn AudioFileClose( AudioFileID inAudioFile ) = OSStatus// Read and writetoolbox fn AudioFileReadBytes( AudioFileID inAudioFile, Boolean inUseCache, SInt64 inStartingByte, UInt32 *ioNumBytes, ptr outBuffer ) = OSStatustoolbox fn AudioFileWriteBytes( AudioFileID inAudioFile, Boolean inUseCache, SInt64 inStartingByte, UInt32 *ioNumBytes, ptr inBuffer ) = OSStatustoolbox fn AudioFileReadPacketData( AudioFileID inAudioFile, Boolean inUseCache, UInt32 *ioNumBytes, AudioStreamPacketDescription *outPacketDescription, SInt64 inStartingPacket, UInt32 *ioNumPackets, ptr outBuffer ) = OSStatustoolbox fn AudioFileWritePackets( AudioFileID inAudioFile, Boolean inUseCache, UInt32 inNumBytes, AudioStreamPacketDescription *inPacketDescriptions, SInt64 inStartingPacket, UInt32 *ioNumPackets, ptr inBuffer ) = OSStatus// Propertiestoolbox fn AudioFileGetProperty( AudioFileID inAudioFile, AudioFilePropertyID inPropertyID, UInt32 *ioDataSize, ptr outPropertyData ) = OSStatustoolbox fn AudioFileGetPropertyInfo( AudioFileID inAudioFile, AudioFilePropertyID inPropertyID, UInt32 *outDataSize, UInt32 *isWritable ) = OSStatustoolbox fn AudioFileSetProperty( AudioFileID inAudioFile, AudioFilePropertyID inPropertyID, UInt32 inDataSize, ptr inPropertyData ) = OSStatus// User datatoolbox fn AudioFileCountUserData( AudioFileID inAudioFile, UInt32 inUserDataID, UInt32 *outNumberItems ) = OSStatustoolbox fn AudioFileGetUserDataSize( AudioFileID inAudioFile, UInt32 inUserDataID, UInt32 inIndex, UInt32 *outUserDataSize ) = OSStatustoolbox fn AudioFileGetUserDataSize64( AudioFileID inAudioFile, UInt32 inUserDataID, UInt32 inIndex, UInt64 *outUserDataSize ) = OSStatustoolbox fn AudioFileGetUserData( AudioFileID inAudioFile, UInt32 inUserDataID, UInt32 inIndex, UInt32 *ioUserDataSize, ptr outUserData ) = OSStatustoolbox fn AudioFileGetUserDataAtOffset(AudioFileID inAudioFile, UInt32 inUserDataID, UInt32 inIndex, SInt64 inOffset, UInt32 *ioUserDataSize, ptr outUserData ) = OSStatustoolbox fn AudioFileSetUserData( AudioFileID inAudioFile, UInt32 inUserDataID, UInt32 inIndex, UInt32 inUserDataSize, ptr inUserData ) = OSStatustoolbox fn AudioFileRemoveUserData( AudioFileID inAudioFile, UInt32 inUserDataID, UInt32 inIndex ) = OSStatus// Global infotoolbox fn AudioFileGetGlobalInfoSize( AudioFilePropertyID inPropertyID, UInt32 inSpecifierSize, ptr inSpecifier, UInt32 *outDataSize ) = OSStatustoolbox fn AudioFileGetGlobalInfo( AudioFilePropertyID inPropertyID, UInt32 inSpecifierSize, ptr inSpecifier, UInt32 *ioDataSize, ptr outPropertyData ) = OSStatus// Optimizetoolbox fn AudioFileOptimize( AudioFileID inAudioFile ) = OSStatus// Parse contenttoolbox fn NextAudioFileRegion( AudioFileRegion *inAFRegionPtr ) = AudioFileRegiontoolbox fn NumAudioFileMarkersToNumBytes( long inNumMarkers ) = longtoolbox fn NumBytesToNumAudioFileMarkers( long inNumBytes ) = long// Callbacks// ...