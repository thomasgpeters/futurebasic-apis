/*  SCNAction - https://developer.apple.com/documentation/scenekit/scnaction?language=objc  Bernie Wylde 20221003  Inherits from: Object  Framework: SceneKit*/// Create - movetoolbox fn SCNActionMoveByXYZ( CGFloat deltaX, CGFloat deltaY, CGFloat deltaZ, CFTimeInterval duration ) = SCNActionReftoolbox fn SCNActionMoveBy( SCNVector3 delta, CFTimeInterval duration ) = SCNActionReftoolbox fn SCNActionMoveTo( SCNVector3 location, CFTimeInterval duration ) = SCNActionRef// Create - rotatetoolbox fn SCNActionRotateByXYZ( CGFloat deltaX, CGFloat deltaY, CGFloat deltaZ, CFTimeInterval duration ) = SCNActionReftoolbox fn SCNActionRotateToXYZ( CGFloat deltaX, CGFloat deltaY, CGFloat deltaZ, CFTimeInterval duration ) = SCNActionReftoolbox fn SCNActionRotateToXYZShortestUnitArc( CGFloat deltaX, CGFloat deltaY, CGFloat deltaZ, CFTimeInterval duration, BOOL shortestUnitArc ) = SCNActionReftoolbox fn SCNActionRotateByAngle( CGFloat angle, SCNVector3 aroundAxis, CFTimeInterval duration ) = SCNActionReftoolbox fn SCNActionRotateToAxisAngle( SCNVector4 angle, CFTimeInterval duration ) = SCNActionRef// Create - change scaletoolbox fn SCNActionScaleBy( CGFloat scale, CFTimeInterval duration ) = SCNActionReftoolbox fn SCNActionScaleTo( CGFloat scale, CFTimeInterval duration ) = SCNActionRef// Create - change opacitytoolbox fn SCNActionFadeIn( CFTimeInterval duration ) = SCNActionReftoolbox fn SCNActionFadeOut( CFTimeInterval duration ) = SCNActionReftoolbox fn SCNActionFadeOpacityBy( CGFloat factor, CFTimeInterval duration ) = SCNActionReftoolbox fn SCNActionFadeOpacityTo( CGFloat opacity, CFTimeInterval duration ) = SCNActionRef// Create - change visibilitytoolbox fn SCNActionHide = SCNActionReftoolbox fn SCNActionUnhide = SCNActionRef// Create - remove nodetoolbox fn SCNActionRemoveFromParentNode = SCNActionRef// Create - play audiotoolbox fn SCNActionPlayAudioSource( SCNAudioSourceRef audio, BOOL waitForCompletion ) = SCNActionRef// Create - combine or repeat other actionstoolbox fn SCNActionGroup( CFArrayRef actions ) = SCNActionReftoolbox fn SCNActionSequence( CFArrayRef actions ) = SCNActionReftoolbox fn SCNActionRepeatAction( SCNActionRef repeatAction, NSUInteger count ) = SCNActionReftoolbox fn SCNActionRepeatActionForever( SCNActionRef repeatAction ) = SCNActionRef// Create - delay sequencetoolbox fn SCNActionWaitForDuration( CFTimeInterval duration ) = SCNActionReftoolbox fn SCNActionWaitForDurationWithRange( CFTimeInterval seconds, CFTimeInterval durationRange ) = SCNActionRef// Create - custom/*  SCNActionRunBlock  callback    void local fn MyCallback( node as SCNNodeRef, userData as ptr )      // ...    end fn*/toolbox fn SCNActionRunBlock( ptr callback, ptr userData ) = SCNActionRef/*  SCNActionRunBlockQueue  callback    void local fn MyCallback( node as SCNNodeRef, userData as ptr )      // ...    end fn*///toolbox fn SCNActionRunBlockQueue( ptr callback, ptr userData, dispatch_queue_t queue ) = SCNActionRef/*  SCNActionCustom  callback    void local fn MyCallback( node as SCNNodeRef, elapsedTime CGFloat, userData as ptr )      // ...    end fn*/toolbox fn SCNActionCustom( CFTimeInterval seconds, ptr callback, ptr userData ) = SCNActionRef// Reversetoolbox fn SCNActionReversedAction( SCNActionRef ref ) = SCNActionRef// Animation propertiestoolbox fn SCNActionDuration( SCNActionRef ref ) = CFTimeIntervaltoolbox SCNActionSetDuration( SCNActionRef ref, CFTimeInterval duration )toolbox fn SCNActionSpeed( SCNActionRef ref ) = CGFloattoolbox SCNActionSetSpeed( SCNActionRef ref, CGFloat speed )toolbox fn scnActionTimingMode( SCNActionRef ref ) = SCNActionTimingMode// lowercase 'scn' to avoid clash with typetoolbox SCNActionSetTimingMode( SCNActionRef ref, SCNActionTimingMode timingMode )/*  SCNActionSetTimingFunction  timing function    local fn MyTimingFunction( ref as SCNActionRef, tm as float, userData as ptr ) as float      // ...    end fn = value// return float between 0.0 - 1.0. (0.0 = start state, 1.0 = end state)*/toolbox SCNActionSetTimingFunction( SCNActionRef ref, ptr timingFn, ptr userData )/*  SCNActionable  Protocol*/// Runtoolbox SCNActionableRunAction( SCNActionableRef ref, SCNActionRef action )/*  SCNActionableRunActionWithCompletionHandler, SCNActionableRunActionWithKeyAndCompletionHandler  handler    void local fn MyCompletionHandler( ref as SCNActionableRef, userData as ptr )      // ...    end fn*/toolbox SCNActionableRunActionWithCompletionHandler( SCNActionableRef ref, SCNActionRef action, ptr completionHandler, ptr userData )toolbox SCNActionableRunActionForKey( SCNActionableRef ref, SCNActionRef action, CFStringRef key )toolbox SCNActionableRunActionWithKeyAndCompletionHandler( SCNActionableRef ref, SCNActionRef action, CFStringRef key, ptr completionHandler, ptr userData )// Inspecttoolbox fn SCNActionableActionForKey( SCNActionableRef ref, CFStringRef key ) = SCNActionReftoolbox fn SCNActionableHasActions( SCNActionableRef ref ) = BOOLtoolbox fn SCNActionableActionKeys( SCNActionableRef ref ) = CFArrayRef// Canceltoolbox SCNActionableRemoveActionForKey( SCNActionableRef ref, CFStringRef key )toolbox SCNActionableRemoveAllActions( SCNActionableRef ref )