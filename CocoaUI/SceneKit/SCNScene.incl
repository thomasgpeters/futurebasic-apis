/*  SCNScene - https://developer.apple.com/documentation/scenekit/scnscene?language=objc  Bernie Wylde 20221001  Inherits from: Object  Framework: SceneKit*/// attributes#if ndef _DEFINEDINCOCOA#define SCNSceneAttribute as CFStringRef#endifsystem CFStringRef SCNSceneEndTimeAttributeKeysystem CFStringRef SCNSceneFrameRateAttributeKeysystem CFStringRef SCNSceneStartTimeAttributeKeysystem CFStringRef SCNSceneUpAxisAttributeKey// optionssystem CFStringRef SCNSceneExportDestinationURL// Create from filetoolbox fn SCNSceneInit = SCNSceneRef// autoreleasedtoolbox fn SCNSceneNamed( CFStringRef name ) = SCNSceneReftoolbox fn SCNSceneInDirectory( CFStringRef name, CFStringRef directory, CFDictionaryRef options ) = SCNSceneReftoolbox fn SCNSceneWithURL( CFURLRef url, CFDictionaryRef options, ErrorRef *err ) = SCNSceneRef// Create from Model I/O Asset//toolbox fn SCNSceneWithMDLAsset( MDLAssetRef name ) = SCNSceneRef// Effectstoolbox fn SCNSceneIsPaused( SCNSceneRef ref ) = BOOLtoolbox SCNSceneSetPaused( SCNSceneRef ref, BOOL flag )// Contentstoolbox fn SCNSceneRootNode( SCNSceneRef ref ) = SCNNodeReftoolbox fn SCNSceneBackground( SCNSceneRef ref ) = SCNMaterialPropertyReftoolbox fn SCNSceneLightingEnvironment( SCNSceneRef ref ) = SCNMaterialPropertyRef// Attributestoolbox fn SCNSceneAttributeForKey( SCNSceneRef ref, CFStringRef key ) = CFStringReftoolbox SCNSceneSetAttributeForKey( SCNSceneRef ref, CFStringRef attribute, CFStringRef key )// Export/*  SCNSceneWriteToURL  export delegate callback    local fn MyExportDelegateCallback( ref as SCNSceneRef, image as ImageRef, docURL as CFURLRef, origImageURL as CFURLRef, userData as ptr ) as CFURLRef      CFURLRef url = NULL    end fn = url  progress handler    void local fn MyProgressHandler( ref as SCNSceneRef, totalProgress as float, err as ErrorRef, stp as ^BOOL, userData as ptr )      //*stp = YES// cancel export    end fn*/toolbox fn SCNSceneWriteToURL( SCNSceneRef ref, CFURLRef url, CFDictionaryRef options, ptr exportDelegateCallback, ptr exportDelegateUserData, ptr progressHandler, ptr userData ) = BOOL// Fogtoolbox fn SCNSceneFogStartDistance( SCNSceneRef ref ) = CGFloattoolbox SCNSceneSetFogStartDistance( SCNSceneRef ref, CGFloat distance )toolbox fn SCNSceneFogEndDistance( SCNSceneRef ref ) = CGFloattoolbox SCNSceneSetFogEndDistance( SCNSceneRef ref, CGFloat distance )toolbox fn SCNSceneFogDensityExponent( SCNSceneRef ref ) = CGFloattoolbox SCNSceneSetFogDensityExponent( SCNSceneRef ref, CGFloat exponent )toolbox fn SCNSceneFogColor( SCNSceneRef ref ) = ColorReftoolbox SCNSceneSetFogColor( SCNSceneRef ref, ColorRef color )// Physicstoolbox fn SCNScenePhysicsWorld( SCNSceneRef ref ) = SCNPhysicsWorldRef// Particle systemstoolbox SCNSceneAddParticalSystem( SCNSceneRef ref, SCNParticleSystemRef particleSystem, CATransform3D transform )toolbox fn SCNSceneParticalSystems( SCNSceneRef ref ) = CFArrayReftoolbox SCNSceneRemoveParticalSystem( SCNSceneRef ref, SCNParticleSystemRef particleSystem )toolbox SCNSceneRemoveAllParticalSystems( SCNSceneRef ref )// Instance properties#if _MACOSMAXALLOWED >= 101500toolbox fn SCNSceneScreenSpaceReflectionMaximumDistance( SCNSceneRef ref ) = CGFloat          // macOS 10.15+toolbox SCNSceneSetScreenSpaceReflectionMaximumDistance( SCNSceneRef ref , CGFloat distance ) // macOS 10.15+toolbox fn SCNSceneScreenSpaceReflectionSampleCount( SCNSceneRef ref ) = CGFloat              // macOS 10.15+toolbox SCNSceneSetScreenSpaceReflectionSampleCount( SCNSceneRef ref , CGFloat count )        // macOS 10.15+toolbox fn SCNSceneScreenSpaceReflectionStride( SCNSceneRef ref ) = CGFloat                   // macOS 10.15+toolbox SCNSceneSetScreenSpaceReflectionStride( SCNSceneRef ref , CGFloat stride )            // macOS 10.15+toolbox fn SCNSceneWantsScreenSpaceReflection( SCNSceneRef ref ) = BOOL                       // macOS 10.15+toolbox SCNSceneSetWantsScreenSpaceReflection( SCNSceneRef ref , BOOL flag )                  // macOS 10.15+#endif// 101500