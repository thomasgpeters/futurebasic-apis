/*  Task.incl  Bernie Wylde 20180509  Framework: Foundation  Inherits from: Object  NSTask - https://developer.apple.com/documentation/foundation/nstask*/// termination reason#if ndef _DEFINEDINCOCOA#define NSTaskTerminationReason as NSInteger#endifsystem NSTaskTerminationReason NSTaskTerminationReasonExitsystem NSTaskTerminationReason NSTaskTerminationReasonUncaughtSignal// notificationsystem CFStringRef NSTaskDidTerminateNotification// termination handler example/*    void local fn MyTaskTerminationHandler( task as TaskRef )      // ...    end fn*/// Classtoolbox fn TaskClass = ClassRef// Inittoolbox fn TaskInit = TaskRef// autoreleased/*  termination handler example: see above*/toolbox fn TaskLaunchedTaskWithExecutableURL( CFURLRef url, CFArrayRef arguments, ErrorRef *err, ptr terminationHandler ) = TaskRef// Info + configuretoolbox fn TaskArguments( TaskRef ref ) = CFArrayReftoolbox TaskSetArguments( TaskRef ref, CFArrayRef arguments )toolbox fn TaskCurrentDirectoryURL( TaskRef ref ) = CFURLReftoolbox TaskSetCurrentDirectoryURL( TaskRef ref, CFURLRef url )toolbox fn TaskExecutableURL( TaskRef ref ) = CFURLReftoolbox TaskSetExecutableURL( TaskRef ref, CFURLRef url )toolbox fn TaskEnvironment( TaskRef ref ) = CFDictionaryReftoolbox TaskSetEnvironment( TaskRef ref, CFDictionaryRef environment )toolbox fn TaskProcessIdentifier( TaskRef ref ) = longtoolbox fn TaskStandardError( TaskRef ref ) = ptr     // ptr = FileHandleRef or PipeReftoolbox TaskSetStandardError( TaskRef ref, ptr obj )  // ptr = FileHandleRef or PipeReftoolbox fn TaskStandardInput( TaskRef ref ) = ptr     // ptr = FileHandleRef or PipeReftoolbox TaskSetStandardInput( TaskRef ref, ptr obj )  // ptr = FileHandleRef or PipeReftoolbox fn TaskStandardOutput( TaskRef ref ) = ptr    // ptr = FileHandleRef or PipeReftoolbox TaskSetStandardOutput( TaskRef ref, ptr obj ) // ptr = FileHandleRef or PipeRef// Running and stoppingtoolbox TaskInterrupt( TaskRef ref )toolbox fn TaskLaunch( TaskRef ref, ErrorRef *err ) = BOOLtoolbox fn TaskResume( TaskRef ref ) = BOOLtoolbox fn TaskSuspend( TaskRef ref ) = BOOLtoolbox TaskTerminate( TaskRef ref )toolbox TaskWaitUntilExit( TaskRef ref )// Query statetoolbox fn TaskIsRunning( TaskRef ref ) = BOOLtoolbox fn TaskTerminationStatus( TaskRef ref ) = longtoolbox fn TaskTerminationReason( TaskRef ref ) = NSTaskTerminationReason// Termination handler/*  termination handler example: see above*/toolbox TaskSetTerminationHandler( TaskRef ref, ptr handlerFn )