/*  CIFilter.incl - https://developer.apple.com/documentation/coreimage/cifilter?language=objc  Bernie Wylde 20180624  Framework: CoreImage  Inherits from: Object*//* Filter attributes keys *//** Name of the filter */system CFStringRef kCIAttributeFilterName/** Name of the filter intended for UI display (eg. localized) */system CFStringRef kCIAttributeFilterDisplayName/** Description of the filter intended for UI display (eg. localized) */system CFStringRef kCIAttributeDescription/** The version of OS X and iOS a filter was first available in. */system CFStringRef kCIAttributeFilterAvailable_Macsystem CFStringRef kCIAttributeFilterAvailable_iOS/** URL for the reference documentation of the filter. See localizedReferenceDocumentationForFilterName. */system CFStringRef kCIAttributeReferenceDocumentation/** Array of filter category names (see below) */system CFStringRef kCIAttributeFilterCategories/** Class name of the filter. */system CFStringRef kCIAttributeClass/** The type of the attribute e.g. scalar, time, distance, etc. */system CFStringRef kCIAttributeType/** Minimum value for the attribute. */system CFStringRef kCIAttributeMin/** Maximum value for the attribute. */system CFStringRef kCIAttributeMax/** Minimum value for the slider. */system CFStringRef kCIAttributeSliderMin/** Maximum value for the slider. */system CFStringRef kCIAttributeSliderMax/** Default value for the slider. */system CFStringRef kCIAttributeDefault/** The identity value is the value at which the filter has no effect. */system CFStringRef kCIAttributeIdentity/** The non-localized name of the attribute. */system CFStringRef kCIAttributeName/** The localized name of the attribute to be used for display to the user. */system CFStringRef kCIAttributeDisplayName/** Key to request the desired set of controls in a filter UIView. The defined values for this key are:    CIUISetBasic, CIUISetIntermediate, CIUISetAdvanced and CIUISetDevelopment. */system CFStringRef kCIUIParameterSet/** Constant for requesting controls that are appropiate in an basic user scenario, meaning the bare minimum of settings to control the filter. */system CFStringRef kCIUISetBasic/** Constant for requesting controls that are appropiate in an intermediate user scenario. */system CFStringRef kCIUISetIntermediate/** Constant for requesting controls that are appropiate in an advanced user scenario. */system CFStringRef kCIUISetAdvanced/** Constant for requesting controls that should only be visible for development purposes. */system CFStringRef kCIUISetDevelopment/* Types for numbers */system CFStringRef kCIAttributeTypeTimesystem CFStringRef kCIAttributeTypeScalarsystem CFStringRef kCIAttributeTypeDistancesystem CFStringRef kCIAttributeTypeAnglesystem CFStringRef kCIAttributeTypeBoolean/** Indicates that the key uses integer values. */system CFStringRef kCIAttributeTypeInteger/** Indicates that the key uses non negative integer values. */system CFStringRef kCIAttributeTypeCount/* Types for 2-element vectors */system CFStringRef kCIAttributeTypePositionsystem CFStringRef kCIAttributeTypeOffset/* Types for 3-element vectors */system CFStringRef kCIAttributeTypePosition3/* Types for 4-element vectors */system CFStringRef kCIAttributeTypeRectangle/* Types for colors */system CFStringRef kCIAttributeTypeOpaqueColorsystem CFStringRef kCIAttributeTypeColor/* Types for images */system CFStringRef kCIAttributeTypeGradientsystem CFStringRef kCIAttributeTypeImage/* Types for NSValue of CGAffineTransform */system CFStringRef kCIAttributeTypeTransform/* Categories */system CFStringRef kCICategoryDistortionEffectsystem CFStringRef kCICategoryGeometryAdjustmentsystem CFStringRef kCICategoryCompositeOperationsystem CFStringRef kCICategoryHalftoneEffectsystem CFStringRef kCICategoryColorAdjustmentsystem CFStringRef kCICategoryColorEffectsystem CFStringRef kCICategoryTransitionsystem CFStringRef kCICategoryTileEffectsystem CFStringRef kCICategoryGeneratorsystem CFStringRef kCICategoryReductionsystem CFStringRef kCICategoryGradientsystem CFStringRef kCICategoryStylizesystem CFStringRef kCICategorySharpensystem CFStringRef kCICategoryBlursystem CFStringRef kCICategoryVideosystem CFStringRef kCICategoryStillImagesystem CFStringRef kCICategoryInterlacedsystem CFStringRef kCICategoryNonSquarePixelssystem CFStringRef kCICategoryHighDynamicRangesystem CFStringRef kCICategoryBuiltInsystem CFStringRef kCICategoryFilterGenerator/* Options keys for [CIFilter apply:arguments:options:] and [CIFilter apply:...] methods. */system CFStringRef kCIApplyOptionExtentsystem CFStringRef kCIApplyOptionDefinitionsystem CFStringRef kCIApplyOptionUserInfo/* If used, the value of the kCIApplyOptionColorSpace key be must be an RGB CGColorSpaceRef. * Using this option specifies that the output of the kernel is in this color space. * If not specified, the output of the kernel is in the working color space of the rendering CIContext. */system CFStringRef kCIApplyOptionColorSpace// parameter keyssystem CFStringRef kCIOutputImageKeysystem CFStringRef kCIInputBackgroundImageKeysystem CFStringRef kCIInputImageKeysystem CFStringRef kCIInputDepthImageKeysystem CFStringRef kCIInputDisparityImageKey#if _MACOSMAXALLOWED >= 101400system CFStringRef kCIInputAmountKey// macOS 10.14+#endif// 101400system CFStringRef kCIInputTimeKeysystem CFStringRef kCIInputTransformKeysystem CFStringRef kCIInputScaleKeysystem CFStringRef kCIInputAspectRatioKeysystem CFStringRef kCIInputCenterKeysystem CFStringRef kCIInputRadiusKeysystem CFStringRef kCIInputAngleKeysystem CFStringRef kCIInputRefractionKeysystem CFStringRef kCIInputWidthKeysystem CFStringRef kCIInputSharpnessKeysystem CFStringRef kCIInputIntensityKeysystem CFStringRef kCIInputEVKeysystem CFStringRef kCIInputSaturationKeysystem CFStringRef kCIInputColorKeysystem CFStringRef kCIInputBrightnessKeysystem CFStringRef kCIInputContrastKeysystem CFStringRef kCIInputBiasKeysystem CFStringRef kCIInputWeightsKeysystem CFStringRef kCIInputGradientImageKeysystem CFStringRef kCIInputMaskImageKey#if _MACOSMAXALLOWED >= 101400system CFStringRef kCIInputMatteImageKey// macOS 10.14+#endif// 101400system CFStringRef kCIInputShadingImageKeysystem CFStringRef kCIInputTargetImageKeysystem CFStringRef kCIInputExtentKeysystem CFStringRef kCIInputVersionKey// Createtoolbox fn CIFilterWithName( CFStringRef name ) = CIFilterReftoolbox fn CIFilterWithNameAndInputParameters( CFStringRef name, CFDictionaryRef params ) = CIFilterReftoolbox fn CIFilterWithNameKeysAndValues( CFStringRef name, CFStringRef key0, ... ) = CIFilterRef// NULL-terminated list of key/values// Create from raw imagetoolbox fn CIFilterWithImageData( CFDataRef dta, CFDictionaryRef options ) = CIFilterReftoolbox fn CIFilterWithImageURL( CFURLRef url, CFDictionaryRef options ) = CIFilterRef//toolbox fn CIFilterWithCVPixelBuffer( CVPixelBufferRef pixelBuffer, CFDictionaryRef properties, CFDictionaryRef options ) = CIFilterRef// Registered filterstoolbox fn CIFilterFilterNamesInCategories( CFArrayRef categories ) = CFArrayReftoolbox fn CIFilterFilterNamesInCategory( CFStringRef category ) = CFArrayRef// Registering a filtertoolbox CIFilterRegisterFilterName( CFStringRef name, CIFilterConstructorRef constructor, CFDictionaryRef classAttributes )// Parameters and attributestoolbox CIFilterSetName( CIFilterRef ref, CFStringRef name )toolbox fn CIFilterIsEnabled( CIFilterRef ref ) = BOOLtoolbox fn CIFilterAttributes( CIFilterRef ref ) = CFDictionaryReftoolbox fn CIFilterInputKeys( CIFilterRef ref ) = CFArrayReftoolbox fn CIFilterOutputKeys( CIFilterRef ref ) = CFArrayReftoolbox fn CIFilterOutputImage( CIFilterRef ref ) = CIImageRef// Default valuestoolbox CIFilterSetDefaults( CIFilterRef ref )// Applytoolbox fn CIFilterApplyWithArguments( CIFilterRef ref, CIKernelRef k, CFArrayRef arguments, CFDictionaryRef options ) = CIImageRef//toolbox fn CIFilterApply( CIFilterRef ref, CIKernelRef k, ... ) = CIImageRef// NULL-terminated list of arguments to supply to the kernel function// Localized info for registered filterstoolbox fn CIFilterLocalizedNameForFilterName( CFStringRef filterName ) = CFStringReftoolbox fn CIFilterLocalizedNameForCategory( CFStringRef category ) = CFStringReftoolbox fn CIFilterLocalizedDescriptionForFilterName( CFStringRef filterName ) = CFStringReftoolbox fn CIFilterLocalizedReferenceDocumentationForFilterName( CFStringRef filterName ) = CFURLRef// Create configuration viewtoolbox fn CIFilterViewForUIConfiguration( CIFilterRef ref, CFDictionaryRef configuration, CFArrayRef excludedKeys ) = IKFilterUIViewRef// Serialize and deserializetoolbox fn CIFilterSerializedXMPFromFilters( CFArrayRef filters, CGRect extent ) = CFDataReftoolbox fn CIFilterFilterArrayFromSerializedXMP( CFDataRef xmpData, CGRect extent, ErrorRef *err ) = CFArrayRef// err can be NULL