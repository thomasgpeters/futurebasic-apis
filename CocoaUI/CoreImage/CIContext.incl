/*  CIContext.incl - https://developer.apple.com/documentation/coreimage/cicontext?language=objc  Bernie Wylde 20180627  Framework: CoreImage  Inherits from: Object*///BeginCDeclaration//#import "CIContext.h"//EndC// options#if _MACOSMAXALLOWED >= 101400#if ndef _DEFINEDINCOCOA#define CIContextOption as CFStringRef// macOS 10.14+#endif#endif// 101400system CFStringRef kCIContextCacheIntermediatessystem CFStringRef kCIContextHighQualityDownsamplesystem CFStringRef kCIContextOutputColorSpacesystem CFStringRef kCIContextOutputPremultipliedsystem CFStringRef kCIContextPriorityRequestLowsystem CFStringRef kCIContextUseSoftwareRenderersystem CFStringRef kCIContextWorkingColorSpacesystem CFStringRef kCIContextWorkingFormat// representations#if _MACOSMAXALLOWED >= 101400#if ndef _DEFINEDINCOCOA#define CIImageRepresentationOption as CFStringRef// macOS 10.14+#endif#endif// 101400system CFStringRef kCIImageRepresentationAVDepthDatasystem CFStringRef kCIImageRepresentationDepthImagesystem CFStringRef kCIImageRepresentationDisparityImage// Createtoolbox fn CIContextWithOptions( CFDictionaryRef options ) = CIContextRef// Create for CPU-based renderingtoolbox fn CIContextWithCGContext( CGContextRef cgctx, CFDictionaryRef options ) = CIContextRef// Create for GPU-based rendering with Metaltoolbox fn CIContextWithMTLDevice( ptr mtlDevice ) = CIContextRef// ptr = MTLDeviceReftoolbox fn CIContextWithMTLDeviceAndOptions( ptr mtlDevice, CFDictionaryRef options ) = CIContextRef// ptr = MTLDeviceRef// Render imagestoolbox fn CIContextCreateCGImage( CIContextRef ctx, CIImageRef image, CGRect r ) = CGImageRef// caller is responsible for releasing the returned CGImageReftoolbox fn CIContextCreateCGImageWithFormat( CIContextRef ctx, CIImageRef image, CGRect r, CIFormat format, CGColorSpaceRef colorSpace, BOOL deferred ) = CGImageRef// caller is responsible for releasing the returned CGImageReftoolbox CIContextRenderToBitmap( CIContextRef ctx, CIImageRef image, ptr dta, long rowBytes, CGRect bounds, CIFormat format, CGColorSpaceRef colorSpace )//toolbox CIContextRenderToCVPixelBuffer//toolbox CIContextRenderToCVPixelBufferColorSpace//toolbox CIContextRenderToIOSurface//toolbox CIContextRenderToMTLTexture// Draw imagestoolbox CIContextDrawImage( CIContextRef ctx, CIImageRef image, CGRect inRect, CGRect fromRect )// Manage resourcestoolbox CIContextClearCaches( CIContextRef ctx )toolbox CIContextReclaimResources( CIContextRef ctx )toolbox fn CIContextOfflineGPUCount = unsigned longtoolbox fn CIContextWorkingColorSpace( CIContextRef ctx ) = CGColorSpaceReftoolbox fn CIContextWorkingFormat( CIContextRef ctx ) = CIFormat // Apple docs say this is 10.11+ but it throws up warning// Render image for data of file exporttoolbox fn CIContextTIFFRepresentationOfImage( CIContextRef ctx, CIImageRef image, CIFormat format, CGColorSpaceRef colorSpace, CFDictionaryRef options ) = CFDataReftoolbox fn CIContextJPEGRepresentationOfImage( CIContextRef ctx, CIImageRef image, CGColorSpaceRef colorSpace, CFDictionaryRef options ) = CFDataReftoolbox fn CIContextPNGRepresentationOfImage( CIContextRef ctx, CIImageRef image, CIFormat format, CGColorSpaceRef colorSpace, CFDictionaryRef options ) = CFDataReftoolbox fn CIContextHEIFRepresentationOfImage( CIContextRef ctx, CIImageRef image, CIFormat format, CGColorSpaceRef colorSpace, CFDictionaryRef options ) = CFDataReftoolbox fn CIContextWriteTIFFRepresentationOfImageToURL( CIContextRef ctx, CIImageRef image, CFURLRef url, CIFormat format, CGColorSpaceRef colorSpace, CFDictionaryRef options, ErrorRef *err ) = BOOLtoolbox fn CIContextWriteJPEGRepresentationOfImageToURL( CIContextRef ctx, CIImageRef image, CFURLRef url, CGColorSpaceRef colorSpace, CFDictionaryRef options, ErrorRef *err ) = BOOLtoolbox fn CIContextWritePNGRepresentationOfImageToURL( CIContextRef ctx, CIImageRef image, CFURLRef url, CIFormat format, CGColorSpaceRef colorSpace, CFDictionaryRef options, ErrorRef *err ) = BOOLtoolbox fn CIContextWriteHEIFRepresentationOfImageToURL( CIContextRef ctx, CIImageRef image, CFURLRef url, CIFormat format, CGColorSpaceRef colorSpace, CFDictionaryRef options, ErrorRef *err ) = BOOL// Customize render destinationtoolbox fn CIContextPrepareRender( CIContextRef ctx, CIImageRef image, CGRect fromRect, CIRenderDestinationRef destination, CGPoint atPoint, ErrorRef *err ) = BOOLtoolbox fn CIContextStartTaskToClear( CIContextRef ctx, CIRenderDestinationRef destination, ErrorRef *err ) = CIRenderTaskReftoolbox fn CIContextStartTaskToRenderFromRect( CIContextRef ctx, CIImageRef image, CGRect fromRect, CIRenderDestinationRef destination, CGPoint atPoint, ErrorRef *err ) = CIRenderTaskReftoolbox fn CIContextStartTaskToRender( CIContextRef ctx, CIImageRef image, CIRenderDestinationRef destination, ErrorRef *err ) = CIRenderTaskRef// Instance methods#if _MACOSMAXALLOWED >= 101400toolbox fn CIContextDepthBlurEffectFilterForImage( CIContextRef ctx, CIImageRef image, CIImageRef disparityImage, CIImageRef portraitEffectsMatte, CGImagePropertyOrientation orientation, CFDictionaryRef options ) = CIFilterRef// macOS 10.14+toolbox fn CIContextDepthBlurEffectFilterForImageData( CIContextRef ctx, CFDataRef dta, CFDictionaryRef options ) = CIFilterRef// macOS 10.14+toolbox fn CIContextDepthBlurEffectFilterForImageURL( CIContextRef ctx, CFURLRef url, CFDictionaryRef options ) = CIFilterRef// macOS 10.14+#endif// 101400