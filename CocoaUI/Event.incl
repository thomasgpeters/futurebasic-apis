/*  Event.incl  Bernie Wylde 20170704  Framework: AppKit  Inherits from: Object  NSEvent - https://developer.apple.com/documentation/appkit/nsevent?language=objc*/// modifier flags#if ndef _DEFINEDINCOCOA#define NSEventModifierFlags as NSInteger#endifsystem NSEventModifierFlags NSEventModifierFlagCapsLocksystem NSEventModifierFlags NSEventModifierFlagShiftsystem NSEventModifierFlags NSEventModifierFlagControlsystem NSEventModifierFlags NSEventModifierFlagOptionsystem NSEventModifierFlags NSEventModifierFlagCommandsystem NSEventModifierFlags NSEventModifierFlagNumericPadsystem NSEventModifierFlags NSEventModifierFlagHelpsystem NSEventModifierFlags NSEventModifierFlagFunctionsystem NSEventModifierFlags NSEventModifierFlagDeviceIndependentFlagsMask// types#if ndef _DEFINEDINCOCOA#define NSEventType as NSUInteger#endifsystem NSEventType NSEventTypeLeftMouseDown//             = 1,system NSEventType NSEventTypeLeftMouseUp//               = 2,system NSEventType NSEventTypeRightMouseDown//            = 3,system NSEventType NSEventTypeRightMouseUp//              = 4,system NSEventType NSEventTypeMouseMoved//                = 5,system NSEventType NSEventTypeLeftMouseDragged//          = 6,system NSEventType NSEventTypeRightMouseDragged//         = 7,system NSEventType NSEventTypeMouseEntered//              = 8,system NSEventType NSEventTypeMouseExited//               = 9,system NSEventType NSEventTypeKeyDown//                   = 10,system NSEventType NSEventTypeKeyUp//                     = 11,system NSEventType NSEventTypeFlagsChanged//              = 12,system NSEventType NSEventTypeAppKitDefined//             = 13,system NSEventType NSEventTypeSystemDefined//             = 14,system NSEventType NSEventTypeApplicationDefined//        = 15,system NSEventType NSEventTypePeriodic//                  = 16,system NSEventType NSEventTypeCursorUpdate//              = 17,system NSEventType NSEventTypeScrollWheel//               = 22,system NSEventType NSEventTypeTabletPoint//               = 23,system NSEventType NSEventTypeTabletProximity//           = 24,system NSEventType NSEventTypeOtherMouseDown//            = 25,system NSEventType NSEventTypeOtherMouseUp//              = 26,system NSEventType NSEventTypeOtherMouseDragged//         = 27,/* The following event types are available on some hardware on 10.5.2 and later */system NSEventType NSEventTypeGesture//                   = 29,system NSEventType NSEventTypeMagnify//                   = 30,system NSEventType NSEventTypeSwipe//                     = 31,system NSEventType NSEventTypeRotate//                    = 18,system NSEventType NSEventTypeBeginGesture//              = 19,system NSEventType NSEventTypeEndGesture//                = 20,system NSEventType NSEventTypeSmartMagnify//              = 32,system NSEventType NSEventTypeQuickLook//                 = 33,system NSEventType NSEventTypePressure//                  = 34,system NSEventType NSEventTypeDirectTouch//               = 37,#if _MACOSMAXALLOWED >= 101500system NSEventType NSEventTypeChangeMode//                = 38,// macOS 10.15+#endif // 101500// subtypes#if ndef _DEFINEDINCOCOA#define NSEventSubtype as short#endifsystem short NSEventSubtypeWindowExposed          // = 0,system short NSEventSubtypeApplicationActivated   // = 1,system short NSEventSubtypeApplicationDeactivated // = 2,system short NSEventSubtypeWindowMoved            // = 4,system short NSEventSubtypeScreenChanged          // = 8,/* event subtypes for NSEventTypeSystemDefined events */system short NSEventSubtypePowerOff//             = 1,/* event subtypes for mouse events */system short NSEventSubtypeMouseEvent      // = NX_SUBTYPE_DEFAULT,system short NSEventSubtypeTabletPoint     // = NX_SUBTYPE_TABLET_POINT,system short NSEventSubtypeTabletProximity // = NX_SUBTYPE_TABLET_PROXIMITY,system short NSEventSubtypeTouch           // = NX_SUBTYPE_MOUSE_TOUCH// gesture axis#if ndef _DEFINEDINCOCOA#define NSEventGestureAxis as NSInteger#endifsystem NSEventGestureAxis NSEventGestureAxisNonesystem NSEventGestureAxis NSEventGestureAxisHorizontalsystem NSEventGestureAxis NSEventGestureAxisVertical// pressure behavior#if ndef _DEFINEDINCOCOA#define NSPressureBehavior as NSInteger#endifsystem NSPressureBehavior NSPressureBehaviorPrimaryDefaultsystem NSPressureBehavior NSPressureBehaviorPrimaryClicksystem NSPressureBehavior NSPressureBehaviorPrimaryGenericsystem NSPressureBehavior NSPressureBehaviorPrimaryAcceleratorsystem NSPressureBehavior NSPressureBehaviorPrimaryDeepClicksystem NSPressureBehavior NSPressureBehaviorPrimaryDeepDrag// event mask#if ndef _DEFINEDINCOCOA#define NSEventMask as UInt64#endifsystem NSEventMask NSEventMaskSmartMagnifysystem NSEventMask NSEventMaskPressuresystem NSEventMask NSEventMaskDirectTouchsystem NSEventMask NSEventMaskAny// event masksystem NSEventMask NSEventMaskLeftMouseDownsystem NSEventMask NSEventMaskLeftMouseUpsystem NSEventMask NSEventMaskRightMouseDownsystem NSEventMask NSEventMaskRightMouseUpsystem NSEventMask NSEventMaskMouseMovedsystem NSEventMask NSEventMaskLeftMouseDraggedsystem NSEventMask NSEventMaskRightMouseDraggedsystem NSEventMask NSEventMaskMouseEnteredsystem NSEventMask NSEventMaskMouseExitedsystem NSEventMask NSEventMaskKeyDownsystem NSEventMask NSEventMaskKeyUpsystem NSEventMask NSEventMaskFlagsChangedsystem NSEventMask NSEventMaskAppKitDefinedsystem NSEventMask NSEventMaskSystemDefinedsystem NSEventMask NSEventMaskApplicationDefinedsystem NSEventMask NSEventMaskPeriodicsystem NSEventMask NSEventMaskCursorUpdatesystem NSEventMask NSEventMaskScrollWheelsystem NSEventMask NSEventMaskTabletPointsystem NSEventMask NSEventMaskTabletProximitysystem NSEventMask NSEventMaskOtherMouseDownsystem NSEventMask NSEventMaskOtherMouseUpsystem NSEventMask NSEventMaskOtherMouseDraggedsystem NSEventMask NSEventMaskGesturesystem NSEventMask NSEventMaskMagnifysystem NSEventMask NSEventMaskSwipesystem NSEventMask NSEventMaskRotatesystem NSEventMask NSEventMaskBeginGesturesystem NSEventMask NSEventMaskEndGesture#if _MACOSMAXALLOWED >= 101500system NSEventMask NSEventMaskChangeMode         // macOS 10.15+#endif // 101500// pointing device type#if ndef _DEFINEDINCOCOA#define NSPointingDeviceType as NSUInteger#endifsystem NSPointingDeviceType NSPointingDeviceTypeCursorsystem NSPointingDeviceType NSPointingDeviceTypeErasersystem NSPointingDeviceType NSPointingDeviceTypePensystem NSPointingDeviceType NSPointingDeviceTypeUnknown// button mask#if ndef _DEFINEDINCOCOA#define NSEventButtonMask as NSUInteger#endifsystem NSEventButtonMask NSEventButtonMaskPenTipsystem NSEventButtonMask NSEventButtonMaskPenLowerSidesystem NSEventButtonMask NSEventButtonMaskPenUpperSide// phase#if ndef _DEFINEDINCOCOA#define NSEventPhase as NSUInteger#endifsystem NSEventPhase NSEventPhaseNonesystem NSEventPhase NSEventPhaseBegansystem NSEventPhase NSEventPhaseStationarysystem NSEventPhase NSEventPhaseChangedsystem NSEventPhase NSEventPhaseEndedsystem NSEventPhase NSEventPhaseCancelledsystem NSEventPhase NSEventPhaseMayBegin// swipe tracking options#if ndef _DEFINEDINCOCOA#define NSEventSwipeTrackingOptions as NSUInteger#endifsystem NSEventSwipeTrackingOptions NSEventSwipeTrackingLockDirectionsystem NSEventSwipeTrackingOptions NSEventSwipeTrackingClampGestureAmount// function-key unicodessystem NSUInteger NSUpArrowFunctionKey      // = 0xF700,system NSUInteger NSDownArrowFunctionKey    // = 0xF701,system NSUInteger NSLeftArrowFunctionKey    // = 0xF702,system NSUInteger NSRightArrowFunctionKey   // = 0xF703,system NSUInteger NSF1FunctionKey           // = 0xF704,system NSUInteger NSF2FunctionKey           // = 0xF705,system NSUInteger NSF3FunctionKey           // = 0xF706,system NSUInteger NSF4FunctionKey           // = 0xF707,system NSUInteger NSF5FunctionKey           // = 0xF708,system NSUInteger NSF6FunctionKey           // = 0xF709,system NSUInteger NSF7FunctionKey           // = 0xF70A,system NSUInteger NSF8FunctionKey           // = 0xF70B,system NSUInteger NSF9FunctionKey           // = 0xF70C,system NSUInteger NSF10FunctionKey          // = 0xF70D,system NSUInteger NSF11FunctionKey          // = 0xF70E,system NSUInteger NSF12FunctionKey          // = 0xF70F,system NSUInteger NSF13FunctionKey          // = 0xF710,system NSUInteger NSF14FunctionKey          // = 0xF711,system NSUInteger NSF15FunctionKey          // = 0xF712,system NSUInteger NSF16FunctionKey          // = 0xF713,system NSUInteger NSF17FunctionKey          // = 0xF714,system NSUInteger NSF18FunctionKey          // = 0xF715,system NSUInteger NSF19FunctionKey          // = 0xF716,system NSUInteger NSF20FunctionKey          // = 0xF717,system NSUInteger NSF21FunctionKey          // = 0xF718,system NSUInteger NSF22FunctionKey          // = 0xF719,system NSUInteger NSF23FunctionKey          // = 0xF71A,system NSUInteger NSF24FunctionKey          // = 0xF71B,system NSUInteger NSF25FunctionKey          // = 0xF71C,system NSUInteger NSF26FunctionKey          // = 0xF71D,system NSUInteger NSF27FunctionKey          // = 0xF71E,system NSUInteger NSF28FunctionKey          // = 0xF71F,system NSUInteger NSF29FunctionKey          // = 0xF720,system NSUInteger NSF30FunctionKey          // = 0xF721,system NSUInteger NSF31FunctionKey          // = 0xF722,system NSUInteger NSF32FunctionKey          // = 0xF723,system NSUInteger NSF33FunctionKey          // = 0xF724,system NSUInteger NSF34FunctionKey          // = 0xF725,system NSUInteger NSF35FunctionKey          // = 0xF726,system NSUInteger NSInsertFunctionKey       // = 0xF727,system NSUInteger NSDeleteFunctionKey       // = 0xF728,system NSUInteger NSHomeFunctionKey         // = 0xF729,system NSUInteger NSBeginFunctionKey        // = 0xF72A,system NSUInteger NSEndFunctionKey          // = 0xF72B,system NSUInteger NSPageUpFunctionKey       // = 0xF72C,system NSUInteger NSPageDownFunctionKey     // = 0xF72D,system NSUInteger NSPrintScreenFunctionKey  // = 0xF72E,system NSUInteger NSScrollLockFunctionKey   // = 0xF72F,system NSUInteger NSPauseFunctionKey        // = 0xF730,system NSUInteger NSSysReqFunctionKey       // = 0xF731,system NSUInteger NSBreakFunctionKey        // = 0xF732,system NSUInteger NSResetFunctionKey        // = 0xF733,system NSUInteger NSStopFunctionKey         // = 0xF734,system NSUInteger NSMenuFunctionKey         // = 0xF735,system NSUInteger NSUserFunctionKey         // = 0xF736,system NSUInteger NSSystemFunctionKey       // = 0xF737,system NSUInteger NSPrintFunctionKey        // = 0xF738,system NSUInteger NSClearLineFunctionKey    // = 0xF739,system NSUInteger NSClearDisplayFunctionKey // = 0xF73A,system NSUInteger NSInsertLineFunctionKey   // = 0xF73B,system NSUInteger NSDeleteLineFunctionKey   // = 0xF73C,system NSUInteger NSInsertCharFunctionKey   // = 0xF73D,system NSUInteger NSDeleteCharFunctionKey   // = 0xF73E,system NSUInteger NSPrevFunctionKey         // = 0xF73F,system NSUInteger NSNextFunctionKey         // = 0xF740,system NSUInteger NSSelectFunctionKey       // = 0xF741,system NSUInteger NSExecuteFunctionKey      // = 0xF742,system NSUInteger NSUndoFunctionKey         // = 0xF743,system NSUInteger NSRedoFunctionKey         // = 0xF744,system NSUInteger NSFindFunctionKey         // = 0xF745,system NSUInteger NSHelpFunctionKey         // = 0xF746,system NSUInteger NSModeSwitchFunctionKey   // = 0xF747// Class//toolbox fn EventClass = ClassRef// Createtoolbox fn EventKeyEvent( NSEventType type, CGPoint location, NSUInteger modifierFlags, CFTimeInterval timestamp, NSInteger wndNum GraphicsContextRef ctx, CFStringRef chars, CFStringRef unmodChars, BOOL isRepeat, UInt16 code ) = EventReftoolbox fn EventMouseEvent( NSEventType type, CGPoint location, NSUInteger modifierFlags, CFTimeInterval timestamp, NSInteger wndNum, GraphicsContextRef ctx, NSInteger evNum, NSInteger clickCount, float pressure ) = EventReftoolbox fn EventEnterExitEvent( NSEventType type, CGPoint location, NSUInteger modifierFlags, CFTimeInterval timestamp, NSInteger wndNum, GraphicsContextRef ctx, NSInteger evNum, NSInteger trackingNum, ptr userData ) = EventReftoolbox fn EventOtherEvent( NSEventType type, CGPoint location, NSUInteger modifierFlags, CFTimeInterval timestamp, NSInteger wndNum, GraphicsContextRef ctx, SInt16 subtype, NSInteger data1, NSInteger data2 ) = EventReftoolbox fn EventWithCGEvent( CGEventRef cgEvent ) = EventRef// Typetoolbox fn EventType = NSEventTypetoolbox fn EventSubtype( EventRef ref ) = shorttoolbox fn EventModifierFlags = NSUInteger// General informationtoolbox fn EventLocationInWindow = CGPointtoolbox fn EventTimestamp = CFTimeIntervaltoolbox fn EventWindow = WindowReftoolbox fn EventWindowTag = NSIntegertoolbox fn EventWindowNumber( EventRef ref ) = NSIntegertoolbox fn EventCGEvent( EventRef ref ) = CGEventRef// Key infotoolbox fn EventClassModifierFlags = NSUInteger// this is the class methodtoolbox fn EventKeyRepeatDelay = CFTimeIntervaltoolbox fn EventKeyRepeatInterval = CFTimeIntervaltoolbox fn EventCharacters = CFStringReftoolbox fn EventCharactersIgnoringModifiers = CFStringReftoolbox fn EventIsARepeat = BOOLtoolbox fn EventKeyCode = unsigned short// Mouse infotoolbox fn EventPressedMouseButtons = NSUIntegertoolbox fn EventDoubleClickInterval = CFTimeIntervaltoolbox fn EventMouseLocation = CGPointtoolbox fn EventButtonNumber( EventRef ref ) = NSIntegertoolbox fn EventClickCount = NSIntegertoolbox fn EventAssociatedEventsMask( EventRef ref ) = NSEventMask// Mouse tracking infotoolbox fn EventNumber( EventRef ref ) = NSIntegertoolbox fn EventTrackingNumber( EventRef ref ) = NSIntegertoolbox fn EventTrackingArea( EventRef ref ) = TrackingAreaReftoolbox fn EventUserData( EventRef ref ) = ptr// Custom event infotoolbox fn EventData1( EventRef ref ) = NSIntegertoolbox fn EventData2( EventRef ref ) = NSInteger// Scroll wheel infotoolbox fn EventDeltaX( EventRef ref ) = CGFloattoolbox fn EventDeltaY( EventRef ref ) = CGFloattoolbox fn EventDeltaZ( EventRef ref ) = CGFloat// Pressure infotoolbox fn EventPressure( EventRef ref ) = floattoolbox fn EventStage( EventRef ref ) = NSIntegertoolbox fn EventStageTransition( EventRef ref ) = CGFloattoolbox fn EventPressureBehavior( EventRef ref ) = NSPressureBehavior// Tablet proximity infotoolbox fn EventCapabilityMask( EventRef ref ) = NSUIntegertoolbox fn EventDeviceID( EventRef ref ) = NSUIntegertoolbox fn EventIsEnteringProximity( EventRef ref ) = BOOLtoolbox fn EventPointingDeviceID( EventRef ref ) = NSUIntegertoolbox fn EventPointingDeviceSerialNumber( EventRef ref ) = NSUIntegertoolbox fn EventPointingDeviceType( EventRef ref ) = NSPointingDeviceTypetoolbox fn EventSystemTabletID( EventRef ref ) = NSUIntegertoolbox fn EventTabletID( EventRef ref ) = NSUIntegertoolbox fn EventUniqueID( EventRef ref ) = UInt64toolbox fn EventVendorID( EventRef ref ) = NSUIntegertoolbox fn EventVendorPointingDeviceType( EventRef ref ) = NSUInteger// Tablet pointing infotoolbox fn EventAbsoluteX( EventRef ref ) = NSIntegertoolbox fn EventAbsoluteY( EventRef ref ) = NSIntegertoolbox fn EventAbsoluteZ( EventRef ref ) = NSIntegertoolbox fn EventButtonMask( EventRef ref ) = NSEventButtonMasktoolbox fn EventRotation( EventRef ref ) = floattoolbox fn EventTangentialPressure( EventRef ref ) = floattoolbox fn EventTilt( EventRef ref ) = CGPointtoolbox fn EventVendorDefined( EventRef ref ) = CFTypeRef// Periodic eventstoolbox EventStartPeriodicEvents( CFTimeInterval afterDelay, CFTimeInterval withPeriod )toolbox EventStopPeriodicEvents// Touch and gesture infotoolbox fn EventMagnification( EventRef ref ) = CGFloattoolbox fn EventTouchesMatchingPhase( EventRef ref, NSTouchPhase phase, NSInteger vwTag ) = CFSetReftoolbox fn EventAllTouches( EventRef ref ) = CFSetReftoolbox fn EventTouchesForView( EventRef ref, NSInteger vwTag ) = CFSetReftoolbox fn EventCoalescedTouchesForTouch( EventRef ref, TouchRef touch ) = CFArrayReftoolbox fn EventIsMouseCoalescingEnabled = BOOLtoolbox EventSetMouseCoalescingEnabled( BOOL flag )// Monitoring app events/* EventAddGlobalMonitor  monitor function example:    void local fn MyEventMonitor( event as EventRef, userData as ptr )      // ...    end fn*/toolbox fn EventAddGlobalMonitor( NSEventMask mask, ptr monitorFunction, ptr userData ) = CFTypeRef/*  EventAddLocalMonitor  monitor function example:    local fn MyEventMonitor( event as EventRef, userData as ptr ) as EventRef      EventRef   modifiedEvent = event      // ...    end fn = modifiedEvent// return NULL to stop dispatching of the event*/toolbox fn EventAddLocalMonitor( NSEventMask mask, ptr monitorFunction, ptr userData ) = CFTypeReftoolbox EventRemoveMonitor( CFTypeRef eventMonitor )// Scroll wheel and flick eventstoolbox fn EventHasPreciseScrollingDeltas( EventRef ref ) = BOOLtoolbox fn EventScrollingDeltaX( EventRef ref ) = CGFloattoolbox fn EventScrollingDeltaY( EventRef ref ) = CGFloattoolbox fn EventMomentumPhase( EventRef ref ) = NSEventPhasetoolbox fn EventPhase( EventRef ref ) = NSEventPhasetoolbox fn EventIsSwipeTrackingFromScrollEventsEnabled = BOOLtoolbox EventTrackSwipeEvent( EventRef ref, NSEventSwipeTrackingOptions options, CGFloat dampenThresholdMin, CGFloat dampenThresholdMax, ptr handler, ptr userData )toolbox fn EventIsDirectionInvertedFromDevice( EventRef ref ) = BOOL// Convert mouse event into sprite kit node coord space // this declaration is in SKNode.incl header//toolbox fn EventLocationInNode( EventRef ref, SKNodeRef node ) = CGPoint// Instance methods#if _MACOSMAXALLOWED >= 101500toolbox fn EventCharactersByApplyingModifiers( EventRef ref, NSEventModifierFlags modifiers ) = CFStringRef // macOS 10.15+#endif// 101500/*  EventRef functions*/// Typetoolbox fn EventRefType( EventRef ref ) = NSEventTypetoolbox fn EventRefModifierFlags( EventRef ref ) = NSUInteger// General informationtoolbox fn EventRefLocationInWindow( EventRef ref ) = CGPointtoolbox fn EventRefTimestamp( EventRef ref ) = CFTimeIntervaltoolbox fn EventRefWindow( EventRef ref ) = WindowReftoolbox fn EventRefWindowTag( EventRef ref ) = NSInteger// Key infotoolbox fn EventRefCharacters( EventRef ref ) = CFStringReftoolbox fn EventRefCharactersIgnoringModifiers( EventRef ref ) = CFStringReftoolbox fn EventRefIsARepeat( EventRef ref ) = BOOLtoolbox fn EventRefKeyCode( EventRef ref ) = unsigned short// Mouse infotoolbox fn EventRefClickCount( EventRef ref ) = NSInteger// Convenience#if 0// NEW_EVENT_FUNCTIONStoolbox fn EventLocationInView( EventRef ref, NSInteger tag ) = CGPoint#elsetoolbox fn EventLocationInView( NSInteger tag ) = CGPoint#endif