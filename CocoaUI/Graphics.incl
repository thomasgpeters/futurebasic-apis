/*  Graphics.incl  Bernie Wylde 20170919  Framework: AppKit  NSCompositingOperation - https://developer.apple.com/documentation/appkit/nscompositingoperation?language=objc  NSWindowOrderingMode - https://developer.apple.com/documentation/appkit/nswindoworderingmode  NSBackingStore - https://developer.apple.com/documentation/appkit/nsbackingstoretype  NSFocusRingType - https://developer.apple.com/documentation/appkit/nsfocusringtype?language=objc  NSColorRenderingIntent - https://developer.apple.com/documentation/appkit/nscolorrenderingintent?language=objc  NSColorSpaceName - https://developer.apple.com/documentation/appkit/nscolorspacename?language=objc  NSWindowDepth - https://developer.apple.com/documentation/appkit/nswindowdepth?changes=_4  NSAnimationEffect - https://developer.apple.com/documentation/appkit/nsanimationeffect?language=objc  NSDeviceDescriptionKey - https://developer.apple.com/documentation/appkit/nsdevicedescriptionkey?language=objc  NSColor - https://developer.apple.com/documentation/appkit/nscolor?language=objc  NSDisplayGamut - https://developer.apple.com/documentation/appkit/nsdisplaygamut?language=objc  NSFocusRingPlacement - https://developer.apple.com/documentation/appkit/nsfocusringplacement?language=objc  ConvenienceFunctions - https://developer.apple.com/documentation/appkit/drawing/convenience_functions?language=objc  NSBeep - https://developer.apple.com/documentation/appkit/1473622-nsbeep  NSWindow - https://developer.apple.com/documentation/appkit/nswindow?language=objc  NSShowAnimationEffect - https://developer.apple.com/documentation/appkit/1473596-nsshowanimationeffect*/// compositing operation#if ndef _DEFINEDINCOCOA#define NSCompositingOperation as NSUInteger#endifsystem NSCompositingOperation NSCompositeClearsystem NSCompositingOperation NSCompositeCopysystem NSCompositingOperation NSCompositeSourceOversystem NSCompositingOperation NSCompositeSourceInsystem NSCompositingOperation NSCompositeSourceOutsystem NSCompositingOperation NSCompositeSourceAtopsystem NSCompositingOperation NSCompositeDestinationOversystem NSCompositingOperation NSCompositeDestinationInsystem NSCompositingOperation NSCompositeDestinationOutsystem NSCompositingOperation NSCompositeDestinationAtopsystem NSCompositingOperation NSCompositeXORsystem NSCompositingOperation NSCompositePlusDarkersystem NSCompositingOperation NSCompositeHighlightsystem NSCompositingOperation NSCompositePlusLightersystem NSCompositingOperation NSCompositeMultiplysystem NSCompositingOperation NSCompositeScreensystem NSCompositingOperation NSCompositeOverlaysystem NSCompositingOperation NSCompositeDarkensystem NSCompositingOperation NSCompositeLightensystem NSCompositingOperation NSCompositeColorDodgesystem NSCompositingOperation NSCompositeColorBurnsystem NSCompositingOperation NSCompositeSoftLightsystem NSCompositingOperation NSCompositeHardLightsystem NSCompositingOperation NSCompositeDifferencesystem NSCompositingOperation NSCompositeExclusionsystem NSCompositingOperation NSCompositeHuesystem NSCompositingOperation NSCompositeSaturationsystem NSCompositingOperation NSCompositeColorsystem NSCompositingOperation NSCompositeLuminositysystem NSCompositingOperation NSCompositingOperationClearsystem NSCompositingOperation NSCompositingOperationCopysystem NSCompositingOperation NSCompositingOperationSourceOversystem NSCompositingOperation NSCompositingOperationSourceInsystem NSCompositingOperation NSCompositingOperationSourceOutsystem NSCompositingOperation NSCompositingOperationSourceAtopsystem NSCompositingOperation NSCompositingOperationDestinationOversystem NSCompositingOperation NSCompositingOperationDestinationInsystem NSCompositingOperation NSCompositingOperationDestinationOutsystem NSCompositingOperation NSCompositingOperationDestinationAtopsystem NSCompositingOperation NSCompositingOperationXORsystem NSCompositingOperation NSCompositingOperationPlusDarkersystem NSCompositingOperation NSCompositingOperationHighlightsystem NSCompositingOperation NSCompositingOperationPlusLightersystem NSCompositingOperation NSCompositingOperationMultiplysystem NSCompositingOperation NSCompositingOperationScreensystem NSCompositingOperation NSCompositingOperationOverlaysystem NSCompositingOperation NSCompositingOperationDarkensystem NSCompositingOperation NSCompositingOperationLightensystem NSCompositingOperation NSCompositingOperationColorDodgesystem NSCompositingOperation NSCompositingOperationColorBurnsystem NSCompositingOperation NSCompositingOperationSoftLightsystem NSCompositingOperation NSCompositingOperationHardLightsystem NSCompositingOperation NSCompositingOperationDifferencesystem NSCompositingOperation NSCompositingOperationExclusionsystem NSCompositingOperation NSCompositingOperationHuesystem NSCompositingOperation NSCompositingOperationSaturationsystem NSCompositingOperation NSCompositingOperationColorsystem NSCompositingOperation NSCompositingOperationLuminosity// window ordering mode#if ndef _DEFINEDINCOCOA#define NSWindowOrderingMode as NSInteger#endifsystem NSWindowOrderingMode NSWindowAbovesystem NSWindowOrderingMode NSWindowBelowsystem NSWindowOrderingMode NSWindowOut// backing store type#if ndef _DEFINEDINCOCOA#define NSBackingStoreType as NSUInteger#endifsystem NSBackingStoreType NSBackingStoreBuffered// focus ring type#if ndef _DEFINEDINCOCOA#define NSFocusRingType as NSUInteger#endifsystem NSFocusRingType NSFocusRingTypeDefaultsystem NSFocusRingType NSFocusRingTypeNonesystem NSFocusRingType NSFocusRingTypeExterior// color rendering intent#if ndef _DEFINEDINCOCOA#define NSColorRenderingIntent as NSInteger#endifsystem NSColorRenderingIntent NSColorRenderingIntentDefaultsystem NSColorRenderingIntent NSColorRenderingIntentAbsoluteColorimetricsystem NSColorRenderingIntent NSColorRenderingIntentRelativeColorimetricsystem NSColorRenderingIntent NSColorRenderingIntentPerceptualsystem NSColorRenderingIntent NSColorRenderingIntentSaturation// colorspace name#if ndef _DEFINEDINCOCOA#define NSColorSpaceName as CFStringRef#endifsystem CFStringRef NSCalibratedWhiteColorSpacesystem CFStringRef NSCalibratedRGBColorSpacesystem CFStringRef NSDeviceWhiteColorSpacesystem CFStringRef NSDeviceRGBColorSpacesystem CFStringRef NSDeviceCMYKColorSpacesystem CFStringRef NSNamedColorSpacesystem CFStringRef NSPatternColorSpacesystem CFStringRef NSCustomColorSpacesystem CFStringRef NSCalibratedBlackColorSpacesystem CFStringRef NSDeviceBlackColorSpace// window depth#if ndef _DEFINEDINCOCOA#define NSWindowDepth as SInt32#endifsystem NSWindowDepth NSWindowDepthTwentyfourBitRGBsystem NSWindowDepth NSWindowDepthSixtyfourBitRGBsystem NSWindowDepth NSWindowDepthOnehundredtwentyeightBitRGB// animation effect#if ndef _DEFINEDINCOCOA#define NSAnimationEffect as NSUInteger#endifsystem NSAnimationEffect NSAnimationEffectDisappearingItemDefaultsystem NSAnimationEffect NSAnimationEffectPoof// device description#if ndef _DEFINEDINCOCOA#define NSDeviceDescriptionKey as CFStringRef#endifsystem CFStringRef NSDeviceResolutionsystem CFStringRef NSDeviceColorSpaceNamesystem CFStringRef NSDeviceBitsPerSamplesystem CFStringRef NSDeviceIsScreensystem CFStringRef NSDeviceIsPrintersystem CFStringRef NSDeviceSize// standard gray values#if ndef _DEFINEDINCOCOA#define NSWhite as CGFloat#define NSLightGray as CGFloat#define NSDarkGray as CGFloat#define NSBlack as CGFloat#endif// display gamut#if ndef _DEFINEDINCOCOA#define NSDisplayGamut as NSInteger#endifsystem NSDisplayGamut NSDisplayGamutP3   system NSDisplayGamut NSDisplayGamutSRGB // focus ring placement#if ndef _DEFINEDINCOCOA#define NSFocusRingPlacement as NSUInteger#endifsystem NSFocusRingPlacement NSFocusRingAbovesystem NSFocusRingPlacement NSFocusRingBelowsystem NSFocusRingPlacement NSFocusRingOnly// Rectanglestoolbox nsFrameRect( CGRect r )toolbox nsFrameRectWithWidth( CGRect r, CGFloat frameWidth )toolbox nsFrameRectWithWidthUsingOperation( CGRect r, CGFloat frameWidth, NSCompositingOperation operation )toolbox nsEraseRect( CGRect r )toolbox nsRectFill( CGRect r )toolbox nsRectFillUsingOperation( CGRect r, NSCompositingOperation operation )toolbox nsRectFillList( CGRect *rects, NSInteger count )toolbox nsRectFillListUsingOperation( CGRect *rects, NSInteger count, NSCompositingOperation op )toolbox nsRectFillListWithColors( CGRect *rects, ColorRef *cols, NSInteger count )toolbox nsRectFillListWithColorsUsingOperation( CGRect *rects, ColorRef *cols, NSInteger count, NSCompositingOperation op )toolbox nsRectFillListWithGrays( CGRect *rects, CGFloat *grays, NSInteger count )toolbox nsDrawTiledRects( CGRect boundsRect, CGRect clipRect, CGRectEdge *sides, CGFloat *grays, NSInteger count )toolbox nsDrawGroove( CGRect rect, CGRect clipRect )// Bezelstoolbox nsDrawDarkBezel( CGRect rect, CGRect clipRect )toolbox nsDrawGrayBezel( CGRect rect, CGRect clipRect )toolbox nsDrawLightBezel( CGRect rect, CGRect clipRect )toolbox nsDrawWhiteBezel( CGRect rect, CGRect clipRect )// Backgroundstoolbox nsDrawButton( CGRect rect, CGRect clipRect )toolbox nsDrawWindowBackground( CGRect rect )// Clipping rectstoolbox nsRectClip( CGRect rect )toolbox nsRectClipList( CGRect *rects, NSInteger count )// Focus ringstoolbox NSSetFocusRingStyle( NSFocusRingPlacement placement )// Soundstoolbox NSBeep// Window depthtoolbox fn nsBestDepth( CFStringRef colorSpaceName, NSInteger bps, NSInteger bpp, BOOL planar, BOOL *exactMatch ) = NSWindowDepthtoolbox fn NSPlanarFromDepth( NSWindowDepth depth ) = BOOLtoolbox fn nsColorSpaceFromDepth( NSWindowDepth depth ) = CFStringReftoolbox fn NSBitsPerSampleFromDepth( NSWindowDepth depth ) = NSIntegertoolbox fn NSBitsPerPixelFromDepth( NSWindowDepth depth ) = NSIntegertoolbox fn nsNumberOfColorComponents( CFStringRef colorSpaceName ) = NSInteger//toolbox fn nsAvailableWindowDepths = ptr// System animations/*  NSShowAnimationEffect    callback example:    void local fn MyCallback( contextInfo as ptr )    end fn*/toolbox nsShowAnimationEffect( NSAnimationEffect animationEffect, CGPoint centerLocation, CGSize size, ptr didEndCallback, ptr contextInfo )