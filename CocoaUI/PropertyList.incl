/*  PropertyList.incl  Bernie Wylde 20180502  Framework: Foundation*/// mutability options#if ndef _DEFINEDINCOCOA#define NSPropertyListMutabilityOptions as NSUInteger#endifsystem NSPropertyListMutabilityOptions NSPropertyListImmutablesystem NSPropertyListMutabilityOptions NSPropertyListMutableContainerssystem NSPropertyListMutabilityOptions NSPropertyListMutableContainersAndLeaves// format#if ndef _DEFINEDINCOCOA#define NSPropertyListFormat as NSUInteger#endifsystem NSPropertyListFormat NSPropertyListOpenStepFormatsystem NSPropertyListFormat NSPropertyListXMLFormat_v1_0system NSPropertyListFormat NSPropertyListBinaryFormat_v1_0// read options - read options are same as mutability options (see above)#if ndef _DEFINEDINCOCOA#define NSPropertyListReadOptions as NSPropertyListMutabilityOptions#endif// write options#if ndef _DEFINEDINCOCOA#define NSPropertyListWriteOptions as NSUInteger#endif/*  PropertyListSerialization  Inherits from: Object  NSPropertyListSerialization - https://developer.apple.com/documentation/foundation/nspropertylistserialization?language=objc*/// Classtoolbox fn PropertyListSerializationClass = ClassRef// Serializingtoolbox fn PropertyListSerializationDataWithPropertyList( CFTypeRef plistObj, NSPropertyListFormat format, ErrorRef *err ) = CFDataRef//toolbox fn PropertyListSerializationWritePropertyList( CFTypeRef plistObj, OutputStreamRef stream, NSPropertyListFormat format, ErrorRef *err ) = NSInteger// Deserializingtoolbox fn PropertyListSerializationPropertyListWithData( CFDataRef dta, NSPropertyListReadOptions options, NSPropertyListFormat *format, ErrorRef *err ) = CFTypeRef// format and err params can be NULL//toolbox fn PropertyListSerializationPropertyListWithStream( InputStreamRef stream, NSPropertyListReadOptions options, NSPropertyListFormat format, ErrorRef *err ) = CFTypeRef// Validatingtoolbox fn PropertyListSerializationPropertyListIsValidForFormat( CFTypeRef plistObj, NSPropertyListFormat format ) = BOOL