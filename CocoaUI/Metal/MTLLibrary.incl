/*  MTLLibrary - https://developer.apple.com/documentation/metal/mtllibrary?language=objc  Bernie Wylde 20180606  Framework: Metal  Protocol*/// function type#if ndef _DEFINEDINCOCOA#define MTLFunctionType as NSUInteger#endifsystem MTLFunctionType MTLFunctionTypeVertex       // = 1,system MTLFunctionType MTLFunctionTypeFragment     // = 2,system MTLFunctionType MTLFunctionTypeKernel       // = 3,system MTLFunctionType MTLFunctionTypeVisible      // = 5, // macOS 11.0+system MTLFunctionType MTLFunctionTypeIntersection // = 6, // macOS 11.0+system MTLFunctionType MTLFunctionTypeMesh         // = 7, // macOS 13.0+system MTLFunctionType MTLFunctionTypeObject       // = 8, // macOS 13.0+// patch type#if ndef _DEFINEDINCOCOA#define MTLPatchType as NSUInteger#endifsystem MTLPatchType MTLPatchTypeNone     // = 0system MTLPatchType MTLPatchTypeTriangle // = 1system MTLPatchType MTLPatchTypeQuad     // = 2// library type#if _MACOSMAXALLOWED >= 110000#if ndef _DEFINEDINCOCOA#define MTLLibraryType as NSInteger // macOS 11.0+#endifsystem MTLLibraryType MTLLibraryTypeExecutable // = 0 // macOS 11.0+system MTLLibraryType MTLLibraryTypeDynamic    // = 1 // macOS 11.0+#endif // 110000// math mode#if _MACOSMAXALLOWED >= 150000#if ndef _DEFINEDINCOCOA#define MTLMathMode as NSInteger // macOS 15.0+#endifsystem MTLMathMode MTLMathModeFast    // = 2 // macOS 15.0+system MTLMathMode MTLMathModeRelaxed // = 1 // macOS 15.0+system MTLMathMode MTLMathModeSafe    // = 0 // macOS 15.0+#endif // 150000// math floating point functions#if _MACOSMAXALLOWED >= 150000#if ndef _DEFINEDINCOCOA#define MTLMathFloatingPointFunctions as NSInteger // macOS 15.0+#endifsystem MTLMathFloatingPointFunctions MTLMathFloatingPointFunctionsFast    // = 0 // macOS 15.0+system MTLMathFloatingPointFunctions MTLMathFloatingPointFunctionsPrecise // = 1 // macOS 15.0+#endif // 150000// language version#if ndef _DEFINEDINCOCOA#define MTLLanguageVersion as NSUInteger#endifsystem MTLLanguageVersion MTLLanguageVersion1_1 // = (1 << 16) + 1,system MTLLanguageVersion MTLLanguageVersion1_2 // = (1 << 16) + 2,system MTLLanguageVersion MTLLanguageVersion2_0 // = (2 << 16),#if _MACOSMAXALLOWED >= 101400system MTLLanguageVersion MTLLanguageVersion2_1 // = (2 << 16) + 1, // macOS 10.14+#endif // 101400#if _MACOSMAXALLOWED >= 101500system MTLLanguageVersion MTLLanguageVersion2_2 // = (2 << 16) + 2, // macOS 10.15#endif // 101500#if _MACOSMAXALLOWED >= 110000system MTLLanguageVersion MTLLanguageVersion2_3 // = (2 << 16) + 3, // macOS 11.0+#endif // 110000#if _MACOSMAXALLOWED >= 120000system MTLLanguageVersion MTLLanguageVersion2_4 // = (2 << 16) + 4, // macOS 12.0+#endif // 120000#if _MACOSMAXALLOWED >= 130000system MTLLanguageVersion MTLLanguageVersion3_0 // = (3 << 16) + 0, // macOS 13.0+#endif // 130000#if _MACOSMAXALLOWED >= 140000system MTLLanguageVersion MTLLanguageVersion3_1 // = (3 << 16) + 1, // macOS 14.0+#endif // 140000#if _MACOSMAXALLOWED >= 150000system MTLLanguageVersion MTLLanguageVersion3_2 // = (3 << 16) + 2, // macOS 15.0+#endif // 150000// optimization level#if _MACOSMAXALLOWED >= 130000#if ndef _DEFINEDINCOCOA#define MTLLibraryOptimizationLevel as NSInteger // macOS 13.0+#endifsystem MTLLibraryOptimizationLevel MTLLibraryOptimizationLevelDefault // = 0, // macOS 13.0+system MTLLibraryOptimizationLevel MTLLibraryOptimizationLevelSize    // = 1, // macOS 13.0+#endif // 130000// symbol visibility#if _MACOSMAXALLOWED >= 130300#if ndef _DEFINEDINCOCOA#define MTLCompileSymbolVisibility as NSInteger // macOS 13.3+#endifsystem MTLCompileSymbolVisibility MTLCompileSymbolVisibilityDefault // = 0, // macOS 13.3+system MTLCompileSymbolVisibility MTLCompileSymbolVisibilityHidden  // = 1, // macOS 13.3+#endif // 130300// Attributes#if _MACOSMAXALLOWED >= 110000toolbox fn MTLLibraryInstallName( MTLLibraryRef ref ) = CFStringRef // macOS 11.0+toolbox fn mtlLibraryType( MTLLibraryRef ref ) = MTLLibraryType // macOS 11.0+ // lowercase 'mtl' to avoid clash with type#endif // 110000// Contentstoolbox fn MTLLibraryFunctionNames( MTLLibraryRef ref ) = CFArrayRef// Create shader function objectstoolbox fn MTLLibraryNewFunctionWithName( MTLLibraryRef ref, CFStringRef name ) = MTLFunctionRef/*  MTLLibraryNewFunctionWithNameAndCompletionHandler  completion handler:    void local fn MyCompletionHandler( ref as MTLLibraryRef, mtlFunction as MTLFunctionRef, err as ^ErrorRef, userData as ptr )      // ...    end fn*/toolbox MTLLibraryNewFunctionWithNameAndCompletionHandler( MTLLibraryRef ref, CFStringRef name, MTLFunctionConstantValuesRef constantValues, ptr completionHandler, ptr userData )toolbox fn MTLLibraryNewFunctionWithNameAndConstantValues( MTLLibraryRef ref, CFStringRef name, MTLFunctionConstantValuesRef constantValues, ErrorRef *err ) = MTLFunctionRef#if _MACOSMAXALLOWED >= 110000toolbox fn MTLLibraryNewFunctionWithDescriptor( MTLLibraryRef ref, MTLFunctionDescriptorRef descriptor, ErrorRef *err ) = MTLFunctionRef // macOS 11.0+/*  MTLLibraryNewFunctionWithDescriptorAndCompletionHandler  completion handler:    void local fn MyCompletionHandler( ref as MTLLibraryRef, mtlFunction as MTLFunctionRef, err as ^ErrorRef, userData as ptr )      // ...    end fn*/toolbox MTLLibraryNewFunctionWithDescriptorAndCompletionHandler( MTLLibraryRef ref, MTLFunctionDescriptorRef descriptor, ptr completionHandler, ptr userData ) // macOS 11.0+#endif // 110000// Create intersection function objects#if _MACOSMAXALLOWED >= 110000toolbox fn MTLLibraryNewIntersectionFunctionWithDescriptor( MTLLibraryRef ref, MTLFunctionDescriptorRef descriptor, ErrorRef *err ) = MTLFunctionRef // macOS 11.0+/*  MTLLibraryNewFunctionWithDescriptorAndCompletionHandler  completion handler:    void local fn MyCompletionHandler( ref as MTLLibraryRef, mtlFunction as MTLFunctionRef, err as ^ErrorRef, userData as ptr )      // ...    end fn*/toolbox MTLLibraryNewIntersectionFunctionWithDescriptorAndCompletionHandler( MTLLibraryRef ref, MTLIntersectionFunctionDescriptorRef descriptor, ptr completionHandler, ptr userData ) // macOS 11.0+#endif // 110000// Identifytoolbox fn MTLLibraryDevice( MTLLibraryRef ref ) = MTLDeviceReftoolbox fn MTLLibraryLabel( MTLLibraryRef ref ) = CFStringReftoolbox MTLLibrarySetLabel( MTLLibraryRef ref, CFStringRef label )/*  MTLCompileOptions  Inherits from: Object*/// Configure compiler options#if _MACOSMAXALLOWED >= 150000toolbox fn MTLCompileOptionsEnableLogging( MTLCompileOptionsRef ref ) = BOOL                                                // macOS 15.0+toolbox MTLCompileOptionsSetEnableLogging( MTLCompileOptionsRef ref, BOOL flag )                                            // macOS 15.0+toolbox fn MTLCompileOptionsMathMode( MTLCompileOptionsRef ref ) = MTLMathMode                                              // macOS 15.0+toolbox MTLCompileOptionsSetMathMode( MTLCompileOptionsRef ref, MTLMathMode mathMode )                                      // macOS 15.0+toolbox fn MTLCompileOptionsMathFloatingPointFunctions( MTLCompileOptionsRef ref ) = MTLMathFloatingPointFunctions          // macOS 15.0+#endif // 150000#if _MACOSMAXALLOWED >= 110000toolbox fn MTLCompileOptionsPreserveInvariance( MTLCompileOptionsRef ref ) = BOOL     // macOS 11.0+toolbox MTLCompileOptionsSetPreserveInvariance( MTLCompileOptionsRef ref, BOOL flag ) // macOS 11.0+#endif // 110000toolbox fn MTLCompileOptionsLanguageVersion( MTLCompileOptionsRef ref ) = MTLLanguageVersiontoolbox MTLCompileOptionsSetLanguageVersion( MTLCompileOptionsRef ref, MTLLanguageVersion version )toolbox fn MTLCompileOptionsPreprocessorMacros( MTLCompileOptionsRef ref ) = CFDictionaryReftoolbox MTLCompileOptionsSetPreprocessorMacros( MTLCompileOptionsRef ref, CFDictionaryRef macros )#if _MACOSMAXALLOWED >= 130000toolbox fn MTLCompileOptionsOptimizationLevel( MTLCompileOptionsRef ref ) = MTLLibraryOptimizationLevel      // macOS 13.0+toolbox MTLCompileOptionsSetOptimizationLevel( MTLCompileOptionsRef ref, MTLLibraryOptimizationLevel level ) // macOS 13.0+#endif // 130000#if _MACOSMAXALLOWED >= 110000toolbox fn MTLCompileOptionsLibraries( MTLCompileOptionsRef ref ) = CFArrayRef          // macOS 11.0+toolbox MTLCompileOptionsSetLibraries( MTLCompileOptionsRef ref, CFArrayRef libraries ) // macOS 11.0+#endif // 110000// Configure library output options#if _MACOSMAXALLOWED >= 110000toolbox fn MTLCompileOptionsLibraryType( MTLCompileOptionsRef ref ) = MTLLibraryType     // macOS 11.0+toolbox MTLCompileOptionsSetLibraryType( MTLCompileOptionsRef ref, MTLLibraryType type ) // macOS 11.0+toolbox fn MTLCompileOptionsInstallName( MTLCompileOptionsRef ref ) = CFStringRef        // macOS 11.0+toolbox MTLCompileOptionsSetInstallName( MTLCompileOptionsRef ref, CFStringRef  name )   // macOS 11.0+#endif // 110000// Instance properties#if _MACOSMAXALLOWED >= 130300toolbox fn MTLCompileOptionsAllowReferencingUndefinedSympbols( MTLCompileOptionsRef ref ) = BOOL                       // macOS 13.3+toolbox MTLCompileOptionsSetAllowReferencingUndefinedSympbols( MTLCompileOptionsRef ref, BOOL flag )                   // macOS 13.3+toolbox fn MTLCompileOptionsCompileSymbolVisibility( MTLCompileOptionsRef ref ) = MTLCompileSymbolVisibility           // macOS 13.3+toolbox MTLCompileOptionsSetCompileSymbolVisibility( MTLCompileOptionsRef ref, MTLCompileSymbolVisibility visibility ) // macOS 13.3+toolbox fn MTLCompileOptionsMaxTotalThreadsPerThreadgroup( MTLCompileOptionsRef ref ) = NSUInteger                     // macOS 13.3+toolbox MTLCompileOptionsSetMaxTotalThreadsPerThreadgroup( MTLCompileOptionsRef ref, NSUInteger max )                  // macOS 13.3+#endif // 130300