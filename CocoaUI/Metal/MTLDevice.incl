/*  MTLDevice - https://developer.apple.com/documentation/metal/mtldevice?language=objc  Bernie Wylde 20180606  Framework: Metal  Protocol*/// gpu family#if _MACOSMAXALLOWED >= 101500#if ndef _DEFINEDINCOCOA#define MTLGPUFamily as NSUInteger // macOS 10.15+#endifsystem MTLGPUFamily MTLGPUFamilyApple1  // = 1001 // macOS 10.15+system MTLGPUFamily MTLGPUFamilyApple2  // = 1002 // macOS 10.15+system MTLGPUFamily MTLGPUFamilyApple3  // = 1003 // macOS 10.15+system MTLGPUFamily MTLGPUFamilyApple4  // = 1004 // macOS 10.15+system MTLGPUFamily MTLGPUFamilyApple5  // = 1005 // macOS 10.15+system MTLGPUFamily MTLGPUFamilyApple6  // = 1006 // macOS 10.15+system MTLGPUFamily MTLGPUFamilyApple7  // = 1007 // macOS 10.15+system MTLGPUFamily MTLGPUFamilyApple8  // = 1008 // macOS 10.15+system MTLGPUFamily MTLGPUFamilyApple9  // = 1009 // macOS 10.15+system MTLGPUFamily MTLGPUFamilyMac2    // = 2002 // macOS 10.15+system MTLGPUFamily MTLGPUFamilyCommon1 // = 3001 // macOS 10.15+system MTLGPUFamily MTLGPUFamilyCommon2 // = 3002 // macOS 10.15+system MTLGPUFamily MTLGPUFamilyCommon3 // = 3003 // macOS 10.15+#if _MACOSMAXALLOWED >= 130000system MTLGPUFamily MTLGPUFamilyMetal3  // = 5001 // macOS 13.0+#endif // 130000#endif // 101500// read write texture tier#if ndef _DEFINEDINCOCOA#define MTLReadWriteTextureTier as NSUInteger#endifsystem MTLReadWriteTextureTier MTLReadWriteTextureTierNone // = 0system MTLReadWriteTextureTier MTLReadWriteTextureTier1    // = 1system MTLReadWriteTextureTier MTLReadWriteTextureTier2    // = 2// counter sampling point#if ndef _DEFINEDINCOCOA#define MTLCounterSamplingPoint as NSUInteger#endifsystem MTLCounterSamplingPoint MTLCounterSamplingPointAtStageBoundarysystem MTLCounterSamplingPoint MTLCounterSamplingPointAtDrawBoundarysystem MTLCounterSamplingPoint MTLCounterSamplingPointAtDispatchBoundarysystem MTLCounterSamplingPoint MTLCounterSamplingPointAtTileDispatchBoundarysystem MTLCounterSamplingPoint MTLCounterSamplingPointAtBlitBoundary// location#if _MACOSMAXALLOWED >= 101500#if ndef _DEFINEDINCOCOA#define MTLDeviceLocation as NSUInteger               // macOS 10.15+#endifsystem MTLDeviceLocation MTLDeviceLocationBuiltIn     // = 0 // macOS 10.15+system MTLDeviceLocation MTLDeviceLocationSlot        // = 1 // macOS 10.15+system MTLDeviceLocation MTLDeviceLocationExternal    // = 2 // macOS 10.15+system MTLDeviceLocation MTLDeviceLocationUnspecified // = NSUIntegerMax // macOS 10.15+#endif // 101500// timestamp#if _MACOSMAXALLOWED >= 110000#if ndef _DEFINEDINCOCOA#define MTLTimestamp as UInt64 // macOS 11.0+#endif // _DEFINEDINCOCOA#endif // 110000// compression method#if _MACOSMAXALLOWED >= 130000#if ndef _DEFINEDINCOCOA#define MTLIOCompressionMethod as NSInteger             // macOS 13.0+#endifsystem MTLDeviceLocation MTLIOCompressionMethodZlib     // = 0 // macOS 13.0+system MTLDeviceLocation MTLIOCompressionMethodLZFSE    // = 1 // macOS 13.0+system MTLDeviceLocation MTLIOCompressionMethodLZ4      // = 2 // macOS 13.0+system MTLDeviceLocation MTLIOCompressionMethodLZMA     // = 3 // macOS 13.0+system MTLDeviceLocation MTLIOCompressionMethodLZBitmap // = 4 // macOS 13.0+#endif // 130000// pipeline options#if ndef _DEFINEDINCOCOA#define MTLPipelineOption as NSUInteger#endifsystem MTLPipelineOption MTLPipelineOptionNone                    // = 0system MTLPipelineOption MTLPipelineOptionBindingInfo             // = 1 << 0system MTLPipelineOption MTLPipelineOptionBufferTypeInfo          // = 1 << 1#if _MACOSMAXALLOWED >= 110000system MTLPipelineOption MTLPipelineOptionFailOnBinaryArchiveMiss // = 1 << 2 // macOS 11.0+#endif // 110000// size and align#if ndef _DEFINEDINCOCOAbegin record MTLSizeAndAlignNSUInteger sizeNSUInteger alignend record#endif// sparse page size#if _MACOSMAXALLOWED >= 130000#if ndef _DEFINEDINCOCOA#define MTLSparsePageSize as NSInteger        // macOS 13.0+#endifsystem MTLSparsePageSize MTLSparsePageSize16  // = 101, // macOS 13.0+system MTLSparsePageSize MTLSparsePageSize64  // = 102, // macOS 13.0+system MTLSparsePageSize MTLSparsePageSize256 // = 103, // macOS 13.0+#endif // 130000// sparse texture region alignment mode#if _MACOSMAXALLOWED >= 110000#if ndef _DEFINEDINCOCOA#define MTLSparseTextureRegionAlignmentMode as NSUInteger  // macOS 11.0+#endifsystem MTLSparseTextureRegionAlignmentMode MTLSparseTextureRegionAlignmentModeOutward // = 0, // macOS 11.0+system MTLSparseTextureRegionAlignmentMode MTLSparseTextureRegionAlignmentModeInward  // = 1, // macOS 11.0+#endif // 110000// acceleration structer sizes#if _MACOSMAXALLOWED >= 110000#if ndef _DEFINEDINCOCOAbegin record MTLAccelerationStructureSizes // macOS 11.0+NSUInteger accelerationStructureSizeNSUInteger buildScratchBufferSizeNSUInteger refitScratchBufferSizeend record#endif // _DEFINEDINCOCOA#endif // 110000// argument buffers tier#if ndef _DEFINEDINCOCOA#define MTLArgumentBuffersTier as NSUInteger  // macOS 11.0+#endifsystem MTLArgumentBuffersTier MTLArgumentBuffersTier1 // = 0,system MTLArgumentBuffersTier MTLArgumentBuffersTier2 // = 1,/*  Device inspection*/// Feature support#if _MACOSMAXALLOWED >= 101500toolbox fn MTLDeviceSupportsFamily( MTLDeviceRef ref, MTLGPUFamily family ) = BOOL // macOS 10.15+#endif // 101500// Compute Supporttoolbox fn MTLDeviceMaxThreadgroupMemoryLength( MTLDeviceRef ref ) = NSUIntegertoolbox fn MTLDeviceMaxThreadsPerThreadgroup( MTLDeviceRef ref ) = MTLSize// Render support#if _MACOSMAXALLOWED >= 110000toolbox fn MTLDeviceSupportsRaytracing( MTLDeviceRef ref ) = BOOL                   // macOS 11.0+toolbox fn MTLDeviceSupportsPrimitiveMotionBlur( MTLDeviceRef ref ) = BOOL          // macOS 11.0+#endif // 110000#if _MACOSMAXALLOWED >= 120000toolbox fn MTLDeviceSupportsRaytracingFromRender( MTLDeviceRef ref ) = BOOL         // macOS 12.0+#endif // 120000#if _MACOSMAXALLOWED >= 110000toolbox fn MTLDeviceSupports32BitMSAA( MTLDeviceRef ref ) = BOOL                    // macOS 11.0+toolbox fn MTLDeviceSupportsPullModelInterpolation( MTLDeviceRef ref ) = BOOL       // macOS 11.0+#endif // 110000#if _MACOSMAXALLOWED >= 101500toolbox fn MTLDeviceSupportsShaderBarycentricCoordinates( MTLDeviceRef ref ) = BOOL // macOS 10.15+#endif // 101500#if _MACOSMAXALLOWED >= 101504toolbox fn MTLDeviceSupportsVertexAmplificationCount( MTLDeviceRef ref, NSUInteger count ) = BOOL     // macOS 10.15.4+#endif // 101504toolbox fn MTLDeviceAreProgrammableSamplePositionsSupported( MTLDeviceRef ref ) = BOOLtoolbox fn MTLDeviceAreRasterOrderGroupsSupported( MTLDeviceRef ref ) = BOOL// Texture and sampler support#if _MACOSMAXALLOWED >= 110000toolbox fn MTLDeviceSupports32BitFloatFiltering( MTLDeviceRef ref ) = BOOL           // macOS 11.0+toolbox fn MTLDeviceSupportsBCTextureCompression( MTLDeviceRef ref ) = BOOL          // macOS 11.0+toolbox fn MTLDeviceIsDepth24Stencil8PixelFormatSupported( MTLDeviceRef ref ) = BOOL // macOS 11.0+toolbox fn MTLDeviceSupportsQueryTextureLOD( MTLDeviceRef ref ) = BOOL               // macOS 11.0+#endif // 110000toolbox fn MTLDeviceReadWriteTextureSupport( MTLDeviceRef ref ) = MTLReadWriteTextureTier// Function pointer support#if _MACOSMAXALLOWED >= 110000toolbox fn MTLDeviceSupportsFunctionPointers( MTLDeviceRef ref ) = BOOL           // macOS 11.0+#endif // 110000#if _MACOSMAXALLOWED >= 120000toolbox fn MTLDeviceSupportsFunctionPointersFromRender( MTLDeviceRef ref ) = BOOL // macOS 12.0+#endif // 120000// GPU device's memorytoolbox fn MTLDeviceCurrentAllocatedSize( MTLDeviceRef ref ) = NSUIntegertoolbox fn MTLDeviceRecommendedMaxWorkingSetSize( MTLDeviceRef ref ) = UInt64#if _MACOSMAXALLOWED >= 101500toolbox fn MTLDeviceHasUnifiedMemory( MTLDeviceRef ref ) = BOOL // macOS 10.15+toolbox fn MTLDeviceMaxTransferRate( MTLDeviceRef ref ) = UInt64 // macOS 10.15+#endif // 101500// GPU device's counters#if _MACOSMAXALLOWED >= 101500toolbox fn MTLDeviceCounterSets( MTLDeviceRef ref ) = CFArrayRef // macOS 10.15+#endif // 101500#if _MACOSMAXALLOWED >= 110000toolbox fn MTLDeviceSupportsCounterSampling( MTLDeviceRef ref, MTLCounterSamplingPoint sampling ) = BOOL // macOS 11.0+#endif // 110000#if _MACOSMAXALLOWED >= 101500toolbox fn MTLDeviceNewCounterSampleBufferWithDescriptor( MTLDeviceRef ref, MTLCounterSampleBufferDescriptorRef buffer, ErrorRef *err ) = MTLCounterSampleBufferRef // macOS 10.15+#endif // 101500// Sample GPU and CPU timestamps simultaneously#if _MACOSMAXALLOWED >= 110000toolbox MTLDeviceSampleTimestamps( MTLDeviceRef ref, MTLTimestamp *cpuTimestamp, MTLTimestamp *gpuTimestamp ) // macOS 11.0+#endif // 110000// Identify GPU devicetoolbox fn MTLDeviceName( MTLDeviceRef ref ) = CFStringRef#if _MACOSMAXALLOWED >= 140000toolbox fn MTLDeviceArchitecture( MTLDeviceRef ref ) = MTLArchitectureRef // macOS 14.0+#endif // 140000toolbox fn MTLDeviceRegistryID( MTLDeviceRef ref ) = UInt64#if _MACOSMAXALLOWED >= 101500toolbox fn mtlDeviceLocation( MTLDeviceRef ref ) = MTLDeviceLocation // macOS 10.15+ // lowercase 'mtl' to avoid clash with typetoolbox fn MTLDeviceLocationNumber( MTLDeviceRef ref ) = NSUInteger  // macOS 10.15+#endif // 101500toolbox fn MTLDeviceIsLowPower( MTLDeviceRef ref ) = BOOLtoolbox fn MTLDeviceIsRemovable( MTLDeviceRef ref ) = BOOLtoolbox fn MTLDeviceIsHeadless( MTLDeviceRef ref ) = BOOL#if _MACOSMAXALLOWED >= 101500toolbox fn MTLDevicePeerGroupID( MTLDeviceRef ref ) = UInt64 // macOS 10.15+toolbox fn MTLDevicePeerCount( MTLDeviceRef ref ) = UInt32   // macOS 10.15+toolbox fn MTLDevicePeerIndex( MTLDeviceRef ref ) = UInt32   // macOS 10.15+#endif // 101500/*  Work submission*/// Command queuestoolbox fn MTLDeviceNewCommandQueue( MTLDeviceRef ref ) = MTLCommandQueueReftoolbox fn MTLDeviceNewCommandQueueWithMaxCommandBufferCount( MTLDeviceRef ref, NSUInteger count ) = MTLCommandQueueRef// Residency sets#if _MACOSMAXALLOWED >= 150000toolbox fn MTLDeviceNewResidencySetWithDescriptor( MTLDeviceRef ref, MTLResidencySetDescriptorRef descriptor, ErrorRef *err ) = MTLResidencySetRef // macOS 15.0+#endif // 150000// I/O command queues#if _MACOSMAXALLOWED >= 130000toolbox fn MTLDeviceNewIOCommandQueueWithDescriptor( MTLDeviceRef ref, MTLIOCommandQueueDescriptorRef descriptor, ErrorRef *err ) = MTLIOCommandQueueRef // macOS 13.0+#endif // 130000// I/O file handles#if _MACOSMAXALLOWED >= 140000toolbox fn MTLDeviceNewIOFileHandleWithURL( MTLDeviceRef ref, CFURLRef url, ErrorRef *err ) = MTLIOFileHandleRef // macOS 14.0+toolbox fn MTLDeviceNewIOFileHandleWithURLAndCompressionMethod( MTLDeviceRef ref, CFURLRef url, MTLIOCompressionMethod method, ErrorRef *err ) = MTLIOFileHandleRef // macOS 14.0+#endif // 140000// Indirect command buffers#if _MACOSMAXALLOWED >= 101400toolbox fn MTLDeviceNewIndirectCommandBufferWithDescriptor( MTLDeviceRef ref, MTLIndirectCommandBufferDescriptorRef descriptor, NSUInteger maxCommandCount, MTLResourceOptions options ) = MTLIndirectCommandBufferRef // macOS 10.14+#endif // 101400/*  Pipeline state creation*/// Create with vertex shaderstoolbox fn MTLDeviceNewRenderPipelineStateWithDescriptor( MTLDeviceRef ref, MTLRenderPipelineDescriptorRef descRef, ErrorRef *err ) = MTLRenderPipelineStateRef/*  MTLDeviceNewRenderPipelineStateWithCompletionHandler  completion handler:    void local fn MyCompletionHandler( ref as MTLDeviceRef, pipelineState as MTLRenderPipelineStateRef, err as ErrorRef, userData as ptr )      // ...    end fn*/toolbox MTLDeviceNewRenderPipelineStateWithCompletionHandler( MTLDeviceRef ref, MTLRenderPipelineDescriptorRef descRef, ptr handler, ptr userData )toolbox fn MTLDeviceNewRenderPipelineStateWithOptions( MTLDeviceRef ref, MTLRenderPipelineDescriptorRef descRef, MTLPipelineOption options, MTLAutoreleasedRenderPipelineReflectionRef reflection, ErrorRef *err ) = MTLRenderPipelineStateRef/*  MTLDeviceNewRenderPipelineStateWithOptionsAndCompletionHandler  completion handler:    void local fn MyCompletionHandler( ref as MTLDeviceRef, pipelineState as MTLRenderPipelineStateRef, reflection as MTLRenderPipelineReflectionRef, err as ErrorRef, userData as ptr )      // ...    end fn*/toolbox MTLDeviceNewRenderPipelineStateWithOptionsAndCompletionHandler( MTLDeviceRef ref, MTLRenderPipelineDescriptorRef descRef, MTLPipelineOption options, ptr handler, ptr userData )// Create with mesh shaders#if _MACOSMAXALLOWED >= 130000toolbox fn MTLDeviceNewRenderPipelineStateWithMeshDescriptor( MTLDeviceRef ref, MTLMeshRenderPipelineDescriptorRef descRef, MTLPipelineOption options, MTLAutoreleasedRenderPipelineReflectionRef reflection, ErrorRef *err ) = MTLRenderPipelineStateRef // macOS 13.0+/*  MTLDeviceNewRenderPipelineStateWithOptionsAndCompletionHandler  completion handler:    void local fn MyCompletionHandler( ref as MTLDeviceRef, pipelineState as MTLRenderPipelineStateRef, reflection as MTLRenderPipelineReflectionRef, err as ErrorRef, userData as ptr )      // ...    end fn*/toolbox MTLDeviceNewRenderPipelineStateWithMeshDescriptorAndCompletionHandler( MTLDeviceRef ref, MTLMeshRenderPipelineDescriptorRef descRef, MTLPipelineOption options, ptr handler, ptr userData ) // macOS 13.0+// Create tile render pipeline statestoolbox fn MTLDeviceNewRenderPipelineStateWithTileDescriptor( MTLDeviceRef ref, MTLTileRenderPipelineDescriptorRef descRef, MTLPipelineOption options, MTLAutoreleasedRenderPipelineReflectionRef reflection, ErrorRef *err ) = MTLRenderPipelineStateRef // macOS 13.0+/*  MTLDeviceNewRenderPipelineStateWithTileDescriptorAndCompletionHandler  completion handler:    void local fn MyCompletionHandler( ref as MTLDeviceRef, pipelineState as MTLRenderPipelineStateRef, reflection as MTLRenderPipelineReflectionRef, err as ErrorRef, userData as ptr )      // ...    end fn*/toolbox MTLDeviceNewRenderPipelineStateWithTileDescriptorAndCompletionHandler( MTLDeviceRef ref, MTLTileRenderPipelineDescriptorRef descRef, MTLPipelineOption options, ptr handler, ptr userData ) // macOS 13.0+#endif // 130000// Create compute pipeline statestoolbox fn MTLDeviceNewComputePipelineStateWithDescriptor( MTLDeviceRef ref, MTLComputePipelineDescriptorRef descriptor, MTLPipelineOption options, MTLAutoreleasedComputePipelineReflectionRef reflection, ErrorRef *err ) = MTLComputePipelineStateRef/*  MTLDeviceNewComputePipelineStateWithCompletionHandler  completion handler:    void local fn MyCompletionHandler( ref as MTLDeviceRef, pipelineState as MTLComputePipelineStateRef, reflection as MTLComputePipelineReflectionRef, err as ErrorRef, userData as ptr )      // ...    end fn*/toolbox MTLDeviceNewComputePipelineStateWithCompletionHandler( MTLDeviceRef ref, MTLComputePipelineDescriptorRef descriptor, MTLPipelineOption options, ptr handler, ptr userData )toolbox fn MTLDeviceNewComputePipelineStateWithFunction( MTLDeviceRef ref, MTLFunctionRef computeFunction, ErrorRef *err ) = MTLComputePipelineStateRef/*  MTLDeviceNewComputePipelineStateWithFunctionAndCompletionHandler  comletion handler:    void local fn MyCompletionHandler( ref as MTLDeviceRef, pipelineState as MTLComputePipelineStateRef, err as ErrorRef, userData as ptr )      // ...    end fn*/toolbox MTLDeviceNewComputePipelineStateWithFunctionAndCompletionHandler( MTLDeviceRef ref, MTLFunctionRef computeFunction, ptr handler, ptr userData )toolbox fn MTLDeviceNewComputePipelineStateWithFunctionAndOptions( MTLDeviceRef ref, MTLFunctionRef computeFunction, MTLPipelineOption options, MTLAutoreleasedComputePipelineReflectionRef reflection, ErrorRef *err ) = MTLComputePipelineStateRef/*  MTLDeviceNewComputePipelineStateWithFunctionOptionsAndCompletionHandler  comletion handler:    void local fn MyCompletionHandler( ref as MTLDeviceRef, pipelineState as MTLComputePipelineStateRef, reflection as MTLComputePipelineReflection, err as ErrorRef, userData as ptr )      // ...    end fn*/toolbox MTLDeviceNewComputePipelineStateWithFunctionOptionsAndCompletionHandler( MTLDeviceRef ref, MTLFunctionRef computeFunction, MTLPipelineOption options, ptr handler, ptr userData )// Create depth and stencil statestoolbox fn MTLDeviceNewDepthStencilStateWithDescriptor( MTLDeviceRef ref, MTLDepthStencilDescriptorRef descriptor ) = MTLDepthStencilStateRef/*  Resource creation*/// Heapstoolbox fn MTLDeviceNewHeapWithDescriptor( MTLDeviceRef ref, MTLHeapDescriptorRef descriptor ) = MTLHeapReftoolbox fn MTLDeviceHeapBufferSizeAndAlignWithLength( MTLDeviceRef ref, NSUInteger length, MTLResourceOptions options ) = MTLSizeAndAligntoolbox fn MTLDeviceHeapTextureSizeAndAlignDescriptor( MTLDeviceRef ref, MTLTextureDescriptorRef descriptor ) = MTLSizeAndAlign#if _MACOSMAXALLOWED >= 130000toolbox fn MTLDeviceHeapAccelerationStructureSizeAndAlignWithSize( MTLDeviceRef ref, NSUInteger size ) = MTLSizeAndAlign // macOS 13.0+toolbox fn MTLDeviceHeapAccelerationStructureSizeAndAlignWithDescriptor( MTLDeviceRef ref, MTLAccelerationStructureDescriptorRef descriptor ) = MTLSizeAndAlign // macOS 13.0+#endif // 130000// Buffers#if _MACOSMAXALLOWED >= 101400toolbox fn MTLDeviceMaxBufferLength( MTLDeviceRef ref ) = NSUInteger // macOS 10.14+#endif // 101400toolbox fn MTLDeviceNewBufferWithLength( MTLDeviceRef ref, NSUInteger length, MTLResourceOptions options ) = MTLBufferReftoolbox fn MTLDeviceNewBufferWithBytes( MTLDeviceRef ref, ptr bytes, NSUInteger length, MTLResourceOptions options ) = MTLBufferRef/*  MTLDeviceNewBufferWithBytesNoCopy  deallocator:    void local fn MyDeallocator( ref as MTLDeviceRef, bytes as ptr, length as NSUInteger, userData as ptr )      // ...    end fn*/toolbox fn MTLDeviceNewBufferWithBytesNoCopy( MTLDeviceRef ref, ptr bytes, NSUInteger length, MTLResourceOptions options, ptr deallocator, ptr userData ) = MTLBufferRef// Texturestoolbox fn MTLDeviceNewTextureWithDescriptor( MTLDeviceRef ref, MTLTextureDescriptorRef descriptor ) = MTLTextureRef//toolbox fn MTLDeviceNewTextureWithIOSurface( MTLDeviceRef ref, MTLTextureDescriptorRef descriptor, IOSurfaceRef ioSurface, NSUInteger plane ) = MTLTextureRef#if _MACOSMAXALLOWED >= 101400toolbox fn MTLDeviceNewSharedTextureWithDescriptor( MTLDeviceRef ref, MTLTextureDescriptorRef descriptor ) = MTLTextureRef // macOS 10.14+toolbox fn MTLDeviceNewSharedTextureWithHandle( MTLDeviceRef ref, MTLSharedTextureHandleRef handle ) = MTLTextureRef       // macOS 10.14+#endif // 101400toolbox fn MTLDeviceMinimumLinearTextureAlignment( MTLDeviceRef ref, MTLPixelFormat format ) = NSUInteger#if _MACOSMAXALLOWED >= 101400toolbox fn MTLDeviceMinimumTextureBufferAlignment( MTLDeviceRef ref, MTLPixelFormat format ) = NSUInteger // macOS 10.14+#endif // 101400// Samplerstoolbox fn MTLDeviceSupportsTextureSampleCount( MTLDeviceRef ref, NSUInteger count ) = BOOLtoolbox fn MTLDeviceNewSamplerStateWithDescriptor( MTLDeviceRef ref, MTLSamplerDescriptorRef descriptor ) = MTLSamplerStateReftoolbox MTLDeviceGetDefaultSamplePositions( MTLDeviceRef ref, MTLSamplePosition *positions, NSUInteger count )// Sparse textures#if _MACOSMAXALLOWED >= 130000toolbox fn MTLDeviceSparseTileSizeWithTextureTypeForSparsePageSize( MTLDeviceRef ref, MTLTextureType textureType, MTLPixelFormat pixelFormat, NSUInteger sampleCount, MTLSparsePageSize sparsePageSize ) = MTLSize // macOS 13.0+#endif // 130000#if _MACOSMAXALLOWED >= 110000toolbox fn MTLDeviceSparseTileSizeWithTextureType( MTLDeviceRef ref, MTLTextureType textureType, MTLPixelFormat pixelFormat, NSUInteger sampleCount ) = MTLSize // macOS 11.0+#endif // 110000#if _MACOSMAXALLOWED >= 130000toolbox fn MTLDeviceSparseTileSizeInBytesForSparsePageSize( MTLDeviceRef ref, MTLSparsePageSize sparsePageSize ) = MTLSize // macOS 13.0+#endif // 130000#if _MACOSMAXALLOWED >= 110000toolbox fn MTLDeviceSparseTileSizeInBytes( MTLDeviceRef ref ) = NSUInteger // macOS 11.0+toolbox MTLDeviceConvertSparsePixelRegionsToTileRegions( MTLDeviceRef ref, MTLRegion *pixelRegions, MTLRegion *tileRegions, MTLSize tileSize, MTLSparseTextureRegionAlignmentMode alignmentMode, NSUInteger numRegions ) // macOS 11.0+toolbox MTLDeviceConvertSparseTileRegionsToPixelRegions( MTLDeviceRef ref, MTLRegion *tileRegions, MTLRegion *pixelRegions, MTLSize tileSize, MTLSparseTextureRegionAlignmentMode alignmentMode, NSUInteger numRegions ) // macOS 11.0+#endif // 110000// Acceleration structures#if _MACOSMAXALLOWED >= 110000toolbox fn MTLDeviceNewAccelerationStructureWithDescriptor( MTLDeviceRef ref, MTLAccelerationStructureDescriptorRef descriptor ) = MTLAccelerationStructureRef // macOS 11.0+toolbox fn MTLDeviceNewAccelerationStructureWithSize( MTLDeviceRef ref, NSUInteger size ) = MTLAccelerationStructureRef // macOS 11.0+toolbox fn MTLDevicAccelerationStructureSizesWithDescriptor( MTLDeviceRef ref, MTLAccelerationStructureDescriptorRef descriptor ) = MTLAccelerationStructureSizes // macOS 11.0+#endif // 110000// Argument buffer encoderstoolbox fn MTLDeviceArgumentBuffersSupport( MTLDeviceRef ref ) = MTLArgumentBuffersTier#if _MACOSMAXALLOWED >= 101400toolbox fn MTLDeviceMaxArgumentBufferSamplerCount( MTLDeviceRef ref ) = NSUInteger // macOS 10.14+#endif // 101400toolbox fn MTLDeviceNewArgumentEncoderWithArguments( MTLDeviceRef ref, CFArrayRef arguments ) = MTLArgumentEncoderRef#if _MACOSMAXALLOWED >= 130000toolbox fn MTLDeviceNewArgumentEncoderWithBufferBinding( MTLDeviceRef ref, MTLBufferBindingRef bufferBinding ) = MTLArgumentEncoderRef// macOS 13.0+#endif // 130000// Fences and eventstoolbox fn MTLDeviceNewFence( MTLDeviceRef ref ) = MTLFenceRef#if _MACOSMAXALLOWED >= 101400toolbox fn MTLDeviceNewEvent( MTLDeviceRef ref ) = MTLEventRef // macOS 10.14+toolbox fn MTLDeviceNewSharedEvent( MTLDeviceRef ref ) = MTLSharedEventRef // macOS 10.14+toolbox fn MTLDeviceNewSharedEventWithHandle( MTLDeviceRef ref, MTLSharedEventHandleRef handle ) = MTLSharedEventRef // macOS 10.14+#endif // 101400// Rasterization rate maps#if _MACOSMAXALLOWED >= 101504toolbox fn MTLDeviceSupportsRasterizationRateMapWithLayerCount( MTLDeviceRef ref, NSUInteger count ) = BOOL // macOS 10.15.4+toolbox fn MTLDeviceNewRasterizationRateMapWithDescriptor( MTLDeviceRef ref, MTLRasterizationRateMapDescriptorRef descriptor ) = MTLRasterizationRateMapRef // macOS 10.15.4+#endif // 101504/*  Shader library and archive creation*/// Create shader librariestoolbox fn MTLDeviceNewDefaultLibrary( MTLDeviceRef ref ) = MTLLibraryReftoolbox fn MTLDeviceNewDefaultLibraryWithBundle( MTLDeviceRef ref, BundleRef bundle, ErrorRef *err ) = MTLLibraryReftoolbox fn MTLDeviceNewLibraryWithURL( MTLDeviceRef ref, CFURLRef url, ErrorRef *err ) = MTLLibraryReftoolbox fn MTLDeviceNewLibraryWithSource( MTLDeviceRef ref, CFStringRef source, MTLCompileOptionsRef options, ErrorRef *err ) = MTLLibraryRef/*  MTLDeviceNewLibraryWithSourceAndCompletionHandler  completion handler:    void local fn MyCompletionHandler( ref as MTLDeviceRef, library as MTLLibraryRef, err as ErrorRef, userData as ptr )      // ...    end fn*/toolbox MTLDeviceNewLibraryWithSourceAndCompletionHandler( MTLDeviceRef ref, CFStringRef source, MTLCompileOptionsRef options, ptr completionHandler, ptr userData )#if _MACOSMAXALLOWED >= 120000toolbox fn MTLDeviceNewLibraryWithStitchedDescriptor( MTLDeviceRef ref, MTLStitchedLibraryDescriptorRef descriptor , ErrorRef *err ) = MTLLibraryRef // macOS 12.0+/*  MTLDeviceNewLibraryWithStitchedDescriptorAndCompletionHandler  completion handler:    void local fn MyCompletionHandler( ref as MTLDeviceRef, library as MTLLibraryRef, err as ErrorRef, userData as ptr )      // ...    end fn*/toolbox MTLDeviceNewLibraryWithStitchedDescriptorAndCompletionHandler( MTLDeviceRef ref, MTLStitchedLibraryDescriptorRef descriptor, ptr completionHandler, ptr userData ) // macOS 12.0+#endif // 120000toolbox fn MTLDeviceNewLibraryWithData( MTLDeviceRef ref, dispatch_data_t dta, ErrorRef *err ) = MTLLibraryRef// Create dynamic shader libraries#if _MACOSMAXALLOWED >= 110000toolbox fn MTLDeviceSupportsDynamicLibraries( MTLDeviceRef ref ) = BOOL // macOS 11.0+#endif // 110000#if _MACOSMAXALLOWED >= 120000toolbox fn MTLDeviceSupportsRenderDynamicLibraries( MTLDeviceRef ref ) = BOOL // macOS 12.0+#endif // 120000#if _MACOSMAXALLOWED >= 110000toolbox fn MTLDeviceNewDynamicLibrary( MTLDeviceRef ref, MTLLibraryRef lib, ErrorRef *err ) = MTLDynamicLibraryRef   // macOS 11.0+toolbox fn MTLDeviceNewDynamicLibraryWithURL( MTLDeviceRef ref, CFURLRef url, ErrorRef *err ) = MTLDynamicLibraryRef // macOS 11.0+#endif // 110000// Create binary shader archives#if _MACOSMAXALLOWED >= 110000toolbox fn MTLDeviceNewBinaryArchiveWithDescriptor( MTLDeviceRef ref, MTLBinaryArchiveDescriptorRef descriptor, ErrorRef *err ) = MTLBinaryArchiveRef // macOS 11.0+#endif // 110000// Instance properties#if _MACOSMAXALLOWED >= 130300toolbox fn MTLDeviceMaximumConcurrentCompilationTaskCount( MTLDeviceRef ref ) = NSUInteger // macOS 13.3+toolbox fn MTLDeviceShouldMaximizeConcurrentCompilation( MTLDeviceRef ref ) = BOOL         // macOS 13.3+#endif // 130300// Instance methods#if _MACOSMAXALLOWED >= 150000toolbox fn MTLDeviceNewCommandQueueWithDescriptor( MTLDeviceRef ref, MTLCommandQueueDescriptorRef descriptor ) = MTLCommandQueueRef        // macOS 15.0+toolbox fn MTLDeviceNewLogStateWithDescriptor( MTLDeviceRef ref, MTLLogStateDescriptorRef descriptor, ErrorRef *err ) = MTLCommandQueueRef // macOS 15.0+#endif // 150000// Functionstoolbox fn MTLCreateSystemDefaultDevice = MTLDeviceReftoolbox fn MTLCopyAllDevices = CFArrayRef // returned value must be released (CFRelease)/*  MTLCopyAllDevicesWithObserver  void local fn MyHandler( device as MTLDeviceRef, notifyName as CFStringRef, userData as ptr )    // ...  end fn*/toolbox fn mtlCopyAllDevicesWithObserver( ObjectRef *observer, ptr handler, ptr userData ) = CFArrayRef // returned value must be releasedtoolbox RemoveDeviceObserver( ObjectRef observer )//toolbox fn CGDirectDisplayCopyCurrentMetalDevice( CGDirectDisplayID displayID) = MTLDeviceRef