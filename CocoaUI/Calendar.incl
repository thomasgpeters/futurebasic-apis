/*  Calendar  Bernie Wylde 20180305  Framework: Foundation  Inherits from: Object  NSCalendar - https://developer.apple.com/documentation/foundation/nscalendar?language=obj*/// calendar units#if ndef _DEFINEDINCOCOA#define NSCalendarUnit as NSUInteger#endifsystem NSCalendarUnit NSCalendarUnitErasystem NSCalendarUnit NSCalendarUnitYearsystem NSCalendarUnit NSCalendarUnitMonthsystem NSCalendarUnit NSCalendarUnitDaysystem NSCalendarUnit NSCalendarUnitHoursystem NSCalendarUnit NSCalendarUnitMinutesystem NSCalendarUnit NSCalendarUnitSecondsystem NSCalendarUnit NSCalendarUnitWeekdaysystem NSCalendarUnit NSCalendarUnitWeekdayOrdinalsystem NSCalendarUnit NSCalendarUnitQuartersystem NSCalendarUnit NSCalendarUnitWeekOfMonthsystem NSCalendarUnit NSCalendarUnitWeekOfYearsystem NSCalendarUnit NSCalendarUnitYearForWeekOfYearsystem NSCalendarUnit NSCalendarUnitNanosecond#if _MACOSMAXALLOWED >= 150000system NSCalendarUnit NSCalendarUnitDayOfYear // macOS 15.0+#endif // 150000system NSCalendarUnit NSCalendarUnitCalendarsystem NSCalendarUnit NSCalendarUnitTimeZone// identifiers#if ndef _DEFINEDINCOCOA#define NSCalendarIdentifier as CFStringRef#endifsystem CFStringRef NSCalendarIdentifierGregoriansystem CFStringRef NSCalendarIdentifierISO8601system CFStringRef NSCalendarIdentifierBuddhistsystem CFStringRef NSCalendarIdentifierChinesesystem CFStringRef NSCalendarIdentifierCopticsystem CFStringRef NSCalendarIdentifierEthiopicAmeteAlemsystem CFStringRef NSCalendarIdentifierEthiopicAmeteMihretsystem CFStringRef NSCalendarIdentifierHebrewsystem CFStringRef NSCalendarIdentifierIndiansystem CFStringRef NSCalendarIdentifierIslamicsystem CFStringRef NSCalendarIdentifierIslamicCivilsystem CFStringRef NSCalendarIdentifierIslamicTabularsystem CFStringRef NSCalendarIdentifierIslamicUmmAlQurasystem CFStringRef NSCalendarIdentifierJapanesesystem CFStringRef NSCalendarIdentifierPersiansystem CFStringRef NSCalendarIdentifierRepublicOfChina// options#if ndef _DEFINEDINCOCOA#define NSCalendarOptions as NSUInteger#endifsystem NSCalendarOptions NSWrapCalendarComponentssystem NSCalendarOptions NSCalendarWrapComponentssystem NSCalendarOptions NSCalendarMatchStrictlysystem NSCalendarOptions NSCalendarSearchBackwardssystem NSCalendarOptions NSCalendarMatchPreviousTimePreservingSmallerUnitssystem NSCalendarOptions NSCalendarMatchNextTimePreservingSmallerUnitssystem NSCalendarOptions NSCalendarMatchNextTimesystem NSCalendarOptions NSCalendarMatchFirstsystem NSCalendarOptions NSCalendarMatchLastsystem NSInteger NSDateComponentUndefinedsystem NSInteger NSUndefinedDateComponent// notificationssystem CFStringRef NSCalendarDayChangedNotification// Classtoolbox fn CalendarClass = ClassRef// Createtoolbox fn CalendarWithIdentifier( CFStringRef identifier ) = CFCalendarRef// User's calendartoolbox fn CalendarCurrent = CFCalendarReftoolbox fn CalendarAutoupdatingCurrent = CFCalendarRef// Componentstoolbox fn CalendarDateMatches( CFCalendarRef ref, CFDateRef dt, DateComponentsRef comp ) = BOOLtoolbox fn CalendarComponentFromDate( CFCalendarRef ref, NSUInteger unit, CFDateRef dt ) = NSIntegertoolbox fn CalendarComponentsFromDate( CFCalendarRef ref, NSUInteger unitFlags, CFDateRef dt ) = DateComponentsReftoolbox fn CalendarComponentsFromDateToDate( CFCalendarRef ref, NSUInteger unitFlags, CFDateRef fromDate, CFDateRef toDate, NSUInteger options ) = DateComponentsReftoolbox fn CalendarComponentsFromDateComponentsToDateComponents( CFCalendarRef ref, NSUInteger unitFlags, DateComponentsRef fromComp, DateComponentsRef toComp, NSUInteger options ) = DateComponentsReftoolbox fn CalendarComponentsInTimeZoneFromDate( CFCalendarRef ref, CFTimeZoneRef zone, CFDateRef dt ) = DateComponentsReftoolbox CalendarGetEraYearMonthDayFromDate( CFCalendarRef ref, NSInteger *era, NSInteger *year, NSInteger month, NSInteger day, CFDateRef dt )toolbox CalendarGetEraYearForWeekOfYear( CFCalendarRef ref, NSInteger *era, NSInteger *year, NSInteger *weekOfYear, NSInteger *weekday, CFDateRef dt )toolbox CalendarGetHourMinuteSecondNanosecondFromDate( CFCalendarRef ref, NSInteger *hour, NSInteger *min, NSInteger second, NSInteger nanosecond, CFDateRef dt )// Infotoolbox fn CalendarIdentifier( CFCalendarRef ref ) = CFStringReftoolbox fn CalendarFirstWeekday( CFCalendarRef ref ) = NSUIntegertoolbox CalendarSetFirstWeekday( CFCalendarRef ref, NSUInteger weekday )toolbox fn CalendarLocale( CFCalendarRef ref ) = CFLocaleReftoolbox CalendarSetLocale( CFCalendarRef ref, CFLocaleRef locale )toolbox fn CalendarTimeZone( CFCalendarRef ref ) = CFTimeZoneReftoolbox CalendarSetTimeZone( CFCalendarRef ref, CFTimeZoneRef tz )toolbox fn CalendarMaximumRangeOfUnit( CFCalendarRef ref, NSCalendarUnit unit ) = CFRangetoolbox fn CalendarMinimumRangeOfUnit( CFCalendarRef ref, NSCalendarUnit unit ) = CFRangetoolbox fn CalendarMinimumDaysInFirstWeek( CFCalendarRef ref ) = NSUIntegertoolbox CalendarSetMinimumDaysInFirstWeek( CFCalendarRef ref, NSUInteger days )toolbox fn CalendarOrdinalityOfUnitInUnit( CFCalendarRef ref, NSUInteger ofUnit, NSUInteger inUnit, CFDateRef dt ) = NSUIntegertoolbox fn CalendarRangeOfUnitInUnit( CFCalendarRef ref, NSUInteger ofUnit, NSUInteger inUnit, CFDateRef dt ) = CFRangetoolbox fn CalendarRangeOfUnit( CFCalendarRef ref, NSUInteger unit, CFDateRef *startDate, CFTimeInterval *interval, CFDateRef forDate ) = BOOLtoolbox fn CalendarRangeOfWeekend( CFCalendarRef ref, CFDateRef startDate, CFTimeInterval interval, CFDateRef containingDate ) = CFRange// Scanning datestoolbox fn CalendarStartOfDayForDate( CFCalendarRef ref, CFDateRef dt ) = CFDateRef/*  CalendarEnumerateDates  callback example:    void local fn MyEnumerateDates( ref as CFCalendarRef, dt as CFDateRef, exactMatch as BOOL, stop as ^BOOL, userData as ptr )      // *stp = YES // stop enumeration    end fn*/toolbox CalendarEnumerateDates( CFCalendarRef ref, CFDateRef startDate, DateComponentsRef matchingComponents, NSUInteger options, ptr callback, ptr userData )toolbox fn CalendarNextDateAfterDateMatchingComponents( CFCalendarRef ref, CFDateRef dt, DateComponentsRef comps, NSUInteger options ) = CFDateReftoolbox fn CalendarNextDateAfterDateMatchingHourMinuteSeconds( CFCalendarRef ref, CFDateRef dt, NSInteger hour, NSInteger minute, NSInteger second, NSUInteger options ) = CFDateReftoolbox fn CalendarNextDateAfterDateMatchingUnit( CFCalendarRef ref, CFDateRef dt, NSUInteger unit, NSUInteger options ) = CFDateRef// Calculating datestoolbox fn CalendarDateFromComponents( CFCalendarRef ref, DateComponentsRef comps ) = CFDateReftoolbox fn CalendarDateByAddingComponents( CFCalendarRef ref, DateComponentsRef comps, CFDateRef dt, NSUInteger options ) = CFDateReftoolbox fn CalendarDateByAddingUnit( CFCalendarRef ref, NSUInteger unit, NSInteger value, CFDateRef dt, NSUInteger options ) = CFDateReftoolbox fn CalendarDateBySettingHourMinuteSecond( CFCalendarRef ref, NSInteger hour, NSInteger minute, NSInteger second, CFDateRef dt, NSUInteger options ) = CFDateReftoolbox fn CalendarDateBySettingUnit( CFCalendarRef ref, NSUInteger unit, NSInteger value, CFDateRef dt, NSUInteger options ) = CFDateReftoolbox fn CalendarDateWithEra( CFCalendarRef ref, NSInteger era, NSInteger year, NSInteger month, NSInteger day, NSInteger hour, NSInteger minute, NSInteger second, NSInteger nanosecond ) = CFDateReftoolbox fn CalendarDateWithEraYearForWeekOfYear( CFCalendarRef ref, NSInteger era, NSInteger year, NSInteger week, NSInteger weekDay, NSInteger hour, NSInteger minute, NSInteger second, NSInteger nanosecond ) = CFDateReftoolbox fn CalendarNextWeekendStartDate( CFCalendarRef ref, CFDateRef *dt, CFTimeInterval *interval, NSUInteger options, CFDateRef afterDate ) = BOOL// Comparing datestoolbox fn CalendarCompareDateToDate( CFCalendarRef ref, CFDateRef dt1, CFDateRef dt2, NSCalendarUnit unit ) = NSComparisonResulttoolbox fn CalendarIsDateEqualToDate( CFCalendarRef ref, CFDateRef dt1, CFDateRef dt2, NSCalendarUnit unit ) = BOOLtoolbox fn CalendarIsDateInSameDayAsDate( CFCalendarRef ref, CFDateRef dt1, CFDateRef dt2 ) = BOOLtoolbox fn CalendarIsDateInToday( CFCalendarRef ref, CFDateRef dt ) = BOOLtoolbox fn CalendarIsDateInTomorrow( CFCalendarRef ref, CFDateRef dt ) = BOOLtoolbox fn CalendarIsDateInWeekend( CFCalendarRef ref, CFDateRef dt ) = BOOLtoolbox fn CalendarIsDateInYesterday( CFCalendarRef ref, CFDateRef dt ) = BOOL// Am and pm symbolstoolbox fn CalendarAMSymbol( CFCalendarRef ref ) = CFStringReftoolbox fn CalendarPMSymbol( CFCalendarRef ref ) = CFStringRef// Weekday symbolstoolbox fn CalendarWeekdaySymbols( CFCalendarRef ref ) = CFArrayReftoolbox fn CalendarShortWeekdaySymbols( CFCalendarRef ref ) = CFArrayReftoolbox fn CalendarVeryShortWeekdaySymbols( CFCalendarRef ref ) = CFArrayReftoolbox fn CalendarStandaloneWeekdaySymbols( CFCalendarRef ref ) = CFArrayReftoolbox fn CalendarShortStandaloneWeekdaySymbols( CFCalendarRef ref ) = CFArrayReftoolbox fn CalendarVeryShortStandaloneWeekdaySymbols( CFCalendarRef ref ) = CFArrayRef// Month symbolstoolbox fn CalendarMonthSymbols( CFCalendarRef ref ) = CFArrayReftoolbox fn CalendarShortMonthSymbols( CFCalendarRef ref ) = CFArrayReftoolbox fn CalendarVeryShortMonthSymbols( CFCalendarRef ref ) = CFArrayReftoolbox fn CalendarStandaloneMonthSymbols( CFCalendarRef ref ) = CFArrayReftoolbox fn CalendarShortStandaloneMonthSymbols( CFCalendarRef ref ) = CFArrayReftoolbox fn CalendarVeryShortStandaloneMonthSymbols( CFCalendarRef ref ) = CFArrayRef// Quarter symbolstoolbox fn CalendarQuarterSymbols( CFCalendarRef ref ) = CFArrayReftoolbox fn CalendarShortQuarterSymbols( CFCalendarRef ref ) = CFArrayReftoolbox fn CalendarStandaloneQuarterSymbols( CFCalendarRef ref ) = CFArrayReftoolbox fn CalendarShortStandaloneQuarterSymbols( CFCalendarRef ref ) = CFArrayRef// Era symbolstoolbox fn CalendarEraSymbols( CFCalendarRef ref ) = CFArrayReftoolbox fn CalendarLongEraSymbols( CFCalendarRef ref ) = CFArrayRef/*  DateComponents  Bernie Wylde 20180305  Inherits from: Object  NSDateComponents - https://developer.apple.com/documentation/foundation/nsdatecomponents?language=objc*/// Inittoolbox fn DateComponentsInit = DateComponentsRef// autoreleased// Calendar and time zonetoolbox fn DateComponentsCalendar( DateComponentsRef ref ) = CFCalendarReftoolbox DateComponentsSetCalendar( DateComponentsRef ref, CFCalendarRef cal )toolbox fn DateComponentsTimeZone( DateComponentsRef ref ) = CFTimeZoneReftoolbox DateComponentsSetTimeZone( DateComponentsRef ref, CFTimeZoneRef tz )// Validate datetoolbox fn DateComponentsIsValidDate( DateComponentsRef ref ) = BOOLtoolbox fn DateComponentsIsValidDateInCalendar( DateComponentsRef ref, CFCalendarRef cal ) = BOOLtoolbox fn DateComponentsDate( DateComponentsRef ref ) = CFDateRef// Years and monthstoolbox fn DateComponentsEra( DateComponentsRef ref ) = NSIntegertoolbox DateComponentsSetEra( DateComponentsRef ref, NSInteger era )toolbox fn DateComponentsYear( DateComponentsRef ref ) = NSIntegertoolbox DateComponentsSetYear( DateComponentsRef ref, NSInteger year )toolbox fn DateComponentsYearForWeekOfYear( DateComponentsRef ref ) = NSIntegertoolbox DateComponentsSetYearForWeekOfYear( DateComponentsRef ref, NSInteger year )toolbox fn DateComponentsQuarter( DateComponentsRef ref ) = NSIntegertoolbox DateComponentsSetQuarter( DateComponentsRef ref, NSInteger quarter )toolbox fn DateComponentsMonth( DateComponentsRef ref ) = NSIntegertoolbox DateComponentsSetMonth( DateComponentsRef ref, NSInteger month )toolbox fn DateComponentsIsLeapMonth( DateComponentsRef ref ) = BOOLtoolbox DateComponentsSetLeapMonth( DateComponentsRef ref, BOOL flag )// Weeks and daystoolbox fn DateComponentsWeekday( DateComponentsRef ref ) = NSIntegertoolbox DateComponentsSetWeekday( DateComponentsRef ref, NSInteger day )toolbox fn DateComponentsWeekdayOrdinal( DateComponentsRef ref ) = NSIntegertoolbox DateComponentsSetWeekdayOrdinal( DateComponentsRef ref, NSInteger day )toolbox fn DateComponentsWeekOfMonth( DateComponentsRef ref ) = NSIntegertoolbox DateComponentsSetWeekOfMonth( DateComponentsRef ref, NSInteger week )toolbox fn DateComponentsWeekOfYear( DateComponentsRef ref ) = NSIntegertoolbox DateComponentsSetWeekOfYear( DateComponentsRef ref, NSInteger week )toolbox fn DateComponentsDay( DateComponentsRef ref ) = NSIntegertoolbox DateComponentsSetDay( DateComponentsRef ref, NSInteger day )#if _MACOSMAXALLOWED >= 150000toolbox fn DateComponentsDayOfYear( DateComponentsRef ref ) = NSInteger      // macOS 15.0+toolbox DateComponentsSetDayOfYear( DateComponentsRef ref, NSInteger value ) // macOS 15.0+#endif // 150000// Hours and secondstoolbox fn DateComponentsHour( DateComponentsRef ref ) = NSIntegertoolbox DateComponentsSetHour( DateComponentsRef ref, NSInteger hour )toolbox fn DateComponentsMinute( DateComponentsRef ref ) = NSIntegertoolbox DateComponentsSetMinute( DateComponentsRef ref, NSInteger minute )toolbox fn DateComponentsSecond( DateComponentsRef ref ) = NSIntegertoolbox DateComponentsSetSecond( DateComponentsRef ref, NSInteger second )toolbox fn DateComponentsNanosecond( DateComponentsRef ref ) = NSIntegertoolbox DateComponentsSetNanosecond( DateComponentsRef ref, NSInteger nanosecond )// Components as calendrical unitstoolbox fn DateComponentsValueForComponent( DateComponentsRef ref, NSCalendarUnit unit ) = NSIntegertoolbox DateComponentsSetValueForComponent( DateComponentsRef ref, NSInteger value, NSCalendarUnit unit )