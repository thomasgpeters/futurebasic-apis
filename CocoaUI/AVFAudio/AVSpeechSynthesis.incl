/*  AVSpeechSynthesizer  - https://developer.apple.com/documentation/avfoundation/avspeechsynthesizer?language=obj  Bernie Wylde 20210516  Framework: AVFAudio  Inherits from: Object  macOS 10.15+ // Apple docs say 10.14*/#if _MACOSMAXALLOWED >= 101500// speech boundary#if ndef _DEFINEDINCOCOA#define AVSpeechBoundary as NSInteger#endifsystem AVSpeechBoundary AVSpeechBoundaryImmediatesystem AVSpeechBoundary AVSpeechBoundaryWord// notation attributesystem CFStringRef AVSpeechSynthesisIPANotationAttribute// ratesystem float AVSpeechUtteranceMinimumSpeechRatesystem float AVSpeechUtteranceMaximumSpeechRatesystem float AVSpeechUtteranceDefaultSpeechRate// identifiersystem CFStringRef AVSpeechSynthesisVoiceIdentifierAlex// voice quality#if ndef _DEFINEDINCOCOA#define AVSpeechSynthesisVoiceQuality as NSInteger#endifsystem AVSpeechSynthesisVoiceQuality AVSpeechSynthesisVoiceQualityDefaultsystem AVSpeechSynthesisVoiceQuality AVSpeechSynthesisVoiceQualityEnhanced// gender#if ndef _DEFINEDINCOCOA#define AVSpeechSynthesisVoiceGender as NSInteger#endifsystem AVSpeechSynthesisVoiceGender AVSpeechSynthesisVoiceGenderUnspecifiedsystem AVSpeechSynthesisVoiceGender AVSpeechSynthesisVoiceGenderMalesystem AVSpeechSynthesisVoiceGender AVSpeechSynthesisVoiceGenderFemale// delegatebegin enum not output_speechSynthesizerDidStartSpeechUtterance_speechSynthesizerWillSpeakRangeOfSpeechString_speechSynthesizerWillSpeakMarker// macOS 14.0+_speechSynthesizerDidPauseSpeechUtterance_speechSynthesizerDidContinueSpeechUtterance_speechSynthesizerDidFinishSpeechUtterance_speechSynthesizerDidCancelSpeechUtteranceend enumtoolbox fn AVSpeechSynthesizerDelegateRange( AVSpeechSynthesizerRef ref ) = CFRange#if _MACOSMAXALLOWED >= 140000toolbox fn AVSpeechSynthesizerDelegateMarker( AVSpeechSynthesizerRef ref ) = AVSpeechSynthesisMarkerRef // macOS 14.0+#endif// 140000// Classtoolbox fn AVSpeechSynthesizerClass = ClassRef// Createtoolbox fn AVSpeechSynthesizerInit = AVSpeechSynthesizerRef// autorelease// Synthesizetoolbox AVSpeechSynthesizerSpeakUtterance( AVSpeechSynthesizerRef ref, AVSpeechUtteranceRef utterance )// Control synthesistoolbox fn AVSpeechSynthesizerContinueSpeaking( AVSpeechSynthesizerRef ref ) = BOOLtoolbox fn AVSpeechSynthesizerPauseSpeakingAtBoundary( AVSpeechSynthesizerRef ref, AVSpeechBoundary boundary ) = BOOLtoolbox fn AVSpeechSynthesizerIsPaused( AVSpeechSynthesizerRef ref ) = BOOLtoolbox fn AVSpeechSynthesizerIsSpeaking( AVSpeechSynthesizerRef ref ) = BOOLtoolbox fn AVSpeechSynthesizerStopSpeakingAtBoundary( AVSpeechSynthesizerRef ref, AVSpeechBoundary boundary ) = BOOL// Delegate/*  callback    void local fn MySpeechSynthesizerCallback( ref as AVSpeechSynthesizerRef, ev as long, utterance as AVSpeechUtteranceRef, userData as ptr )      // ...    end fn*/toolbox AVSpeechSynthesizerSetDelgateCallback( AVSpeechSynthesizerRef ref, ptr callback, ptr userData )// Direct output//toolbox AVSpeechSynthesizerWriteUtteranceToBuffer( AVSpeechSynthesizerRef ref, AVSpeechUtteranceRef utterance, AVAudioBufferRef buffer )/*  AVSpeechUtterance - https://developer.apple.com/documentation/avfoundation/avspeechutterance?language=obj  Inherits from: Object*/// Classtoolbox fn AVSpeechUtteranceClass = ClassRef// Createtoolbox fn AVSpeechUtteranceWithString( CFStringRef string ) = AVSpeechUtteranceReftoolbox fn AVSpeechUtteranceWithAttributedString( CFAttributedStringRef string ) = AVSpeechUtteranceRef// Configure#if _MACOSMAXALLOWED >= 110000toolbox fn AVSpeechUtterancePrefersAssistiveTechnologySettings( AVSpeechUtteranceRef ref ) = BOOL // macOS 11.0+toolbox AVSpeechUtteranceSetPrefersAssistiveTechnologySettings( AVSpeechUtteranceRef ref, BOOL flag ) // macOS 11.0+#endif// 110000toolbox fn AVSpeechUtterancePitchMultiplier( AVSpeechUtteranceRef ref ) = floattoolbox AVSpeechUtteranceSetPitchMultiplier( AVSpeechUtteranceRef ref, float multiplier )toolbox fn AVSpeechUtteranceVoice( AVSpeechUtteranceRef ref ) = AVSpeechSynthesisVoiceReftoolbox AVSpeechUtteranceSetVoice( AVSpeechUtteranceRef ref, AVSpeechSynthesisVoiceRef voice )toolbox fn AVSpeechUtteranceVolume( AVSpeechUtteranceRef ref ) = floattoolbox AVSpeechUtteranceSetVolume( AVSpeechUtteranceRef ref, float volume )// Timingtoolbox fn AVSpeechUtteranceRate( AVSpeechUtteranceRef ref ) = floattoolbox AVSpeechUtteranceSetRate( AVSpeechUtteranceRef ref, float rate )toolbox fn AVSpeechUtterancePostUtteranceDelay( AVSpeechUtteranceRef ref ) = CFTimeIntervaltoolbox AVSpeechUtteranceSetPostUtteranceDelay( AVSpeechUtteranceRef ref, CFTimeInterval delay )// Texttoolbox fn AVSpeechUtteranceSpeechString( AVSpeechUtteranceRef ref ) = CFStringReftoolbox fn AVSpeechUtteranceAttributedSpeechString( AVSpeechUtteranceRef ref ) = CFAttributedStringRef/*  AVSpeechSynthesisVoice - https://developer.apple.com/documentation/avfoundation/avspeechsynthesisvoice?language=obj  Inherits from: Object*/// Classtoolbox fn AVSpeechSynthesisVoiceClass = ClassRef// Find voicestoolbox fn AVSpeechSynthesisVoiceWithIdentifier( CFStringRef identifier ) = AVSpeechSynthesisVoiceReftoolbox fn AVSpeechSynthesisVoiceWithLanguage( CFStringRef languageCode ) = AVSpeechSynthesisVoiceReftoolbox fn AVSpeechSynthesisVoiceSpeechVoices = CFArrayRef// Identifying voicestoolbox fn AVSpeechSynthesisVoiceIdentifier( AVSpeechSynthesisVoiceRef ref ) = CFStringReftoolbox fn AVSpeechSynthesisVoiceName( AVSpeechSynthesisVoiceRef ref ) = CFStringReftoolbox fn avSpeechSynthesisVoiceQuality( AVSpeechSynthesisVoiceRef ref ) = AVSpeechSynthesisVoiceQuality// lowercase 'av' to avoid clash with type// Language codestoolbox fn AVSpeechSynthesisVoiceCurrentLanguageCode = CFStringReftoolbox fn AVSpeechSynthesisVoiceLanguage( AVSpeechSynthesisVoiceRef ref ) = CFStringRef// Instance propertiestoolbox fn AVSpeechSynthesisVoiceAudioFileSettings( AVSpeechSynthesisVoiceRef ref ) = CFDictionaryReftoolbox fn avSpeechSynthesisVoiceGender( AVSpeechSynthesisVoiceRef ref ) = AVSpeechSynthesisVoiceGender// lowercase 'av' to avoid clash with type#endif// 101500