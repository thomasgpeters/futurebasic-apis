/*  EKEventStore.incl - https://developer.apple.com/documentation/eventkit/ekeventstore?language=objc  Bernie Wylde 20200105  Framework: EventKit  Inherits from: Object*/// span#if ndef _DEFINEDINCOCOA#define EKSpan as NSInteger#endifsystem EKSpan EKSpanThisEventsystem EKSpan EKSpanFutureEvents// Inittoolbox fn EKEventStoreInit = EKEventStoreRef // autoreleasedtoolbox fn EKEventStoreWithSources( CFArrayRef sources ) = EKEventStoreRef// Accessing/*  EKEventStoreRequestAccessToEntityType  callback example:    void local fn MyCallback( ref as EKEventStoreRef, granted as BOOL, err as ErrorRef, userData as ptr )      //...  end fn*/toolbox EKEventStoreRequestAccessToEntityType( EKEventStoreRef ref, EKEntityType type, ptr callback, ptr userData )toolbox fn EKEventStoreAuthorizationStatusForEntityType( EKEntityType type ) = EKAuthorizationStatustoolbox fn EKEventStoreIdentifier( EKEventStoreRef ref ) = CFStringRef// Save and restore statetoolbox fn EKEventStoreCommit( EKEventStoreRef ref, ErrorRef *err ) = BOOLtoolbox EKEventStoreReset( EKEventStoreRef ref )toolbox EKEventStoreRefreshSourcesIfNecessary( EKEventStoreRef ref )// Instance methodstoolbox fn EKEventStoreCalendarItemWithIdentifier( EKEventStoreRef ref, CFStringRef identifier ) = EKCalendarItemReftoolbox fn EKEventStoreCalendarItemsWithExternalIdentifier( EKEventStoreRef ref, CFStringRef identifier ) = CFArrayReftoolbox fn EKEventStoreCalendarWithIdentifier( EKEventStoreRef ref, CFStringRef identifier ) = EKCalendarReftoolbox fn EKEventStoreCalendarsForEntityType( EKEventStoreRef ref, EKEntityType type ) = CFArrayReftoolbox EKEventStoreCancelFetchRequest( EKEventStoreRef ref, CFTypeRef fetchIdentifier )toolbox fn EKEventStoreDefaultCalendarForNewReminders( EKEventStoreRef ref ) = EKCalendarRef/*  EKEventStoreEnumerateEventsMatchingPredicate  callback function example:    void local fn MyCallback( ref as EKEventStoreRef, eventRef as EKEventRef, stp as ^BOOL, userData as ptr )      //*stp = YES// stop enumeration    end fn*/toolbox EKEventStoreEnumerateEventsMatchingPredicate( EKEventStoreRef ref, PredicateRef predicate, ptr callback, ptr userData )toolbox fn EKEventStoreEventWithIdentifier( EKEventStoreRef ref, CFStringRef identifier ) = EKEventReftoolbox fn EKEventStoreEventsMatchingPredicate( EKEventStoreRef ref, PredicateRef predicate ) = CFArrayRef/*  EKEventStoreFetchRemindersMatchingPredicate  callback function example:    void local fn MyCallback( ref as EKEventStoreRef, predicate as PredicateRef, stp as ^BOOL, userData as ptr )      //*stp = YES// stop enumeration    end fn*/toolbox EKEventStoreFetchRemindersMatchingPredicate( EKEventStoreRef ref, PredicateRef predicate, ptr callback, ptr userData )toolbox fn EKEventStorePredicateForCompletedReminders( EKEventStoreRef ref, CFDateRef startDate, CFDateRef endDate, CFArrayRef calendars ) = PredicateReftoolbox fn EKEventStorePredicateForEvents( EKEventStoreRef ref, CFDateRef startDate, CFDateRef endDate, CFArrayRef calendars ) = PredicateReftoolbox fn EKEventStorePredicateForIncompleteReminders( EKEventStoreRef ref, CFDateRef startDate, CFDateRef endDate, CFArrayRef calendars ) = PredicateReftoolbox fn EKEventStorePredicateForReminders( EKEventStoreRef ref, CFArrayRef calendars ) = PredicateReftoolbox fn EKEventStoreRemoveCalendar( EKEventStoreRef ref, EKCalendarRef calendar, BOOL commit, ErrorRef *err ) = BOOL#if _MACOSMAXALLOWED >= 101500toolbox fn EKEventStoreRemoveEvent( EKEventStoreRef ref, EKEventRef eventRef, EKSpan span, ErrorRef *err ) = BOOL// macOS 10.15+ // Apple docs say 10.14+#endif// 101500toolbox fn EKEventStoreRemoveEventCommit( EKEventStoreRef ref, EKEventRef eventRef, EKSpan span, BOOL commit, ErrorRef *err ) = BOOLtoolbox fn EKEventStoreRemoveReminder( EKEventStoreRef ref, EKReminderRef reminder, BOOL commit, ErrorRef *err ) = BOOLtoolbox fn EKEventStoreSaveCalendar( EKEventStoreRef ref, EKCalendarRef calendar, BOOL commit, ErrorRef *err ) = BOOL#if _MACOSMAXALLOWED >= 101500toolbox fn EKEventStoreSaveEvent( EKEventStoreRef ref, EKEventRef eventRef, EKSpan span, ErrorRef *err ) = BOOL// macOS 10.15+ // Apple docs say 10.14+#endif// 101500toolbox fn EKEventStoreSaveEventCommit( EKEventStoreRef ref, EKEventRef eventRef, EKSpan span, BOOL commit, ErrorRef *err ) = BOOLtoolbox fn EKEventStoreSaveReminder( EKEventStoreRef ref, EKReminderRef reminder, BOOL commit, ErrorRef *err ) = BOOLtoolbox fn EKEventStoreSourceWithIdentifier( EKEventStoreRef ref, CFStringRef identifier ) = EKSourceRef// Instance propertiestoolbox fn EKEventStoreDefaultCalendarForNewEvents( EKEventStoreRef ref ) = EKCalendarReftoolbox fn EKEventStoreDelegateSources( EKEventStoreRef ref ) = CFArrayReftoolbox fn EKEventStoreSources( EKEventStoreRef ref ) = CFArrayRef