/*  Animation  Bernie Wylde 20200418  Framework: AppKit  Inherits from: Object  NSAnimation - https://developer.apple.com/documentation/appkit/nsanimation?language=objc  NSAnimationDelegate - https://developer.apple.com/documentation/appkit/nsanimationdelegate?language=objc*/// curve#if ndef _DEFINEDINCOCOA#define NSAnimationCurve as NSUInteger#endifsystem NSAnimationCurve NSAnimationEaseInOutsystem NSAnimationCurve NSAnimationEaseInInsystem NSAnimationCurve NSAnimationEaseOutsystem NSAnimationCurve NSAnimationLinear// blocking mode#if ndef _DEFINEDINCOCOA#define NSAnimationBlockingMode as NSUInteger#endifsystem NSAnimationBlockingMode NSAnimationBlockingsystem NSAnimationBlockingMode NSAnimationNonblockingsystem NSAnimationBlockingMode NSAnimationNonblockingThreaded// progress#if ndef _DEFINEDINCOCOA#define NSAnimationProgress as float#endif// notification key#if ndef _DEFINEDINCOCOA#define NSAnimationProgressMark as CFStringRef#endif// notification#if ndef _DEFINEDINCOCOA#define NSAnimationProgressMarkNotification as CFStringRef// NSNotificationName#endif// delegate callback eventsbegin enum_animationDidEnd_animationDidStop_animationShouldStart_animationValueForProgress_animationDidReachProgressMarkend enumtoolbox fn AnimationDelegateProgress = floattoolbox AnimationDelegateSetValueForProgress( float value )toolbox AnimationDelegateSetShouldStart( BOOL flag )// Classtoolbox fn AnimationClass = AnimationRef// Inittoolbox fn AnimationWithDuration( CFTimeInterval duration, NSAnimationCurve curve ) = AnimationRef// Configuretoolbox fn AnimationBlockingMode( AnimationRef ref ) = NSAnimationBlockingModetoolbox AnimationSetBlockingMode( AnimationRef ref, NSAnimationBlockingMode mode )toolbox fn AnimationRunLoopModesForAnimating( AnimationRef ref ) = CFArrayReftoolbox fn AnimationCurve( AnimationRef ref ) = NSAnimationCurvetoolbox AnimationSetCurve( AnimationRef ref, NSAnimationCurve curve )toolbox fn AnimationDuration( AnimationRef ref ) = CFTimeIntervaltoolbox AnimationSetDuration( AnimationRef ref, CFTimeInterval duration )toolbox fn AnimationFrameRate( AnimationRef ref ) = floattoolbox AnimationSetFrameRate( AnimationRef ref, float rate )// Delegate/*  AnimationSetDelegateCallback  callback example:    void local fn MyCallback( ev as long, ref as AnimationRef, userData as ptr )    end fn*/toolbox AnimationSetDelegateCallback( AnimationRef ref, ptr callback, ptr userData )// Controlling and monitoringtoolbox AnimationStart( AnimationRef ref )toolbox AnimationStop( AnimationRef ref )toolbox fn AnimationIsAnimating( AnimationRef ref ) = BOOLtoolbox fn AnimationCurrentProgress( AnimationRef ref ) = NSAnimationProgresstoolbox AnimationSetCurrentProgress( AnimationRef ref, NSAnimationProgress progress )toolbox fn AnimationCurrentValue( AnimationRef ref ) = float// Progress markstoolbox AnimationAddProgressMark( AnimationRef ref, NSAnimationProgress progressMark )toolbox AnimationRemoveProgressMark( AnimationRef ref, NSAnimationProgress progressMark )toolbox fn AnimationProgressMarks( AnimationRef ref ) = CFArrayReftoolbox AnimationSetProgressMarks( AnimationRef ref, CFArrayRef progressMarks )// Linking animationstoolbox AnimationStartWhenAnimationReachesProgress( AnimationRef ref, AnimationRef animation, NSAnimationProgress progress )toolbox AnimationStopWhenAnimationReachesProgress( AnimationRef ref, AnimationRef animation, NSAnimationProgress progress )toolbox AnimationClearStartAnimation( AnimationRef ref )toolbox AnimationClearStopAnimation( AnimationRef ref )// Initializers/*  ViewAnimation  Inherits from: Animation/Object  NSViewAnimation - https://developer.apple.com/documentation/appkit/nsviewanimation?language=objc*/// view animation key#if ndef _DEFINEDINCOCOA#define NSViewAnimationKey as CFStringRef#endifsystem CFStringRef NSViewAnimationEffectKeysystem CFStringRef NSViewAnimationEndFrameKeysystem CFStringRef NSViewAnimationStartFrameKeysystem CFStringRef NSViewAnimationTargetKey// view animation effect name#if ndef _DEFINEDINCOCOA#define NSViewAnimationEffectName as CFStringRef#endifsystem CFStringRef NSViewAnimationFadeInEffectsystem CFStringRef NSViewAnimationFadeOutEffect// Inittoolbox fn ViewAnimationWithAnimations( CFArrayRef animations ) = ViewAnimationRef// Dictionariestoolbox fn ViewAnimationAnimations( ViewAnimationRef ref ) = CFArrayReftoolbox ViewAnimationSetAnimations( ViewAnimationRef ref, CFArrayRef animations )/*  AnimatablePropertyContainer  NSAnimatablePropertyContainer - https://developer.apple.com/documentation/appkit/nsanimatablepropertycontainer?language=objc*/// animatable property keys#if ndef _DEFINEDINCOCOA#define NSAnimatablePropertyKey as CFStringRef#endifsystem CFStringRef NSAnimationTriggerOrderInsystem CFStringRef NSAnimationTriggerOrderOut// Animatortoolbox fn AnimatablePropertyContainerAnimator( AnimatablePropertyContainerRef ref ) = CFTypeRef// Managing animationstoolbox fn AnimatablePropertyContainerAnimations( AnimatablePropertyContainerRef ref ) = CFDictionaryReftoolbox AnimatablePropertyContainerSetAnimations( AnimatablePropertyContainerRef ref, CFDictionaryRef animations )toolbox fn AnimatablePropertyContainerAnimationForKey( AnimatablePropertyContainerRef ref, CFStringRef key ) = CFTypeRef//toolbox fn AnimatablePropertyContainerDefaultAnimationForKey( CFStringRef key ) = CFTypeRef