/*  Error.incl  Bernie Wylde 20180227  Framework: Foundation  Inherits from: Object  NSError - https://developer.apple.com/documentation/foundation/nserror?language=objc*/// error domains#if ndef _DEFINEDINCOCOA#define NSErrorDomain as CFStringRef#endifsystem CFStringRef NSCocoaErrorDomainsystem CFStringRef NSPOSIXErrorDomainsystem CFStringRef NSOSStatusErrorDomainsystem CFStringRef NSMachErrorDomain// user info keys#if ndef _DEFINEDINCOCOA#define NSErrorUserInfoKey as CFStringRef#endifsystem CFStringRef NSURLErrorKeysystem CFStringRef NSFilePathErrorKeysystem CFStringRef NSHelpAnchorErrorKeysystem CFStringRef NSLocalizedDescriptionKeysystem CFStringRef NSLocalizedFailureErrorKeysystem CFStringRef NSLocalizedFailureReasonErrorKeysystem CFStringRef NSLocalizedRecoveryOptionsErrorKeysystem CFStringRef NSLocalizedRecoverySuggestionErrorKeysystem CFStringRef NSRecoveryAttempterErrorKeysystem CFStringRef NSStringEncodingErrorKeysystem CFStringRef NSUnderlyingErrorKeysystem CFStringRef NSDebugDescriptionErrorKey// Key in userInfo. A recommended standard way to embed a list of several NSErrors from underlying calls. The value of this key should be an NSArray of NSError. This value is independent from the value of `NSUnderlyingErrorKey` - neither, one, or both may be set.system NSErrorUserInfoKey NSMultipleUnderlyingErrorsKey// macOS 11.3// Classtoolbox fn ErrorClass = ClassRef// Createtoolbox fn ErrorWithDomain( CFStringRef domain, NSInteger code, CFDictionaryRef userInfo ) = ErrorRef// Propertiestoolbox fn ErrorCode( ErrorRef ref ) = NSIntegertoolbox fn ErrorDomain( ErrorRef ref ) = CFStringReftoolbox fn ErrorUserInfo( ErrorRef ref ) = CFDictionaryRef// Localized descriptiontoolbox fn ErrorLocalizedDescription( ErrorRef ref ) = CFStringReftoolbox fn ErrorLocalizedRecoveryOptions( ErrorRef ref ) = CFArrayReftoolbox fn ErrorLocalizedRecoverySuggestion( ErrorRef ref ) = CFStringReftoolbox fn ErrorLocalizedFailureReason( ErrorRef ref ) = CFStringRef// Provide user info/*  ErrorSetUserInfoValueProviderForDomain  provider handler example:    local fn MyProviderHandler( err as ErrorRef, userInfoKey as CFStringRef, userData as ptr ) as CFTypeRef      CFTypeRef result = NULL      // ...    end fn = result*///toolbox ErrorSetUserInfoValueProviderForDomain( CFStringRef errorDomain, ptr providerHandler, ptr userData ) //toolbox fn ErrorUserInfoValueProviderForDomain( CFStringRef errorDomain ) = CFTypeRef                        // Recovery attempter//toolbox fn ErrorRecoveryAttempter( ErrorRef err ) = CFTypeRef// Display helpAnchortoolbox fn ErrorHelpAnchor( ErrorRef ref ) = CFStringRef// Type methods// ...// Instance properties#if _MACOSMAXALLOWED >= 110300toolbox fn ErrorUnderlyingErrors( ErrorRef ref ) = CFArrayRef// macOS 11.3#endif// 110300