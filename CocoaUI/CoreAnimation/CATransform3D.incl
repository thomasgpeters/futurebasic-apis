/*  CATransform3D.incl - https://developer.apple.com/documentation/quartzcore/catransform3d?language=objc  Bernie Wylde 20180512  Framework: QuartzCore*/// Homogeneous three-dimensional transforms#if ndef _DEFINEDINCOCOAbegin record CATransform3DCGFloat m11, m12, m13, m14CGFloat m21, m22, m23, m24CGFloat m31, m32, m33, m34CGFloat m41, m42, m43, m44end record#endifsystem CATransform3D CATransform3DIdentity// Createtoolbox fn CATransform3DMakeTranslation( CGFloat tx, CGFloat ty, CGFloat tz ) = CATransform3Dtoolbox fn CATransform3DMakeScale( CGFloat sx, CGFloat sy, CGFloat sz ) = CATransform3Dtoolbox fn CATransform3DMakeRotation( CGFloat angle, CGFloat x, CGFloat y, CGFloat z ) = CATransform3D// Applyingtoolbox fn CATransform3DConcat( CATransform3D a, CATransform3D b ) = CATransform3Dtoolbox fn CATransform3DTranslate( CATransform3D t, CGFloat tx, CGFloat ty, CGFloat tz ) = CATransform3Dtoolbox fn CATransform3DScale( CATransform3D t, CGFloat sx, CGFloat sy, CGFloat sz ) = CATransform3Dtoolbox fn CATransform3DRotate( CATransform3D t, CGFloat angle, CGFloat x, CGFloat y, CGFloat z ) = CATransform3Dtoolbox fn CATransform3DInvert( CATransform3D t ) = CATransform3D// Propertiestoolbox fn CATransform3DIsAffine( CATransform3D t ) = BOOLtoolbox fn CATransform3DIsIdentity( CATransform3D t ) = BOOLtoolbox fn CATransform3DEqualToTransform( CATransform3D a, CATransform3D b ) = BOOL// Convert from CGtoolbox fn CATransform3DMakeAffineTransform( CGAffineTransform m ) = CATransform3Dtoolbox fn CATransform3DGetAffineTransform( CATransform3D t ) = CGAffineTransform/*  Value additions*/toolbox fn ValueWithCATransform3D( CATransform3D t ) = ValueReftoolbox fn ValueCATransform3D( ValueRef ref ) = CATransform3D