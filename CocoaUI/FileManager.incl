/*  FileManager.incl  Bernie Wylde 20170401  Framework: Foundation  Inherits from: Object  NSFileManager - https://developer.apple.com/documentation/foundation/nsfilemanager*//*  ERROR_PARAM  20250327  Add @err param to these functions:    FileManagerContentsOfDirectoryAtURL    FileManagerCreateDirectoryAtURL    FileManagerRemoveItemAtURL    FileManagerReplaceItemAtURL    FileManagerTrashItemAtURL    FileManagerCopyItemAtURL    FileManagerMoveItemAtURL    FileManagerAttributesOfItemAtURL    FileManagerSetAttributesOfItemAtURL*/// NSDirectoryEnumerationOptions#if ndef _DEFINEDINCOCOA#define NSDirectoryEnumerationOptions as NSUInteger#endifsystem NSDirectoryEnumerationOptions NSDirectoryEnumerationSkipsSubdirectoryDescendantssystem NSDirectoryEnumerationOptions NSDirectoryEnumerationSkipsPackageDescendantssystem NSDirectoryEnumerationOptions NSDirectoryEnumerationSkipsHiddenFiles#if _MACOSMAXALLOWED >= 101500system NSDirectoryEnumerationOptions NSDirectoryEnumerationIncludesDirectoriesPostOrder // macOS 10.15+system NSDirectoryEnumerationOptions NSDirectoryEnumerationProducesRelativePathURLs     // macOS 10.15+#endif // 101500// NSVolumeEnumerationOptions#if ndef _DEFINEDINCOCOA#define NSVolumeEnumerationOptions as NSUInteger#endifsystem NSVolumeEnumerationOptions NSVolumeEnumerationSkipHiddenVolumessystem NSVolumeEnumerationOptions NSVolumeEnumerationProduceFileReferenceURLs// NSFileAttributeKey, NSFileAttributeType, NSFileProtectionType#if ndef _DEFINEDINCOCOA#define NSFileAttributeKey as CFStringRef#define NSFileAttributeType as CFStringRef#define NSFileProtectionType as CFStringRef#endifsystem CFStringRef NSFileTypesystem CFStringRef NSFileTypeDirectorysystem CFStringRef NSFileTypeRegularsystem CFStringRef NSFileTypeSymbolicLinksystem CFStringRef NSFileTypeSocketsystem CFStringRef NSFileTypeCharacterSpecialsystem CFStringRef NSFileTypeBlockSpecialsystem CFStringRef NSFileTypeUnknownsystem CFStringRef NSFileSizesystem CFStringRef NSFileModificationDatesystem CFStringRef NSFileReferenceCountsystem CFStringRef NSFileDeviceIdentifiersystem CFStringRef NSFileOwnerAccountNamesystem CFStringRef NSFileGroupOwnerAccountNamesystem CFStringRef NSFilePosixPermissionssystem CFStringRef NSFileSystemNumbersystem CFStringRef NSFileSystemFileNumbersystem CFStringRef NSFileExtensionHiddensystem CFStringRef NSFileHFSCreatorCodesystem CFStringRef NSFileHFSTypeCodesystem CFStringRef NSFileImmutablesystem CFStringRef NSFileAppendOnlysystem CFStringRef NSFileCreationDatesystem CFStringRef NSFileOwnerAccountIDsystem CFStringRef NSFileGroupOwnerAccountIDsystem CFStringRef NSFileBusysystem CFStringRef NSFileProtectionKeysystem CFStringRef NSFileProtectionNonesystem CFStringRef NSFileProtectionCompletesystem CFStringRef NSFileProtectionCompleteUnlessOpensystem CFStringRef NSFileProtectionCompleteUntilFirstUserAuthenticationsystem CFStringRef NSFileSystemSizesystem CFStringRef NSFileSystemFreeSizesystem CFStringRef NSFileSystemNodessystem CFStringRef NSFileSystemFreeNodes// NSURLRelationship#if ndef _DEFINEDINCOCOA#define NSURLRelationship as NSInteger#endifsystem NSURLRelationship NSURLRelationshipContainssystem NSURLRelationship NSURLRelationshipSamesystem NSURLRelationship NSURLRelationshipOther#if ndef _DEFINEDINCOCOA#define NSFileManagerUnmountOptions as NSUInteger#endifsystem NSFileManagerUnmountOptions NSFileManagerUnmountAllPartitionsAndEjectDisksystem NSFileManagerUnmountOptions NSFileManagerUnmountWithoutUI#if ndef _DEFINEDINCOCOA#define NSFileManagerItemReplacementOptions as NSUInteger#endifsystem NSFileManagerItemReplacementOptions NSFileManagerItemReplacementUsingNewMetadataOnlysystem NSFileManagerItemReplacementOptions NSFileManagerItemReplacementWithoutDeletingBackupItem// notificationssystem CFStringRef NSUbiquityIdentityDidChangeNotification// dialog eventsbegin enum not output 2400_fileManagerShouldMoveItem            // DialogEventURL, DialogEventOtherURL, DialogEventSetBool_fileManagerShouldProceedMovingItem   // DialogEventURL, DialogEventOtherURL, DialogEventError, DialogEventSetBool_fileManagerShouldCopyItem            // DialogEventURL, DialogEventOtherURL, DialogEventSetBool_fileManagerShouldProceedCopyingItem  // DialogEventURL, DialogEventOtherURL, DialogEventError, DialogEventSetBool_fileManagerShouldRemoveItem          // DialogEventURL, DialogEventSetBool_fileManagerShouldProceedRemovingItem // DialogEventURL, DialogEventError, DialogEventSetBool_fileManagerShouldLinkItem            // DialogEventURL, DialogEventOtherURL, DialogEventSetBool_fileManagerShouldProceedLinkingItem  // DialogEventURL, DialogEventOtherURL, DialogEventError, DialogEventSetBoolend enum// Classtoolbox fn FileManagerClass = ClassRef// Createtoolbox fn FileManagerDefaultManager = FileManagerRef// User directoriestoolbox fn FileManagerTemporaryDirectory = CFURLReftoolbox fn FileManagerHomeDirectoryForCurrentUser = CFURLReftoolbox fn FileManagerHomeDirectoryForUser( CFStringRef userName ) = CFURLRef// System directoriestoolbox fn FileManagerURLForDirectoryAppropriateForURL( NSSearchPathDirectory whichDirectory, NSSearchPathDomainMask domain, CFURLRef url, BOOL create, ErrorRef *err ) = CFURLReftoolbox fn FileManagerURLForDirectory( NSSearchPathDirectory whichDirectory, NSSearchPathDomainMask domain ) = CFURLReftoolbox fn FileManagerURLsForDirectory( NSSearchPathDirectory whichDirectory, NSSearchPathDomainMask domain ) = CFArrayRef// Container directoriestoolbox fn FileManagerContainerURLForSecurityApplicationGroupIdentifier( CFStringRef groupIdentifier ) = CFURLRef// Directory contents#if 0 // ERROR_PARAMtoolbox fn FileManagerContentsOfDirectoryAtURL( CFURLRef url, CFArrayRef keys, NSDirectoryEnumerationOptions options, ErrorRef *err ) = CFArrayRef#else // ERROR_PARAMtoolbox fn FileManagerContentsOfDirectoryAtURL( CFURLRef url, CFArrayRef keys, NSDirectoryEnumerationOptions options ) = CFArrayRef#endif // ERROR_PARAM/*  FileManagerEnumeratorAtURL  params:    url           - the directory URL    propertyKeys  - a list of NSURLResourceKeys (see URL.incl)    options       - enumeration options (see URL.incl)    errorCallback - optional error handler callback function    userData      - optional userData to send to errorCallback function    callback function example:    local fn MyDirectoryEnumeratorCallback( url as CFURLRef, err as ErrorRef, userData as ptr ) as BOOL      BOOL flag      // Handle the error.      // Return YES if the enumeration should continue after the error.      flag = YES/NO    end fn = flag*/toolbox fn FileManagerEnumeratorAtURL( CFURLRef url, CFArrayRef propertyKeys, NSDirectoryEnumerationOptions options, ptr errorCallback, ptr userData ) = DirectoryEnumeratorReftoolbox fn FileManagerMountedVolumeURLs( CFArrayRef propertyKeys, NSVolumeEnumerationOptions options ) = CFArrayRef//toolbox fn FileManagerSubpathsOfDirectoryAtURL( CFURLRef url, ErrorRef *err ) = CFArrayRef// subpathsAtPath:// Creating and deleting items#if 0 // ERROR_PARAMtoolbox fn FileManagerCreateDirectoryAtURL( CFURLRef url, BOOL withIntermediateDirectories, CFDictionaryRef attributes, ErrorRef *err ) = BOOL#else // ERROR_PARAMtoolbox fn FileManagerCreateDirectoryAtURL( CFURLRef url, BOOL withIntermediateDirectories, CFDictionaryRef attributes ) = BOOL#endif // ERROR_PARAMtoolbox fn FileManagerCreateFileAtURL( CFURLRef url, CFDataRef contents, CFDictionaryRef attributes ) = BOOL#if 0 // ERROR_PARAMtoolbox fn FileManagerRemoveItemAtURL( CFURLRef url, ErrorRef *err ) = BOOLtoolbox fn FileManagerReplaceItemAtURL( CFURLRef origURL, CFURLRef newURL, CFStringRef backupItemName, NSFileManagerItemReplacementOptions options, CFURLRef *resultingItemURL, ErrorRef *err ) = BOOL#else // ERROR_PARAMtoolbox fn FileManagerRemoveItemAtURL( CFURLRef url ) = BOOLtoolbox fn FileManagerReplaceItemAtURL( CFURLRef origURL, CFURLRef newURL ) = BOOL#endif // ERROR_PARAMtoolbox fn FileManagerReplaceItemAtURLWithOptions( CFURLRef origURL, CFURLRef newURL, CFStringRef backupItemName, NSFileManagerItemReplacementOptions options, CFURLRef *resultingItemURL, ErrorRef *err ) = BOOL#if 0 // ERROR_PARAMtoolbox fn FileManagerTrashItemAtURL( CFURLRef url, CFURLRef *resultingItemURL, ErrorRef *err ) = BOOL#else // ERROR_PARAMtoolbox FileManagerTrashItemAtURL( CFURLRef url )#endif // ERROR_PARAM// Moving and copying items#if 0 // ERROR_PARAMtoolbox fn FileManagerCopyItemAtURL( CFURLRef srcURL, CFURLRef dstURL, ErrorRef *err ) = BOOLtoolbox fn FileManagerMoveItemAtURL( CFURLRef srcURL, CFURLRef dstURL, ErrorRef *err ) = BOOL#else // ERROR_PARAMtoolbox fn FileManagerCopyItemAtURL( CFURLRef srcURL, CFURLRef dstURL ) = BOOLtoolbox fn FileManagerMoveItemAtURL( CFURLRef srcURL, CFURLRef dstURL ) = BOOL#endif // ERROR_PARAM// ICloud-based itemstoolbox fn FileManagerUbiquityIdentityToken = CFTypeReftoolbox fn FileManagerURLForUbiquityContainerIdentifier( CFStringRef identifier ) = CFURLReftoolbox fn FileManagerIsUbiquitousItem( CFURLRef url ) = BOOLtoolbox fn FileManagerSetUbiquitousItem( BOOL flag, CFURLRef url, CFURLRef destURL, ErrorRef *err ) = BOOLtoolbox fn FileManagerStartDownloadingUbiquitousItem( CFURLRef url, ErrorRef *err ) = BOOLtoolbox fn FileManagerEvictUbiquitousItem( CFURLRef url, ErrorRef *err ) = BOOLtoolbox fn FileManagerURLForPublishingUbiquitousItem( CFURLRef url, CFDateRef *expirationDate, ErrorRef *err ) = CFURLRef// File provider servicestoolbox FileManagerGetFileProviderServicesForItem( CFURLRef url, ptr completionHandler, ptr userData )// Symbolic and hard linkstoolbox fn FileManagerCreateSymbolicLinkAtURL( CFURLRef url, CFURLRef dstURL, ErrorRef *err ) = BOOLtoolbox fn FileManagerLinkItemAtURL( CFURLRef srcURL, CFURLRef dstURL, ErrorRef *err ) = BOOLtoolbox fn FileManagerDestinationURLOfSymbolicLinkAtURL( CFURLRef url, ErrorRef *err ) = CFURLRef// Determining access to filestoolbox fn FileManagerFileExistsAtURL( CFURLRef url ) = BOOLtoolbox fn FileManagerIsReadableFileAtURL( CFURLRef url ) = BOOLtoolbox fn FileManagerIsWritableFileAtURL( CFURLRef url ) = BOOLtoolbox fn FileManagerIsExecutableFileAtURL( CFURLRef url ) = BOOLtoolbox fn FileManagerIsDeletableFileAtURL( CFURLRef url ) = BOOL// Attributestoolbox fn FileManagerComponentsToDisplayForURL( CFURLRef url ) = CFArrayRef#if 0 // ERROR_PARAMtoolbox fn FileManagerAttributesOfItemAtURL( CFURLRef url, ErrorRef *err ) = CFDictionaryReftoolbox fn FileManagerSetAttributesOfItemAtURL( CFURLRef url, CFDictionaryRef attributes, ErrorRef *err ) = BOOL#else // ERROR_PARAMtoolbox fn FileManagerAttributesOfItemAtURL( CFURLRef url ) = CFDictionaryReftoolbox fn FileManagerSetAttributesOfItemAtURL( CFURLRef url, CFDictionaryRef attributes ) = BOOL#endif // ERROR_PARAMtoolbox fn FileManagerAttributesOfFileSystemForURL( CFURLRef url, ErrorRef *err ) = CFDictionaryRef// Get and compare file contentstoolbox fn FileManagerContentsAtURL( CFURLRef url ) = CFDataReftoolbox fn FileManagerContentsEqual( CFURLRef url1, CFURLRef url2 ) = BOOL// Relationship between itemstoolbox fn FileManagerGetRelationshipOfDirectoryAtURL( NSURLRelationship *relationship, CFURLRef dirURL, CFURLRef itemURL, ErrorRef *err ) = BOOLtoolbox fn FileManagerGetRelationshipOfDirectoryInDomain( NSURLRelationship *relationship, NSSearchPathDirectory whichDirectory, NSSearchPathDomainMask domain, CFURLRef itemURL, ErrorRef *err ) = BOOL// Paths to strings// Current directorytoolbox fn FileManagerChangeCurrentDirectoryURL( CFURLRef url ) = BOOLtoolbox fn FileManagerCurrentDirectoryURL = CFURLRef// Unmount volumestoolbox FileManagerUnmountVolumeAtURL( CFURLRef url, NSFileManagerUnmountOptions options, ptr completionHandler, ptr userData )// Conveniencetoolbox fn FileManagerIsDirectoryAtURL( CFURLRef url ) = BOOLtoolbox fn FileManagerURLForDesktopDirectory = CFURLReftoolbox fn FileManagerURLForPreferencesDirectory = CFURLReftoolbox fn FileManagerURLForApplicationDirectory = CFURLRef/*  DirectoryEnumerator  Inherits from: Enumerator/Object  NSDirectoryEnumerator - https://developer.apple.com/documentation/foundation/nsdirectoryenumerator  See also: Enumerator.incl*/// Attributestoolbox fn DirectoryEnumeratorDirectoryAttributes( DirectoryEnumeratorRef enumerator ) = CFDictionaryReftoolbox fn DirectoryEnumeratorFileAttributes( DirectoryEnumeratorRef enumerator ) = CFDictionaryRef#if _MACOSMAXALLOWED >= 101500toolbox fn DirectoryEnumeratorIsEnumeratingDirectoryPostOrder( DirectoryEnumeratorRef ref ) = BOOL// macOS 10.15+#endif// 101500toolbox fn DirectoryEnumeratorLevel( DirectoryEnumeratorRef enumerator ) = NSUInteger// Skippingtoolbox DirectoryEnumeratorSkipDescendants( DirectoryEnumeratorRef enumerator )