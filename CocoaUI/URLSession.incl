/*  URLSession.incl  Bernie Wylde 20190316  Framework: Foundation  Inherits from: Object  NSURLSession - https://developer.apple.com/documentation/foundation/nsurlsession*/// userinfo dictionary keyssystem CFStringRef NSURLSessionDownloadTaskResumeData// cookie accept policy#if ndef _DEFINEDINCOCOA#define NSHTTPCookieAcceptPolicy as NSUInteger#endifsystem NSHTTPCookieAcceptPolicy NSHTTPCookieAcceptPolicyAlwayssystem NSHTTPCookieAcceptPolicy NSHTTPCookieAcceptPolicyNeversystem NSHTTPCookieAcceptPolicy NSHTTPCookieAcceptPolicyOnlyFromMainDocumentDomain// task state#if ndef _DEFINEDINCOCOA#define NSURLSessionTaskState as NSInteger#endifsystem NSURLSessionTaskState NSURLSessionTaskStateRunningsystem NSURLSessionTaskState NSURLSessionTaskStateSuspendedsystem NSURLSessionTaskState NSURLSessionTaskStateCancelingsystem NSURLSessionTaskState NSURLSessionTaskStateCompleted// task prioritysystem float NSURLSessionTaskPriorityDefaultsystem float NSURLSessionTaskPriorityLowsystem float NSURLSessionTaskPriorityHigh// transfer sizesystem SInt64 NSURLSessionTransferSizeUnknown// auth challenge disposition#if ndef _DEFINEDINCOCOA#define NSURLSessionAuthChallengeDisposition as NSInteger#endifsystem NSURLSessionAuthChallengeDisposition NSURLSessionAuthChallengeUseCredentialsystem NSURLSessionAuthChallengeDisposition NSURLSessionAuthChallengePerformDefaultHandlingsystem NSURLSessionAuthChallengeDisposition NSURLSessionAuthChallengeCancelAuthenticationChallengesystem NSURLSessionAuthChallengeDisposition NSURLSessionAuthChallengeRejectProtectionSpace// dns protocol used for domain resolution#if ndef _DEFINEDINCOCOA#define NSURLSessionTaskMetricsDomainResolutionProtocol as NSInteger// macOS 11.0+#endifsystem NSURLSessionTaskMetricsDomainResolutionProtocol NSURLSessionTaskMetricsDomainResolutionProtocolUnknown // macOS 11.0+system NSURLSessionTaskMetricsDomainResolutionProtocol NSURLSessionTaskMetricsDomainResolutionProtocolUDP     // macOS 11.0+system NSURLSessionTaskMetricsDomainResolutionProtocol NSURLSessionTaskMetricsDomainResolutionProtocolTCP     // macOS 11.0+system NSURLSessionTaskMetricsDomainResolutionProtocol NSURLSessionTaskMetricsDomainResolutionProtocolTLS     // macOS 11.0+system NSURLSessionTaskMetricsDomainResolutionProtocol NSURLSessionTaskMetricsDomainResolutionProtocolHTTPS   // macOS 11.0+// dialog eventsbegin enum not output 3600// NSURLSessionDelegate_URLSessionDidBecomeInvalid_URLSessionDidFinishEvents_URLSessionDidReceiveChallenge_URLSessionDidFinishEventsForBackgroundURLSession// macOS 11.0+// NSURLSessionDownloadDelegate_URLSessionDownloadTaskDidFinishDownloading_URLSessionDownloadTaskDidResume_URLSessionDownloadTaskDidWriteData// NSURLSessionTaskDelegate_URLSessionTaskDidComplete_URLSessionTaskWillPerformHTTPRedirection_URLSessionTaskDidSendBodyData_URLSessionTaskNeedNewBodyStream_URLSessionTaskDidReceiveChallenge_URLSessionTaskWillBeginDelayedRequest_URLSessionTaskIsWaitingForConnectivity_URLSessionTaskDidFinishCollectingMetrics// NSURLSessionDataDelegate_URLSessionDataTaskDidReceiveResponse_URLSessionDataTaskDidBecomeDownloadTask_URLSessionDataTaskDidBecomeStreamTask_URLSessionDataTaskDidReceiveData_URLSessionDataTaskWillCacheResponse// NSURLSessionStreamDelegate_URLSessionStreamTaskBetterRouteDiscovered_URLSessionStreamTaskDidBecomeInputStream_URLSessionStreamTaskReadClosed_URLSessionStreamTaskWriteClosedend enum// Classtoolbox fn URLSessionClass = ClassRef// Createtoolbox fn URLSessionWithConfiguration( URLSessionConfigurationRef config ) = URLSessionReftoolbox fn URLSessionWithDelegateQueue( URLSessionConfigurationRef config, OperationQueueRef queue ) = URLSessionReftoolbox fn URLSessionSharedSession = URLSessionRef// Configuretoolbox fn URLSessionConfiguration( URLSessionRef ref ) = URLSessionConfigurationReftoolbox fn URLSessionDelegateQueue( URLSessionRef ref ) = OperationQueueReftoolbox fn URLSessionDescription( URLSessionRef ref ) = CFStringRef// Add data taskstoolbox fn URLSessionDataTaskWithURL( URLSessionRef ref, CFURLRef url ) = URLSessionDataTaskRef/*  URLSessionDataTaskWithURLCompletionHandler  Handler params:  ( session as URLSessionRef, dta as CFDataRef, response as URLResponseRef, err as ErrorRef, userData as ptr ) */toolbox fn URLSessionDataTaskWithURLCompletionHandler( URLSessionRef ref, CFURLRef url, ptr handlerAddress, ptr userData ) = URLSessionDataTaskReftoolbox fn URLSessionDataTaskWithRequest( URLSessionRef ref, URLRequestRef request ) = URLSessionDataTaskRef/*  URLSessionDataTaskWithRequestCompletionHandler  Handler params:  ( session as URLSessionRef, dta as CFDataRef, response as URLResponseRef, err as ErrorRef, userData as ptr )*/toolbox fn URLSessionDataTaskWithRequestCompletionHandler( URLSessionRef ref, URLRequestRef request, ptr handlerAddress, ptr userData ) = URLSessionDataTaskRef// Add download taskstoolbox fn URLSessionDownloadTaskWithURL( URLSessionRef ref, CFURLRef url ) = URLSessionDownloadTaskRef/*  URLSessionDownloadTaskWithURLCompletionHandler  Handler params:  ( session as URLSessionRef, url as CFURLRef, response as URLResponseRef, err as ErrorRef, userData as ptr )*/toolbox fn URLSessionDownloadTaskWithURLCompletionHandler( URLSessionRef ref, CFURLRef url, ptr handlerAddress, ptr userData ) = URLSessionDownloadTaskReftoolbox fn URLSessionDownloadTaskWithRequest( URLSessionRef ref, URLRequestRef request ) = URLSessionDownloadTaskRef/*  URLSessionDownloadTaskWithRequestCompletionHandler  Handler params:  ( session as URLSessionRef, url as CFURLRef, response as URLResponseRef, err as ErrorRef, userData as ptr )*/toolbox fn URLSessionDownloadTaskWithRequestCompletionHandler( URLSessionRef ref, URLRequestRef request, ptr handlerAddress, ptr userData ) = URLSessionDownloadTaskReftoolbox fn URLSessionDownloadTaskWithResumeData( URLSessionRef ref, CFDataRef dta ) = URLSessionDownloadTaskRef/*  URLSessionDownloadTaskWithResumeDataCompletionHandler  Handler params:*/toolbox fn URLSessionDownloadTaskWithResumeDataCompletionHandler( URLSessionRef ref, CFDataRef dta, ptr handlerAddress, ptr userData ) = URLSessionDownloadTaskRef// Add upload taskstoolbox fn URLSessionUploadTaskWithRequestFromData( URLSessionRef ref, URLRequestRef request, CFDataRef dta ) = URLSessionUploadTaskRef/*  URLSessionUploadTaskWithRequestFromDataCompletionHandler  Handler params: ( session as URLSessionRef, dta as CFDataRef, response as URLResponseRef, err as ErrorRef, userData as ptr )*/toolbox fn URLSessionUploadTaskWithRequestFromDataCompletionHandler( URLSessionRef ref, URLRequestRef request, CFDataRef dta, ptr handlerAddress, ptr userData ) = URLSessionUploadTaskReftoolbox fn URLSessionUploadTaskWithRequestFromFile( URLSessionRef ref, URLRequestRef request, CFURLRef url ) = URLSessionUploadTaskRef/*  URLSessionUploadTaskWithRequestFromFileCompletionHandler  Handler params:  ( session as URLSessionRef, dta as CFDataRef, response as URLResponseRef, err as ErrorRef, userData as ptr )*/toolbox fn URLSessionUploadTaskWithRequestFromFileCompletionHandler( URLSessionRef ref, URLRequestRef request, CFURLRef url, ptr handlerAddress, ptr userData ) = URLSessionUploadTaskReftoolbox fn URLSessionUploadTaskWithStreamedRequest( URLSessionRef ref, URLRequestRef request ) = URLSessionUploadTaskRef#if _MACOSMAXALLOWED >= 140000toolbox fn URLSessionUploadTaskWithResumeData( URLSessionRef ref, CFDataRef resumeData ) = URLSessionUploadTaskRef// macOS 14.0+/*  URLSessionUploadTaskWithCompletionHandler  handler:    void local fn CompletionHandler( ref as URLSessionRef, dta as CFDataRef, response as URLResonseRef, err as ErrorRef, userData as ptr )      // ...    end fn*/toolbox fn URLSessionUploadTaskWithCompletionHandler( URLSessionRef ref, CFDataRef resumeData, ptr completionHandler, ptr userData ) = URLSessionUploadTaskRef// macOS 14.0+#endif// 140000// Add stream taskstoolbox fn URLSessionStreamTaskWithHostName( URLSessionRef ref, CFStringRef hostName, NSInteger port ) = URLSessionStreamTaskReftoolbox fn URLSessionStreamTaskWithNetService( URLSessionRef ref, NetServiceRef service ) = URLSessionStreamTaskRef// ...// Add WebSocket tasks// macOS 10.15+// ...// Managing sessiontoolbox URLSessionFinishTasksAndInvalidate( URLSessionRef ref )/*  URLSessionFlushWithCompletionHandler  Handler params:  ( session as URLSessionRef, userData as ptr )*/toolbox URLSessionFlushWithCompletionHandler( URLSessionRef ref, ptr handlerAddress, ptr userData )/*  URLSessionGetTasksWithCompletionHandler  Handler params:  ( session as URLSessionRef, dataTasks as CFArrayRef, uploadTasks as CFArrayRef, downloadTasks as CFArrayRef, userData as ptr )*/toolbox URLSessionGetTasksWithCompletionHandler( URLSessionRef ref, ptr handlerAddress, ptr userData )/*  URLSessionGetAllTasksWithCompletionHandler  Handler params:  ( session as URLSessionRef, tasks as CFArrayRef, userData as ptr )*/toolbox URLSessionGetAllTasksWithCompletionHandler( URLSessionRef ref, ptr handlerAddress, ptr userData )toolbox URLSessionInvalidateAndCancel( URLSessionRef ref )/*  URLSessionResetWithCompletionHandler  Handler params:  ( session as URLSessionRef, userData as ptr )*/toolbox URLSessionResetWithCompletionHandler( URLSessionRef ref, ptr handlerAddress, ptr userData )/*  URLSessionConfiguration  Inherits from: Object  NSURLSessionConfiguration - https://developer.apple.com/documentation/foundation/nsurlsessionconfiguration*/// Createtoolbox fn URLSessionConfigurationDefault = URLSessionConfigurationReftoolbox fn URLSessionConfigurationEphemeral = URLSessionConfigurationReftoolbox fn URLSessionConfigurationBackground( CFStringRef identifier ) = URLSessionConfigurationRef// General propertiestoolbox fn URLSessionConfigurationIdentifier( URLSessionConfigurationRef ref ) = CFStringReftoolbox fn URLSessionConfigurationHTTPAdditionalHeaders( URLSessionConfigurationRef ref ) = CFDictionaryReftoolbox URLSessionConfigurationSetHTTPAdditionalHeaders( URLSessionConfigurationRef ref, CFDictionaryRef headers )toolbox fn URLSessionConfigurationNetworkServiceType( URLSessionConfigurationRef ref ) = NSURLRequestNetworkServiceTypetoolbox URLSessionConfigurationSetNetworkServiceType( URLSessionConfigurationRef ref, NSURLRequestNetworkServiceType type )toolbox fn URLSessionConfigurationAllowsCellularAccess( URLSessionConfigurationRef ref ) = BOOLtoolbox URLSessionConfigurationSetAllowsCellularAccess( URLSessionConfigurationRef ref, BOOL flag )toolbox fn URLSessionConfigurationTimeoutIntervalForRequest( URLSessionConfigurationRef ref ) = CFTimeIntervaltoolbox URLSessionConfigurationSetTimeoutIntervalForRequest( URLSessionConfigurationRef ref, CFTimeInterval ti )toolbox fn URLSessionConfigurationTimeoutIntervalForResource( URLSessionConfigurationRef ref ) = CFTimeIntervaltoolbox URLSessionConfigurationSetTimeoutIntervalForResource( URLSessionConfigurationRef ref, CFTimeInterval ti )toolbox fn URLSessionConfigurationSharedContainerIdentifier( URLSessionConfigurationRef ref ) = CFStringRef           toolbox URLSessionConfigurationSetSharedContainerIdentifier( URLSessionConfigurationRef ref, CFStringRef identifier ) toolbox fn URLSessionConfigurationWaitsForConnectivity( URLSessionConfigurationRef ref ) = BOOL     toolbox URLSessionConfigurationSetWaitsForConnectivity( URLSessionConfigurationRef ref, BOOL flag ) #if _MACOSMAXALLOWED >= 110000toolbox fn URLSessionConfigurationSessionSendsLaunchEvents( URLSessionConfigurationRef ref ) = BOOL     // macOS 11.0+toolbox URLSessionConfigurationSetSessionSendsLaunchEvents( URLSessionConfigurationRef ref, BOOL flag ) // macOS 11.0+#endif// 110000// Cookie policiestoolbox fn URLSessionConfigurationHTTPCookieAcceptPolicy( URLSessionConfigurationRef ref ) = NSHTTPCookieAcceptPolicytoolbox URLSessionConfigurationSetHTTPCookieAcceptPolicy( URLSessionConfigurationRef ref, NSHTTPCookieAcceptPolicy policy )toolbox fn URLSessionConfigurationHTTPShouldSetCookies( URLSessionConfigurationRef ref ) = BOOLtoolbox URLSessionConfigurationSetHTTPShouldSetCookies( URLSessionConfigurationRef ref, BOOL flag )toolbox fn URLSessionConfigurationHTTPCookieStorage( URLSessionConfigurationRef ref ) = HTTPCookieStorageReftoolbox URLSessionConfigurationSetHTTPCookieStorage( URLSessionConfigurationRef ref, HTTPCookieStorageRef storage )// Security policiestoolbox fn URLSessionConfigurationTLSMaximumSupportedProtocol( URLSessionConfigurationRef ref ) = SSLProtocoltoolbox URLSessionConfigurationSetTLSMaximumSupportedProtocol( URLSessionConfigurationRef ref, SSLProtocol protocol )toolbox fn URLSessionConfigurationTLSMinimumSupportedProtocol( URLSessionConfigurationRef ref ) = SSLProtocoltoolbox URLSessionConfigurationSetTLSMinimumSupportedProtocol( URLSessionConfigurationRef ref, SSLProtocol protocol )toolbox fn URLSessionConfigurationURLCredentialStorage( URLSessionConfigurationRef ref ) = URLCredentialStorageReftoolbox URLSessionConfigurationSetURLCredentialStorage( URLSessionConfigurationRef ref, URLCredentialStorageRef storage )// Caching policiestoolbox fn URLSessionConfigurationURLCache( URLSessionConfigurationRef ref ) = URLCacheReftoolbox URLSessionConfigurationSetURLCache( URLSessionConfigurationRef ref, URLCacheRef cache )toolbox fn URLSessionConfigurationRequestCachePolicy( URLSessionConfigurationRef ref ) = NSURLRequestCachePolicytoolbox URLSessionConfigurationSetRequestCachePolicy( URLSessionConfigurationRef ref, NSURLRequestCachePolicy policy )// Background transferstoolbox fn URLSessionConfigurationIsDiscretionary( URLSessionConfigurationRef ref ) = BOOLtoolbox URLSessionConfigurationSetDiscretionary( URLSessionConfigurationRef ref, BOOL flag )toolbox fn URLSessionConfigurationShouldUseExtendedBackgroundIdleMode( URLSessionConfigurationRef ref ) = BOOL     toolbox URLSessionConfigurationSetShouldUseExtendedBackgroundIdleMode( URLSessionConfigurationRef ref, BOOL flag )// Custom protocolstoolbox fn URLSessionConfigurationProtocoClasses( URLSessionConfigurationRef ref ) = CFArrayReftoolbox URLSessionConfigurationSetProtocoClasses( URLSessionConfigurationRef ref, CFArrayRef classes )// HTTP policy and proxy propertiestoolbox fn URLSessionConfigurationHTTPMaximumConnectionsPerHost( URLSessionConfigurationRef ref ) = NSIntegertoolbox URLSessionConfigurationSetHTTPMaximumConnectionsPerHost( URLSessionConfigurationRef ref, NSInteger connections )toolbox fn URLSessionConfigurationHTTPShouldUsePipelining( URLSessionConfigurationRef ref ) = BOOLtoolbox URLSessionConfigurationSetHTTPShouldUsePipelining( URLSessionConfigurationRef ref, BOOL flag )toolbox fn URLSessionConfigurationConnectionProxyDictionary( URLSessionConfigurationRef ref ) = CFDictionaryReftoolbox URLSessionConfigurationSetConnectionProxyDictionary( URLSessionConfigurationRef ref, CFDictionaryRef proxy )/*  URLSessionTask  Inherits from: Object  NSURLSessionTask - https://developer.apple.com/documentation/foundation/nsurlsessiontask*/// Task statetoolbox URLSessionTaskCancel( URLSessionTaskRef ref )toolbox URLSessionTaskResume( URLSessionTaskRef ref )toolbox URLSessionTaskSuspend( URLSessionTaskRef ref )toolbox fn URLSessionTaskState( URLSessionTaskRef ref ) = NSURLSessionTaskStatetoolbox fn URLSessionTaskPriority( URLSessionTaskRef ref ) = floattoolbox URLSessionTaskSetPriority( URLSessionTaskRef ref, float priority )// Task progresstoolbox fn URLSessionTaskProgress( URLSessionTaskRef ref ) = ProgressReftoolbox fn URLSessionTaskCountOfBytesExpectedToReceive( URLSessionTaskRef ref ) = SInt64toolbox fn URLSessionTaskCountOfBytesReceived( URLSessionTaskRef ref ) = SInt64toolbox fn URLSessionTaskCountOfBytesExpectedToSend( URLSessionTaskRef ref ) = SInt64toolbox fn URLSessionTaskCountOfBytesSent( URLSessionTaskRef ref ) = SInt64// General task infotoolbox fn URLSessionTaskCurrentRequest( URLSessionTaskRef ref ) = URLRequestReftoolbox fn URLSessionTaskOriginalRequest( URLSessionTaskRef ref ) = URLRequestReftoolbox fn URLSessionTaskResponse( URLSessionTaskRef ref ) = URLResponseReftoolbox fn URLSessionTaskDescription( URLSessionTaskRef ref ) = CFStringReftoolbox URLSessionTaskSetDescription( URLSessionTaskRef ref, CFStringRef description )toolbox fn URLSessionTaskIdentifier( URLSessionTaskRef ref ) = NSUIntegertoolbox fn URLSessionTaskError( URLSessionTaskRef ref ) = ErrorRef// Behavior#if _MACOSMAXALLOWED >= 110300toolbox fn URLSessionTaskPrefersIncrementalDelivery( URLSessionTaskRef ref ) = BOOL// macOS 11.3+#endif// 110300// Scheduling taskstoolbox fn URLSessionTaskCountOfBytesClientExpectsToReceive( URLSessionTaskRef ref ) = SInt64toolbox fn URLSessionTaskCountOfBytesClientExpectsToSend( URLSessionTaskRef ref ) = SInt64    toolbox fn URLSessionTaskEarliestBeginDate( URLSessionTaskRef ref ) = CFDateRef               /*  URLSessionDataTask  Inherits from: URLSessionTask/Object  NSURLSessionDataTask - https://developer.apple.com/documentation/foundation/nsurlsessiondatatask?language=objc*//*  URLSessionDownloadTask  Inherits from: URLSessionTask/Object  NSURLSessionDownloadTask - https://developer.apple.com/documentation/foundation/nsurlsessiondownloadtask*/// Cancel download/*  URLSessionDownloadTaskCancelByProducingResumeData  Handler params:  ( task as URLSessionDownloadTaskRef, resumeData as CFDataRef, userData as ptr )*/toolbox URLSessionDownloadTaskCancelByProducingResumeData( URLSessionDownloadTaskRef ref, ptr handlerAddress, ptr userData )/*  URLSessionUploadTask  Inherits from: URLSessionDataTask/URLSessionTask/Object  NSURLSessionUploadTask - https://developer.apple.com/documentation/foundation/nsurlsessionuploadtask*/// Intance methods#if _MACOSMAXALLOWED >= 140000/*  URLSessionUploadTaskCancelByProducingResumeData  completion handler:    void local fn MyCompletionHandler( ref as URLSessionUploadTaskRef, resumeData as CFDataRef, userData as ptr )      // ...    end fn*/toolbox URLSessionUploadTaskCancelByProducingResumeData( URLSessionUploadTaskRef ref, ptr completionHandler, ptr userData )// macOS 14.0+#endif// 140000/*  URLSessionStreamTask  Inherits from: URLSessionTask/Object  NSURLSessionStreamTask - https://developer.apple.com/documentation/foundation/nsurlsessionstreamtask?language=objc*/// Reading and writing/*  URLSessionStreamTaskReadData  Handler params:  ( task as URLSessionStreamTaskRef, dta as CFDataRef, atEOF as BOOL, err as ErrorRef, userData as ptr )*/toolbox URLSessionStreamTaskReadData( URLSessionStreamTaskRef ref, NSUInteger minLength, NSUInteger maxLength, CFTimeInterval timeout, ptr handlerAddress, ptr userData )/*  URLSessionStreamTaskWriteData  Handler params:  ( task as URLSessionStreamTaskRef, err as ErrorRef, userData as ptr )*/toolbox URLSessionStreamTaskWriteData( URLSessionStreamTaskRef ref, CFDataRef dta, CFTimeInterval timeout, ptr handlerAddress, ptr userData )// Capture streamstoolbox URLSessionStreamCaptureStreams( URLSessionStreamTaskRef ref )toolbox URLSessionStreamCloseWrite( URLSessionStreamTaskRef ref )// Secure connectionstoolbox URLSessionStreamStartSecureConnection( URLSessionStreamTaskRef ref )toolbox URLSessionStreamStopSecureConnection( URLSessionStreamTaskRef ref )