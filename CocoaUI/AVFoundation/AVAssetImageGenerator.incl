/*  AVAssetImageGenerator - https://developer.apple.com/documentation/avfoundation/avassetimagegenerator?language=objc  Bernie Wylde 20230501  Framework: AVFoundation  Inherits from: Object*/#if ndef _DEFINEDINCOCOA#define AVAssetImageGeneratorApertureMode as CFStringRef#endifsystem CFStringRef AVAssetImageGeneratorApertureModeCleanAperturesystem CFStringRef AVAssetImageGeneratorApertureModeEncodedPixelssystem CFStringRef AVAssetImageGeneratorApertureModeProductionAperture#if ndef _DEFINEDINCOCOA#define AVAssetImageGeneratorResult as NSInteger#endifsystem AVAssetImageGeneratorResult AVAssetImageGeneratorSucceeded // = 0system AVAssetImageGeneratorResult AVAssetImageGeneratorFailed    // = 1system AVAssetImageGeneratorResult AVAssetImageGeneratorCancelled // = 2// dynamic range policy#if _MACOSMAXALLOWED >= 150000#if ndef _DEFINEDINCOCOA#define AVAssetImageGeneratorDynamicRangePolicy as CFStringRef        // macOS 15.0+#endifsystem CFStringRef AVAssetImageGeneratorDynamicRangePolicyForceSDR    // macOS 15.0+system CFStringRef AVAssetImageGeneratorDynamicRangePolicyMatchSource // macOS 15.0+#endif // 150000// Createtoolbox fn AVAssetImageGeneratorWithAsset( AVAssetRef asset ) = AVAssetImageGeneratorRef// Configure image generationtoolbox fn AVAssetImageGeneratorMaximumSize( AVAssetImageGeneratorRef ref ) = CGSizetoolbox AVAssetImageGeneratorSetMaximumSize( AVAssetImageGeneratorRef ref, CGSize size )toolbox fn AVAssetImageGeneratorAppliesPreferredTrackTransform( AVAssetImageGeneratorRef ref ) = BOOLtoolbox AVAssetImageGeneratorSetAppliesPreferredTrackTransform( AVAssetImageGeneratorRef ref, BOOL flag )toolbox fn AVAssetImageGeneratorRequestedTimeToleranceBefore( AVAssetImageGeneratorRef ref ) = CMTimetoolbox AVAssetImageGeneratorSetRequestedTimeToleranceBefore( AVAssetImageGeneratorRef ref, CMTime timeTolerance )toolbox fn AVAssetImageGeneratorRequestedTimeToleranceAfter( AVAssetImageGeneratorRef ref ) = CMTimetoolbox AVAssetImageGeneratorSetRequestedTimeToleranceAfter( AVAssetImageGeneratorRef ref, CMTime timeTolerance )toolbox fn avAssetImageGeneratorApertureMode( AVAssetImageGeneratorRef ref ) = CFStringRef// lowercase 'av' to avoid class with typetoolbox AVAssetImageGeneratorSetApertureMode( AVAssetImageGeneratorRef ref, CFStringRef apertureMode )#if _MACOSMAXALLOWED >= 150000toolbox fn avAssetImageGeneratorDynamicRangePolicy( AVAssetImageGeneratorRef ref ) = CFStringRef       // macOS 15.0+ // lowercase 'av' to avoid clash with typetoolbox AVAssetImageGeneratorSetDynamicRangePolicy( AVAssetImageGeneratorRef ref, CFStringRef policy ) // macOS 15.0+#endif // 150000// Configure compositingtoolbox fn AVAssetImageGeneratorVideoComposition( AVAssetImageGeneratorRef ref ) = AVVideoCompositionReftoolbox AVAssetImageGeneratorSetVideoComposition( AVAssetImageGeneratorRef ref, AVVideoCompositionRef videoComposition )toolbox fn AVAssetImageGeneratorCustomVideoCompositor( AVAssetImageGeneratorRef ref ) = AVVideoCompositingRef// Generate images#if _MACOSMAXALLOWED >= 130000/*  AVAssetImageGeneratorGenerateCGImageAsynchronouslyForTime  completion handler:    void MyCompletionHandler( ref as AVAssetImageGeneratorRef, image as CGImageRef, actualTime as CMTime, err as ErrorRef, userData as ptr )      // ...    end fn*/toolbox AVAssetImageGeneratorGenerateCGImageAsynchronouslyForTime( AVAssetImageGeneratorRef ref, CMTime requestedTime, ptr handler, ptr userData )// macOS 13.0+/*  AVAssetImageGeneratorGenerateCGImagesAsynchronouslyForTimes  completion handler:    void MyCompletionHandler( ref as AVAssetImageGeneratorRef, image as CGImageRef, actualTime as CMTime, result as AVAssetImageGeneratorResult, err as ErrorRef, userData as ptr )      // ...    end fn*/toolbox AVAssetImageGeneratorGenerateCGImagesAsynchronouslyForTimes( AVAssetImageGeneratorRef ref, CFArrayRef requestedTimes, ptr handler, ptr userData )// macOS 13.0+/*  AVAssetImageGeneratorGenerateImageAsynchronouslyForTime  completion handler:    void MyCompletionHandler( ref as AVAssetImageGeneratorRef, image as ImageRef, actualTime as CMTime, err as ErrorRef, userData as ptr )      // ...    end fn*/toolbox AVAssetImageGeneratorGenerateImageAsynchronouslyForTime( AVAssetImageGeneratorRef ref, CMTime requestedTime, ptr handler, ptr userData )// macOS 13.0+/*  AVAssetImageGeneratorGenerateImagesAsynchronouslyForTimes  completion handler:    void MyCompletionHandler( ref as AVAssetImageGeneratorRef, image as ImageRef, actualTime as CMTime, result as AVAssetImageGeneratorResult, err as ErrorRef, userData as ptr )      // ...    end fn*/toolbox AVAssetImageGeneratorGenerateImagesAsynchronouslyForTimes( AVAssetImageGeneratorRef ref, CFArrayRef requestedTimes, ptr handler, ptr userData )// macOS 13.0+#endif// 130000toolbox AVAssetImageGeneratorCancelAllCGImageGeneration( AVAssetImageGeneratorRef ref )toolbox fn AVAssetImageGeneratorCopyCGImageAtTime( AVAssetImageGeneratorRef ref, CMTime requestedTime, CMTime *actualTime, ErrorRef *error ) = CGImageRef// returned CGImage must be released // deprecated: 13.0 use: AVAssetImageGeneratorGenerateCGImageAsynchronouslyForTimetoolbox fn AVAssetImageGeneratorCGImageAtTime( AVAssetImageGeneratorRef ref, CMTime requestedTime, CMTime *actualTime, ErrorRef *error ) = CGImageRef// deprecated: 13.0 use: AVAssetImageGeneratorGenerateCGImageAsynchronouslyForTimetoolbox fn AVAssetImageGeneratorImageAtTime( AVAssetImageGeneratorRef ref, CMTime requestedTime, CMTime *actualTime, ErrorRef *error ) = ImageRef// deprecated: 13.0 use: AVAssetImageGeneratorGenerateImageAsynchronouslyForTime// Access assettoolbox fn AVAssetImageGeneratorAsset( AVAssetImageGeneratorRef ref ) = AVAssetRef