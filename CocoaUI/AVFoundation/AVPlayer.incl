/*  AVPlayer - https://developer.apple.com/documentation/avfoundation/avplayer?language=objc  Bernie Wylde 20180309  Framework: AVFoundation  Inherits from: Object*/// action at item end#if ndef _DEFINEDINCOCOA#define AVPlayerActionAtItemEnd as NSInteger#endifsystem AVPlayerActionAtItemEnd AVPlayerActionAtItemEndAdvancesystem AVPlayerActionAtItemEnd AVPlayerActionAtItemEndPausesystem AVPlayerActionAtItemEnd AVPlayerActionAtItemEndNone// reason for waiting to play#if ndef _DEFINEDINCOCOA#define AVPlayerWaitingReason as CFStringRef#endifsystem CFStringRef AVPlayerWaitingWhileEvaluatingBufferingRateReasonsystem CFStringRef AVPlayerWaitingWithNoItemToPlayReasonsystem CFStringRef AVPlayerWaitingToMinimizeStallsReason// time control status#if ndef _DEFINEDINCOCOA#define AVPlayerTimeControlStatus as NSInteger#endifsystem AVPlayerTimeControlStatus AVPlayerTimeControlStatusPausedsystem AVPlayerTimeControlStatus AVPlayerTimeControlStatusWaitingToPlayAtSpecifiedRatesystem AVPlayerTimeControlStatus AVPlayerTimeControlStatusPlaying// status#if ndef _DEFINEDINCOCOA#define AVPlayerStatus as NSInteger#endifsystem AVPlayerStatus AVPlayerStatusUnknownsystem AVPlayerStatus AVPlayerStatusReadyToPlaysystem AVPlayerStatus AVPlayerStatusFailed// notifications#if _MACOSMAXALLOWED >= 101500system CFStringRef AVPlayerEligibleForHDRPlaybackDidChangeNotification// macOS 10.15+#endif// 101500// Classtoolbox fn AVPlayerClass = ClassRef// Inittoolbox fn AVPlayerWithURL( CFURLRef url ) = AVPlayerReftoolbox fn AVPlayerWithPlayerItem( AVPlayerItemRef item ) = AVPlayerRef// Playbacktoolbox AVPlayerPlay( AVPlayerRef player )toolbox AVPlayerPause( AVPlayerRef player )toolbox fn AVPlayerRate( AVPlayerRef player ) = floattoolbox AVPlayerSetRate( AVPlayerRef player, float rate )toolbox fn avPlayerActionAtItemEnd( AVPlayerRef player ) = AVPlayerActionAtItemEnd// lowercase 'av' to avoid clash with var typetoolbox AVPlayerSetActionAtItemEnd( AVPlayerRef player, AVPlayerActionAtItemEnd action )toolbox AVPlayerReplaceCurrentItemWithPlayerItem( AVPlayerRef player, AVPlayerItemRef item )#if _MACOSMAXALLOWED >= 101400toolbox fn AVPlayerPreventsDisplaySleepDuringVideoPlayback( AVPlayerRef player ) = BOOL// macOS 10.14+toolbox AVPlayerSetPreventsDisplaySleepDuringVideoPlayback( AVPlayerRef player, BOOL flag )// macOS 10.14+#endif// 101400// Waiting behaviortoolbox fn AVPlayerAutomaticallyWaitsToMinimizeStalling( AVPlayerRef player ) = BOOLtoolbox AVPlayerSetAutomaticallyWaitsToMinimizeStalling( AVPlayerRef player, BOOL flag )toolbox fn AVPlayerReasonForWaitingToPlay( AVPlayerRef player ) = CFStringReftoolbox fn avPlayerTimeControlStatus( AVPlayerRef player ) = AVPlayerTimeControlStatus     // lowercase 'av' to avoid clash with var typetoolbox AVPlayerPlayImmediatelyAtRate( AVPlayerRef player, float rate )// Managing timetoolbox fn AVPlayerCurrentTime( AVPlayerRef player ) = CMTimetoolbox AVPlayerSeekToTime( AVPlayerRef player, CMTime tm )toolbox AVPlayerSeekToDate( AVPlayerRef player, CFDateRef dt )// ...toolbox AVPlayerSeekToTimeWithTolerance( AVPlayerRef player, CMTime tm, CMTime toleranceBefore, CMTime toleranceAfter )// ...// Observing time// ...// Media selectiontoolbox fn AVPlayerAppliesMediaSelectionCriteriaAutomatically( AVPlayerRef player ) = BOOLtoolbox AVPlayerSetAppliesMediaSelectionCriteriaAutomatically( AVPlayerRef player, BOOL flag )toolbox fn AVPlayerMediaSelectionCriteriaForMediaCharacteristic( AVPlayerRef player, AVMediaCharacteristic characteristic ) = AVPlayerMediaSelectionCriteriaReftoolbox AVPlayerSetMediaSelectionCriteriaForMediaCharacteristic( AVPlayerRef player, AVPlayerMediaSelectionCriteriaRef criteria, AVMediaCharacteristic characteristic )// External playbacktoolbox fn AVPlayerAllowsExternalPlayback( AVPlayerRef player ) = BOOLtoolbox AVPlayerSetAllowsExternalPlayback( AVPlayerRef player, BOOL flag )toolbox fn AVPlayerIsExternalPlaybackActive( AVPlayerRef player ) = BOOL// Synch playback to external sourcetoolbox AVPlayerSetRateTimeAtHostTime( AVPlayerRef player, float rate, CMTime itemTime, CMTime hostClockTime )/*  AVPlayerPrerollAtRate  completion handler example:    void local fn MyCompletionHandler( player as AVPlayerRef, finished as BOOL, userData as ptr )      // ...    end fn*/toolbox AVPlayerPrerollAtRate( AVPlayerRef player, float rate, ptr completionHandler, ptr userData )toolbox AVPlayerCancelPendingPrerolls( AVPlayerRef player )toolbox fn AVPlayerMasterClock( AVPlayerRef player ) = CMClockReftoolbox AVPlayerSetMasterClock( AVPlayerRef player, CMClockRef clock )// Audio outputtoolbox fn AVPlayerIsMuted( AVPlayerRef player ) = BOOLtoolbox AVPlayerSetMuted( AVPlayerRef player, BOOL flag )toolbox fn AVPlayerVolume( AVPlayerRef player ) = floattoolbox AVPlayerSetVolume( AVPlayerRef player, float volume )toolbox fn AVPlayerAudioOutputDeviceUniqueID( AVPlayerRef player ) = CFStringReftoolbox AVPlayerSetAudioOutputDeviceUniqueID( AVPlayerRef player, CFStringRef uniqueID )// Player propertiestoolbox fn avPlayerStatus( AVPlayerRef player ) = AVPlayerStatus// lowercase 'av' to avoid clash with var typetoolbox fn AVPlayerError( AVPlayerRef player ) = ErrorReftoolbox fn AVPlayerCurrentItem( AVPlayerRef player ) = AVPlayerItemReftoolbox fn AVPlayerOutputObscuredDueToInsufficientExternalProtection( AVPlayerRef player ) = BOOL// HDR playback#if _MACOSMAXALLOWED >= 101500toolbox fn AVPlayerEligibleForHDRPlayback = BOOL// macOS 10.15+#endif// 101500// GPU#if _MACOSMAXALLOWED >= 101400toolbox fn AVPlayerPreferredVideoDecoderGPURegistryID( AVPlayerRef player ) = UInt64// macOS 14.0+toolbox AVPlayerSetPreferredVideoDecoderGPURegistryID( AVPlayerRef player, UInt64 registryID )// macOS 14.0+#endif // 101400// Conveniencetoolbox fn AVPlayerIsPlaying( AVPlayerRef ref ) = BOOL/*  AVQueuePlayer - https://developer.apple.com/documentation/avfoundation/avqueueplayer?language=objc  Inherits from: AVPlayer/Object*/// Createtoolbox fn AVQueuePlayerWithItems( CFArrayRef items ) = AVQueuePlayerRef// Queuetoolbox fn AVQueuePlayerItems( AVQueuePlayerRef ref ) = CFArrayReftoolbox AVQueuePlayerAdvanceToNextItem( AVQueuePlayerRef ref )toolbox fn AVQueuePlayerCanInsertItem( AVQueuePlayerRef ref, AVPlayerItemRef item, AVPlayerItemRef afterItem ) = BOOLtoolbox AVQueuePlayerInsertItem( AVQueuePlayerRef ref, AVPlayerItemRef item, AVPlayerItemRef afterItem )toolbox AVQueuePlayerRemoveItem( AVQueuePlayerRef ref, AVPlayerItemRef item )toolbox AVQueuePlayerRemoveAllItems( AVQueuePlayerRef ref )