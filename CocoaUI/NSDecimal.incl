/*  NSDecimal.incl - https://developer.apple.com/documentation/foundation/nsdecimal  Bernie Wylde 20180603  Framework: Foundation*/#if ndef _DEFINEDINCOCOA#define NSRoundingMode as NSUInteger#endifsystem NSRoundingMode NSRoundPlainsystem NSRoundingMode NSRoundDownsystem NSRoundingMode NSRoundUpsystem NSRoundingMode NSRoundBankers#if ndef _DEFINEDINCOCOA#define NSCalculationError as NSUInteger#endifsystem NSCalculationError NSCalculationNoErrorsystem NSCalculationError NSCalculationLossOfPrecisionsystem NSCalculationError NSCalculationUnderflowsystem NSCalculationError NSCalculationOverflowsystem NSCalculationError NSCalculationDivideByZeroBeginCDeclaration#define nsDecimalString( dcm, locale ) (__bridge CFStringRef)NSDecimalString( dcm, (NSLocale *)locale )	NSDecimal NSDecimalWithString( CFStringRef string );EndCBeginCFunctionNSDecimal NSDecimalWithString( CFStringRef string ){    NSDecimal dcm;    NSScanner *scanner = [NSScanner scannerWithString:(__bridge NSString *)string];    [scanner scanDecimal:&dcm];    return dcm;}EndC// Create from another decimaltoolbox NSDecimalCopy( NSDecimal *dcmSrc, NSDecimal *dcmDest )// Stringtoolbox fn nsDecimalString( NSDecimal *dcm, CFLocaleRef locale ) = CFStringRef// Arithmetictoolbox NSDecimalCompact( NSDecimal *dcm )toolbox fn NSDecimalAdd( NSDecimal *result, NSDecimal *leftOperand, NSDecimal *rightOperand, NSRoundingMode roundingMode ) = NSCalculationErrortoolbox fn NSDecimalSubtract( NSDecimal *result, NSDecimal *leftOperand, NSDecimal *rightOperand, NSRoundingMode roundingMode ) = NSCalculationErrortoolbox fn NSDecimalDivide( NSDecimal *result, NSDecimal *leftOperand, NSDecimal *rightOperand, NSRoundingMode roundingMode ) = NSCalculationErrortoolbox fn NSDecimalMultiply( NSDecimal *result, NSDecimal *leftOperand, NSDecimal *rightOperand, NSRoundingMode roundingMode ) = NSCalculationErrortoolbox fn NSDecimalMultiplyByPowerOf10( NSDecimal *result, NSDecimal *number, short power, NSRoundingMode roundingMode ) = NSCalculationErrortoolbox NSDecimalRound( NSDecimal *result, NSDecimal *number, NSInteger scale, NSRoundingMode roundingMode )toolbox fn NSDecimalPower( NSDecimal *result, NSDecimal *number, NSUInteger power, NSRoundingMode roundingMode ) = NSCalculationErrortoolbox fn NSDecimalNormalize( NSDecimal *number1, NSDecimal *number2, NSRoundingMode roundingMode ) = NSCalculationError// Comparetoolbox fn NSDecimalCompare( NSDecimal *dcm1, NSDecimal *dcm2 ) = NSComparisonResult// Validationtoolbox fn NSDecimalIsNotANumber( NSDecimal *dcm ) = BOOL// Conveniencetoolbox fn NSDecimalWithString( CFStringRef string ) = NSDecimal