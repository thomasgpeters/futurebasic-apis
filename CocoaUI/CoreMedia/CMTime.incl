/*  CMTime.incl - https://developer.apple.com/documentation/coremedia/cmtime-u58?language=objc  Bernie Wylde 20180801  Framework: CoreMedia*/#if ndef _DEFINEDINCOCOA#define CMTimeValue as SInt64#define CMTimeScale as SInt32#define CMTimeEpoch as SInt64#define CMTimeFlags as UInt32#endifsystem CMTimeFlags kCMTimeFlags_Validsystem CMTimeFlags kCMTimeFlags_HasBeenRoundedsystem CMTimeFlags kCMTimeFlags_PositiveInfinitysystem CMTimeFlags kCMTimeFlags_NegativeInfinitysystem CMTimeFlags kCMTimeFlags_Indefinitesystem CMTimeFlags kCMTimeFlags_ImpliedValueFlagsMask// = kCMTimeFlags_PositiveInfinity + kCMTimeFlags_NegativeInfinity + kCMTimeFlags_Indefinite#if ndef _DEFINEDINCOCOA#define CMTimeRoundingMethod as UInt32#endifsystem CMTimeRoundingMethod kCMTimeRoundingMethod_RoundHalfAwayFromZerosystem CMTimeRoundingMethod kCMTimeRoundingMethod_RoundTowardZerosystem CMTimeRoundingMethod kCMTimeRoundingMethod_RoundAwayFromZerosystem CMTimeRoundingMethod kCMTimeRoundingMethod_QuickTimesystem CMTimeRoundingMethod kCMTimeRoundingMethod_RoundTowardPositiveInfinitysystem CMTimeRoundingMethod kCMTimeRoundingMethod_RoundTowardNegativeInfinitysystem CMTimeRoundingMethod kCMTimeRoundingMethod_Default// = kCMTimeRoundingMethod_RoundHalfAwayFromZero#if ndef _DEFINEDINCOCOAbegin record CMTimeCMTimeValue valueCMTimeScale timescaleCMTimeFlags flagsCMTimeEpoch epochend record#endifsystem CMTime kCMTimeInvalidsystem CMTime kCMTimeIndefinitesystem CMTime kCMTimePositiveInfinitysystem CMTime kCMTimeNegativeInfinitysystem CMTime kCMTimeZerosystem CFStringRef kCMTimeValueKeysystem CFStringRef kCMTimeScaleKeysystem CFStringRef kCMTimeEpochKeysystem CFStringRef kCMTimeFlagsKey// Createtoolbox fn CMTimeMake( SInt64 value, SInt32 timescale ) = CMTimetoolbox fn CMTimeMakeFromDictionary( CFDictionaryRef dict ) = CMTimetoolbox fn CMTimeMakeWithEpoch( SInt64 value, SInt32 timescale, SInt64 epoch ) = CMTimetoolbox fn CMTimeMakeWithSeconds( double second, SInt32 preferredTimescale ) = CMTime// Common operationstoolbox fn CMTimeAdd( CMTime addend1, CMTime addend2 ) = CMTimetoolbox fn CMTimeSubtract( CMTime minuend, CMTime subtrahend ) = CMTimetoolbox fn CMTimeMultiply( CMTime time, SInt32 multiplier ) = CMTimetoolbox fn CMTimeMultiplyByFloat64( CMTime time, double multiplier ) = CMTimetoolbox fn CMTimeMultiplyByRatio( CMTime time, SInt32 multiplier, SInt32 divisor ) = CMTimetoolbox fn CMTimeConvertScale( CMTime time, SInt32 newTimescale, CMTimeRoundingMethod method ) = CMTime// Evaluating timestoolbox fn CMTimeCompare( CMTime time1, CMTime time2 ) = SInt32toolbox fn CMTimeAbsoluteValue( CMTime time ) = CMTimetoolbox fn CMTimeGetSeconds( CMTime time ) = doubletoolbox fn CMTimeMaximum( CMTime time1, CMTime time2 ) = CMTimetoolbox fn CMTimeMinimum( CMTime time1, CMTime time2 ) = CMTimetoolbox fn CMTIME_IS_VALID( CMTime time ) = BOOLtoolbox fn CMTIME_IS_INVALID( CMTime time ) = BOOLtoolbox fn CMTIME_IS_POSITIVE_INFINITY( CMTime time ) = BOOLtoolbox fn CMTIME_IS_NEGATIVE_INFINITY( CMTime time ) = BOOLtoolbox fn CMTIME_IS_INDEFINITE( CMTime time ) = BOOLtoolbox fn CMTIME_IS_NUMERIC( CMTime time ) = BOOLtoolbox fn CMTIME_IS_HAS_BEEN_ROUNDED( CMTime time ) = BOOL//toolbox fn CMTIME_COMPARE_INLINE( CMTime time1, comparator, CMTime time2 ) = BOOL// Utilitiestoolbox CMTimeShow( CMTime time )toolbox fn CMTimeCopyDescription( CFAllocatorRef allocator, CMTime time ) = CFStringRef// returned value must be released by the callertoolbox fn CMTimeCopyAsDictionary( CMTime time, CFAllocatorRef allocator ) = CFDictionaryRef// returned value must be released by the caller