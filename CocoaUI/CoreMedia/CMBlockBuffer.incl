/*  CMBlockBuffer.incl  Bernie Wylde 20241227  Framework: CoreMedia*/// errorssystem UInt32 kCMBlockBufferNoErr                        // = 0,system UInt32 kCMBlockBufferStructureAllocationFailedErr //	= -12700,system UInt32 kCMBlockBufferBlockAllocationFailedErr     // = -12701,system UInt32 kCMBlockBufferBadCustomBlockSourceErr      // = -12702,system UInt32 kCMBlockBufferBadOffsetParameterErr        // = -12703,system UInt32 kCMBlockBufferBadLengthParameterErr        // = -12704,system UInt32 kCMBlockBufferBadPointerParameterErr       // = -12705,system UInt32 kCMBlockBufferEmptyBBufErr                 // = -12706,system UInt32 kCMBlockBufferUnallocatedBlockErr          // = -12707,system UInt32 kCMBlockBufferInsufficientSpaceErr         // = -12708,// flags#if ndef _DEFINEDINCOCOA#define CMBlockBufferFlags as UInt32#endif // _DEFINEDINCOCOAsystem CMBlockBufferFlags kCMBlockBufferAssureMemoryNowFlag      // = (1L<<0),system CMBlockBufferFlags kCMBlockBufferAlwaysCopyDataFlag       // = (1L<<1),system CMBlockBufferFlags kCMBlockBufferDontOptimizeDepthFlag    // = (1L<<2),system CMBlockBufferFlags kCMBlockBufferPermitEmptyReferenceFlag // = (1L<<3)// custom block source#if ndef _DEFINEDINCOCOAbegin record CMBlockBufferCustomBlockSourceUInt32	versionptr allocateBlockptr freeBlockptr refConend record#endif // _DEFINEDINCOCOAsystem UInt32	kCMBlockBufferCustomBlockSourceVersion // = 0// Createtoolbox fn CMBlockBufferCreateEmpty( CFAllocatorRef structureAllocator, UInt32 subBlockCapacity, CMBlockBufferFlags flags, CMBlockBufferRef *blockBufferOut ) = OSStatustoolbox fn CMBlockBufferCreateWithMemoryBlock( CFAllocatorRef structureAllocator, ptr memoryBlock, long blockLength, CFAllocatorRef blockAllocator, CMBlockBufferCustomBlockSource *customBlockSource, long offsetToData, long dtaLength, CMBlockBufferFlags flags, CMBlockBufferRef *blockBufferOut ) = OSStatustoolbox fn CMBlockBufferCreateWithBufferReference( CFAllocatorRef structureAllocator, CMBlockBufferRef bufferReference, long offsetToData, long dtaLength, CMBlockBufferFlags flags, CMBlockBufferRef *blockBufferOut ) = OSStatustoolbox fn CMBlockBufferCreateContiguous( CFAllocatorRef structureAllocator, CMBlockBufferRef sourceBuffer, CFAllocatorRef blockAllocator, CMBlockBufferCustomBlockSource *customBlockSource, long offsetToData, long dtaLength, CMBlockBufferFlags flags, CMBlockBufferRef *blockBufferOut ) = OSStatus// Modifytoolbox fn CMBlockBufferAppendMemoryBlock( CMBlockBufferRef theBuffer, ptr memoryBlock, long blockLength, CFAllocatorRef blockAllocator, CMBlockBufferCustomBlockSource *customBlockSource, long offsetToData, long dtaLength, CMBlockBufferFlags flags ) = OSStatustoolbox fn CMBlockBufferAppendBufferReference( CMBlockBufferRef theBuffer, CMBlockBufferRef targetBBuf, long offsetToData, long dtaLength, CMBlockBufferFlags flags ) = OSStatustoolbox fn CMBlockBufferAssureBlockMemory( CMBlockBufferRef theBuffer ) = OSStatustoolbox fn CMBlockBufferAccessDataBytes( CMBlockBufferRef theBuffer, long offset, long length, ptr temporaryBlock, ptr returnedPointerOut ) = OSStatustoolbox fn CMBlockBufferCopyDataBytes( CMBlockBufferRef theSourceBuffer, long offsetToData, long dtaLength, ptr destination ) = OSStatustoolbox fn CMBlockBufferReplaceDataBytes( ptr sourceBytes, CMBlockBufferRef destinationBuffer, long offsetIntoDestination, long dtaLength ) = OSStatustoolbox fn CMBlockBufferFillDataBytes( char fillByte, CMBlockBufferRef destinationBuffer, long offsetIntoDestination, long dtaLength ) = OSStatus// Inspecttoolbox fn CMBlockBufferGetDataPointer( CMBlockBufferRef theBuffer, long offset, long *lengthAtOffsetOut, long *totalLengthOut, ptr dataPointerOut ) = OSStatustoolbox fn CMBlockBufferGetDataLength( CMBlockBufferRef theBuffer ) = longtoolbox fn CMBlockBufferIsRangeContiguous( CMBlockBufferRef theBuffer, long offset, long length ) = Booleantoolbox fn CMBlockBufferIsEmpty( CMBlockBufferRef theBuffer ) = Boolean// Type identifiertoolbox fn CMBlockBufferGetTypeID = CFTypeID