/*  FilePresenter.incl  Bernie Wylde 20231231  Framework: Foundation  Protocol  NSFilePresenter - https://developer.apple.com/documentation/foundation/nsfilepresenter?language=objc*/toolbox fn FilePresenterWithURL( CFURLRef url ) = FilePresenterRef#if 0// Attributestoolbox fn FilePresenterPresentedItemURL( FilePresenterRef ref ) = CFURLReftoolbox fn FilePresenterPresentedItemOperationQueue( FilePresenterRef ref ) = OperationQueueReftoolbox fn FilePresenterPrimaryPresentedItemURL( FilePresenterRef ref ) = CFURLRef// Relinquishing managed files/*  FilePresenterRelinquishPresentedItemToReader  reader:    void local fn MyReader( ref as FilePresenterRef, ?, userData as ptr )*///toolbox FilePresenterRelinquishPresentedItemToReader( FilePresenterRef ref, ptr reader, ptr userData )/*  FilePresenterRelinquishPresentedItemToWriter  reader:    void local fn MyReader( ref as FilePresenterRef, ?, userData as ptr )*///toolbox FilePresenterRelinquishPresentedItemToWriter( FilePresenterRef ref, ptr writer, ptr userData )// Handling changes to files/*  FilePresenterSavePresentedItemChanges  completion handler    void local fn MyCompletionHandler( ref as FilePresenterRef, err as ErrorRef, userData as ptr )      // ...    end fn*/toolbox FilePresenterSavePresentedItemChanges( FilePresenterRef ref, ptr completionHandler, ptr userData )/*  FilePresenterAccommodatePresentedItemDeletion  completion handler    void local fn MyCompletionHandler( ref as FilePresenterRef, err as ErrorRef, userData as ptr )      // ...    end fn*/toolbox FilePresenterAccommodatePresentedItemDeletion( FilePresenterRef ref, ptr completionHandler, ptr userData )toolbox FilePresenterPresentedItemDidMove( FilePresenterRef ref, CFURLRef url )toolbox FilePresenterPresentedItemDidChange( FilePresenterRef ref )// Responding to version changestoolbox FilePresenterPresentedItemDidGainVersion( FilePresenterRef ref, FileVersionRef version )toolbox FilePresenterPresentedItemDidLoseVersion( FilePresenterRef ref, FileVersionRef version )toolbox FilePresenterPresentedItemDidResolveConflictVersion( FilePresenterRef ref, FileVersionRef version )toolbox FilePresenterPresentedSubitemDidGainVersion( FilePresenterRef ref, CFURLRef url, FileVersionRef version )toolbox FilePresenterPresentedSubitemDidLoseVersion( FilePresenterRef ref, CFURLRef url, FileVersionRef version )toolbox FilePresenterPresentedSubitemDidResolveConflictVersion( FilePresenterRef ref, CFURLRef url, FileVersionRef version )// Handling changes to presented directory/*  FilePresenterAccommodatePresentedSubitemDeletion  completion handler:    void local fn MyCompletionHandler( ref as FilePresenterRef, err as ErrorRef, userData as ptr )      // ...    end fn*/toolbox FilePresenterAccommodatePresentedSubitemDeletion( FilePresenterRef ref, CFURLRef url, ptr completionHandler, ptr userData )toolbox FilePresenterPresentedSubitemDidAppear( FilePresenterRef ref, CFURLRef url )toolbox FilePresenterPresentedSubitemDidMove( FilePresenterRef ref, CFURLRef oldURL, CFURLRef newURL )toolbox FilePresenterPresentedSubitemDidChange( FilePresenterRef ref, CFURLRef url )// Ubiquity change notificationstoolbox fn FilePresenterObservedPresentedItemUbiquityAttributes( FilePresenterRef ref ) = CFSetReftoolbox FilePresenterPresentedItemDidChangeUbiquityAttributes( FilePresenterRef ref, CFSetRef attributes )#endif // 0